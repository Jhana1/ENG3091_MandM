ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Arm_PWM.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	Arm_PWM_initVar
  19              		.bss
  20              		.type	Arm_PWM_initVar, %object
  21              		.size	Arm_PWM_initVar, 1
  22              	Arm_PWM_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.Arm_PWM_Start,"ax",%progbits
  25              		.align	2
  26              		.global	Arm_PWM_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	Arm_PWM_Start, %function
  30              	Arm_PWM_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\Arm_PWM.c"
   1:.\Generated_Source\PSoC5/Arm_PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Arm_PWM.c **** * File Name: Arm_PWM.c
   3:.\Generated_Source\PSoC5/Arm_PWM.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/Arm_PWM.c **** *
   5:.\Generated_Source\PSoC5/Arm_PWM.c **** * Description:
   6:.\Generated_Source\PSoC5/Arm_PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/Arm_PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/Arm_PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/Arm_PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/Arm_PWM.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/Arm_PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/Arm_PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/Arm_PWM.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/Arm_PWM.c **** *
  15:.\Generated_Source\PSoC5/Arm_PWM.c **** * Note:
  16:.\Generated_Source\PSoC5/Arm_PWM.c **** *
  17:.\Generated_Source\PSoC5/Arm_PWM.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/Arm_PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/Arm_PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/Arm_PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/Arm_PWM.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/Arm_PWM.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/Arm_PWM.c **** 
  24:.\Generated_Source\PSoC5/Arm_PWM.c **** #include "Arm_PWM.h"
  25:.\Generated_Source\PSoC5/Arm_PWM.c **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 2


  26:.\Generated_Source\PSoC5/Arm_PWM.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/Arm_PWM.c **** #ifdef Arm_PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/Arm_PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/Arm_PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/Arm_PWM.c **** #endif /* Arm_PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/Arm_PWM.c **** 
  32:.\Generated_Source\PSoC5/Arm_PWM.c **** uint8 Arm_PWM_initVar = 0u;
  33:.\Generated_Source\PSoC5/Arm_PWM.c **** 
  34:.\Generated_Source\PSoC5/Arm_PWM.c **** 
  35:.\Generated_Source\PSoC5/Arm_PWM.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/Arm_PWM.c **** * Function Name: Arm_PWM_Start
  37:.\Generated_Source\PSoC5/Arm_PWM.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/Arm_PWM.c **** *
  39:.\Generated_Source\PSoC5/Arm_PWM.c **** * Summary:
  40:.\Generated_Source\PSoC5/Arm_PWM.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/Arm_PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/Arm_PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/Arm_PWM.c **** *
  44:.\Generated_Source\PSoC5/Arm_PWM.c **** * Parameters:
  45:.\Generated_Source\PSoC5/Arm_PWM.c **** *  None
  46:.\Generated_Source\PSoC5/Arm_PWM.c **** *
  47:.\Generated_Source\PSoC5/Arm_PWM.c **** * Return:
  48:.\Generated_Source\PSoC5/Arm_PWM.c **** *  None
  49:.\Generated_Source\PSoC5/Arm_PWM.c **** *
  50:.\Generated_Source\PSoC5/Arm_PWM.c **** * Global variables:
  51:.\Generated_Source\PSoC5/Arm_PWM.c **** *  Arm_PWM_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/Arm_PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/Arm_PWM.c **** *
  54:.\Generated_Source\PSoC5/Arm_PWM.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/Arm_PWM.c **** void Arm_PWM_Start(void) 
  56:.\Generated_Source\PSoC5/Arm_PWM.c **** {
  33              		.loc 1 56 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC5/Arm_PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/Arm_PWM.c ****     if(Arm_PWM_initVar == 0u)
  43              		.loc 1 58 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
  60:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_Init();
  48              		.loc 1 60 0
  49 000c FFF7FEFF 		bl	Arm_PWM_Init
  61:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_initVar = 1u;
  50              		.loc 1 61 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 3


  54              	.L2:
  62:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
  63:.\Generated_Source\PSoC5/Arm_PWM.c ****     Arm_PWM_Enable();
  55              		.loc 1 63 0
  56 0016 FFF7FEFF 		bl	Arm_PWM_Enable
  64:.\Generated_Source\PSoC5/Arm_PWM.c **** 
  65:.\Generated_Source\PSoC5/Arm_PWM.c **** }
  57              		.loc 1 65 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	Arm_PWM_initVar
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	Arm_PWM_Start, .-Arm_PWM_Start
  66              		.section	.text.Arm_PWM_Init,"ax",%progbits
  67              		.align	2
  68              		.global	Arm_PWM_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	Arm_PWM_Init, %function
  72              	Arm_PWM_Init:
  73              	.LFB1:
  66:.\Generated_Source\PSoC5/Arm_PWM.c **** 
  67:.\Generated_Source\PSoC5/Arm_PWM.c **** 
  68:.\Generated_Source\PSoC5/Arm_PWM.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/Arm_PWM.c **** * Function Name: Arm_PWM_Init
  70:.\Generated_Source\PSoC5/Arm_PWM.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/Arm_PWM.c **** *
  72:.\Generated_Source\PSoC5/Arm_PWM.c **** * Summary:
  73:.\Generated_Source\PSoC5/Arm_PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/Arm_PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/Arm_PWM.c **** *  Arm_PWM_Start().
  76:.\Generated_Source\PSoC5/Arm_PWM.c **** *
  77:.\Generated_Source\PSoC5/Arm_PWM.c **** * Parameters:
  78:.\Generated_Source\PSoC5/Arm_PWM.c **** *  None
  79:.\Generated_Source\PSoC5/Arm_PWM.c **** *
  80:.\Generated_Source\PSoC5/Arm_PWM.c **** * Return:
  81:.\Generated_Source\PSoC5/Arm_PWM.c **** *  None
  82:.\Generated_Source\PSoC5/Arm_PWM.c **** *
  83:.\Generated_Source\PSoC5/Arm_PWM.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/Arm_PWM.c **** void Arm_PWM_Init(void) 
  85:.\Generated_Source\PSoC5/Arm_PWM.c **** {
  74              		.loc 1 85 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 82B0     		sub	sp, sp, #8
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if (Arm_PWM_UsingFixedFunction || Arm_PWM_UseControl)
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 4


  87:.\Generated_Source\PSoC5/Arm_PWM.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* (Arm_PWM_UsingFixedFunction || Arm_PWM_UseControl) */
  89:.\Generated_Source\PSoC5/Arm_PWM.c **** 
  90:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if(!Arm_PWM_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if(Arm_PWM_UseStatus)
  92:.\Generated_Source\PSoC5/Arm_PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/Arm_PWM.c ****             uint8 Arm_PWM_interruptState;
  94:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (Arm_PWM_UseStatus) */
  95:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* (!Arm_PWM_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/Arm_PWM.c **** 
  97:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if (Arm_PWM_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/Arm_PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_CONTROL |= Arm_PWM_CFG0_MODE;
 100:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if (Arm_PWM_DeadBand2_4)
 101:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_CONTROL |= Arm_PWM_CFG0_DB;
 102:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (Arm_PWM_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 104:.\Generated_Source\PSoC5/Arm_PWM.c ****         ctrl = Arm_PWM_CONTROL3 & ((uint8 )(~Arm_PWM_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_CONTROL3 = ctrl | Arm_PWM_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 107:.\Generated_Source\PSoC5/Arm_PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_RT1 &= ((uint8)(~Arm_PWM_RT1_MASK));
 109:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_RT1 |= Arm_PWM_SYNC;
 110:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 111:.\Generated_Source\PSoC5/Arm_PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_RT1 &= ((uint8)(~Arm_PWM_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_RT1 |= Arm_PWM_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 115:.\Generated_Source\PSoC5/Arm_PWM.c ****     #elif (Arm_PWM_UseControl)
 116:.\Generated_Source\PSoC5/Arm_PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/Arm_PWM.c ****         ctrl = Arm_PWM_CONTROL & ((uint8)(~Arm_PWM_CTRL_CMPMODE2_MASK)) &
  86              		.loc 1 117 0
  87 0006 1F4B     		ldr	r3, .L6
  88 0008 1B78     		ldrb	r3, [r3]
  89 000a DBB2     		uxtb	r3, r3
  90 000c 23F03F03 		bic	r3, r3, #63
  91 0010 FB71     		strb	r3, [r7, #7]
 118:.\Generated_Source\PSoC5/Arm_PWM.c ****                 ((uint8)(~Arm_PWM_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_CONTROL = ctrl | Arm_PWM_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0012 1C4B     		ldr	r3, .L6
  94 0014 FA79     		ldrb	r2, [r7, #7]
  95 0016 42F00902 		orr	r2, r2, #9
  96 001a D2B2     		uxtb	r2, r2
  97 001c 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC5/Arm_PWM.c ****                                    Arm_PWM_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* (Arm_PWM_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 123:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if (!Arm_PWM_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if (Arm_PWM_Resolution == 8)
 125:.\Generated_Source\PSoC5/Arm_PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_AUX_CONTROLDP0 |= (Arm_PWM_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/Arm_PWM.c ****         #else /* (Arm_PWM_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/Arm_PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_AUX_CONTROLDP0 |= (Arm_PWM_AUX_CTRL_FIFO0_CLR);
  98              		.loc 1 129 0
  99 001e 1A4B     		ldr	r3, .L6+4
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 5


 100 0020 194A     		ldr	r2, .L6+4
 101 0022 1278     		ldrb	r2, [r2]
 102 0024 D2B2     		uxtb	r2, r2
 103 0026 42F00102 		orr	r2, r2, #1
 104 002a D2B2     		uxtb	r2, r2
 105 002c 1A70     		strb	r2, [r3]
 130:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_AUX_CONTROLDP1 |= (Arm_PWM_AUX_CTRL_FIFO0_CLR);
 106              		.loc 1 130 0
 107 002e 174B     		ldr	r3, .L6+8
 108 0030 164A     		ldr	r2, .L6+8
 109 0032 1278     		ldrb	r2, [r2]
 110 0034 D2B2     		uxtb	r2, r2
 111 0036 42F00102 		orr	r2, r2, #1
 112 003a D2B2     		uxtb	r2, r2
 113 003c 1A70     		strb	r2, [r3]
 131:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (Arm_PWM_Resolution == 8) */
 132:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 133:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_WriteCounter(Arm_PWM_INIT_PERIOD_VALUE);
 114              		.loc 1 133 0
 115 003e 40F21F30 		movw	r0, #799
 116 0042 FFF7FEFF 		bl	Arm_PWM_WriteCounter
 134:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* (!Arm_PWM_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 136:.\Generated_Source\PSoC5/Arm_PWM.c ****     Arm_PWM_WritePeriod(Arm_PWM_INIT_PERIOD_VALUE);
 117              		.loc 1 136 0
 118 0046 40F21F30 		movw	r0, #799
 119 004a FFF7FEFF 		bl	Arm_PWM_WritePeriod
 137:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 138:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if (Arm_PWM_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_WriteCompare(Arm_PWM_INIT_COMPARE_VALUE1);
 120              		.loc 1 139 0
 121 004e 3220     		movs	r0, #50
 122 0050 FFF7FEFF 		bl	Arm_PWM_WriteCompare
 140:.\Generated_Source\PSoC5/Arm_PWM.c ****         #else
 141:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_WriteCompare1(Arm_PWM_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_WriteCompare2(Arm_PWM_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (Arm_PWM_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 145:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if (Arm_PWM_KillModeMinTime)
 146:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_WriteKillTime(Arm_PWM_MinimumKillTime);
 147:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (Arm_PWM_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 149:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if (Arm_PWM_DeadBandUsed)
 150:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_WriteDeadTime(Arm_PWM_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (Arm_PWM_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 153:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if (Arm_PWM_UseStatus || Arm_PWM_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_SetInterruptMode(Arm_PWM_INIT_INTERRUPTS_MODE);
 123              		.loc 1 154 0
 124 0054 0020     		movs	r0, #0
 125 0056 FFF7FEFF 		bl	Arm_PWM_SetInterruptMode
 155:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* (Arm_PWM_UseStatus || Arm_PWM_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 157:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if (Arm_PWM_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/Arm_PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_GLOBAL_ENABLE |= Arm_PWM_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/Arm_PWM.c ****         /* Set the Interrupt source to come from the status register */
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 6


 161:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_CONTROL2 |= Arm_PWM_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/Arm_PWM.c ****     #else
 163:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if(Arm_PWM_UseStatus)
 164:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 165:.\Generated_Source\PSoC5/Arm_PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/Arm_PWM.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_interruptState = CyEnterCriticalSection();
 126              		.loc 1 167 0
 127 005a FFF7FEFF 		bl	CyEnterCriticalSection
 128 005e 0346     		mov	r3, r0
 129 0060 BB71     		strb	r3, [r7, #6]
 168:.\Generated_Source\PSoC5/Arm_PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_STATUS_AUX_CTRL |= Arm_PWM_STATUS_ACTL_INT_EN_MASK;
 130              		.loc 1 169 0
 131 0062 0B4B     		ldr	r3, .L6+12
 132 0064 0A4A     		ldr	r2, .L6+12
 133 0066 1278     		ldrb	r2, [r2]
 134 0068 D2B2     		uxtb	r2, r2
 135 006a 42F01002 		orr	r2, r2, #16
 136 006e D2B2     		uxtb	r2, r2
 137 0070 1A70     		strb	r2, [r3]
 170:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 171:.\Generated_Source\PSoC5/Arm_PWM.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/Arm_PWM.c ****             CyExitCriticalSection(Arm_PWM_interruptState);
 138              		.loc 1 172 0
 139 0072 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 140 0074 1846     		mov	r0, r3
 141 0076 FFF7FEFF 		bl	CyExitCriticalSection
 173:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 174:.\Generated_Source\PSoC5/Arm_PWM.c ****             /* Clear the FIFO to enable the Arm_PWM_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/Arm_PWM.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_ClearFIFO();
 142              		.loc 1 176 0
 143 007a FFF7FEFF 		bl	Arm_PWM_ClearFIFO
 177:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (Arm_PWM_UseStatus) */
 178:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* (Arm_PWM_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/Arm_PWM.c **** }
 144              		.loc 1 179 0
 145 007e 0837     		adds	r7, r7, #8
 146 0080 BD46     		mov	sp, r7
 147              		@ sp needed
 148 0082 80BD     		pop	{r7, pc}
 149              	.L7:
 150              		.align	2
 151              	.L6:
 152 0084 7D640040 		.word	1073767549
 153 0088 92640040 		.word	1073767570
 154 008c 93640040 		.word	1073767571
 155 0090 97640040 		.word	1073767575
 156              		.cfi_endproc
 157              	.LFE1:
 158              		.size	Arm_PWM_Init, .-Arm_PWM_Init
 159              		.section	.text.Arm_PWM_Enable,"ax",%progbits
 160              		.align	2
 161              		.global	Arm_PWM_Enable
 162              		.thumb
 163              		.thumb_func
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 7


 164              		.type	Arm_PWM_Enable, %function
 165              	Arm_PWM_Enable:
 166              	.LFB2:
 180:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 181:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 182:.\Generated_Source\PSoC5/Arm_PWM.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/Arm_PWM.c **** * Function Name: Arm_PWM_Enable
 184:.\Generated_Source\PSoC5/Arm_PWM.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 186:.\Generated_Source\PSoC5/Arm_PWM.c **** * Summary:
 187:.\Generated_Source\PSoC5/Arm_PWM.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 189:.\Generated_Source\PSoC5/Arm_PWM.c **** * Parameters:
 190:.\Generated_Source\PSoC5/Arm_PWM.c **** *  None
 191:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 192:.\Generated_Source\PSoC5/Arm_PWM.c **** * Return:
 193:.\Generated_Source\PSoC5/Arm_PWM.c **** *  None
 194:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 195:.\Generated_Source\PSoC5/Arm_PWM.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/Arm_PWM.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 198:.\Generated_Source\PSoC5/Arm_PWM.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/Arm_PWM.c **** void Arm_PWM_Enable(void) 
 200:.\Generated_Source\PSoC5/Arm_PWM.c **** {
 167              		.loc 1 200 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172 0000 80B4     		push	{r7}
 173              		.cfi_def_cfa_offset 4
 174              		.cfi_offset 7, -4
 175 0002 00AF     		add	r7, sp, #0
 176              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC5/Arm_PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if (Arm_PWM_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_GLOBAL_ENABLE |= Arm_PWM_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_GLOBAL_STBY_ENABLE |= Arm_PWM_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* (Arm_PWM_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 207:.\Generated_Source\PSoC5/Arm_PWM.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if (Arm_PWM_UseControl || Arm_PWM_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_CONTROL |= Arm_PWM_CTRL_ENABLE;
 177              		.loc 1 209 0
 178 0004 054B     		ldr	r3, .L9
 179 0006 054A     		ldr	r2, .L9
 180 0008 1278     		ldrb	r2, [r2]
 181 000a D2B2     		uxtb	r2, r2
 182 000c 62F07F02 		orn	r2, r2, #127
 183 0010 D2B2     		uxtb	r2, r2
 184 0012 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* (Arm_PWM_UseControl || Arm_PWM_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/Arm_PWM.c **** }
 185              		.loc 1 211 0
 186 0014 BD46     		mov	sp, r7
 187              		@ sp needed
 188 0016 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 8


 189 001a 7047     		bx	lr
 190              	.L10:
 191              		.align	2
 192              	.L9:
 193 001c 7D640040 		.word	1073767549
 194              		.cfi_endproc
 195              	.LFE2:
 196              		.size	Arm_PWM_Enable, .-Arm_PWM_Enable
 197              		.section	.text.Arm_PWM_Stop,"ax",%progbits
 198              		.align	2
 199              		.global	Arm_PWM_Stop
 200              		.thumb
 201              		.thumb_func
 202              		.type	Arm_PWM_Stop, %function
 203              	Arm_PWM_Stop:
 204              	.LFB3:
 212:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 213:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 214:.\Generated_Source\PSoC5/Arm_PWM.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/Arm_PWM.c **** * Function Name: Arm_PWM_Stop
 216:.\Generated_Source\PSoC5/Arm_PWM.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 218:.\Generated_Source\PSoC5/Arm_PWM.c **** * Summary:
 219:.\Generated_Source\PSoC5/Arm_PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/Arm_PWM.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 222:.\Generated_Source\PSoC5/Arm_PWM.c **** * Parameters:
 223:.\Generated_Source\PSoC5/Arm_PWM.c **** *  None
 224:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 225:.\Generated_Source\PSoC5/Arm_PWM.c **** * Return:
 226:.\Generated_Source\PSoC5/Arm_PWM.c **** *  None
 227:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 228:.\Generated_Source\PSoC5/Arm_PWM.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/Arm_PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/Arm_PWM.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 232:.\Generated_Source\PSoC5/Arm_PWM.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/Arm_PWM.c **** void Arm_PWM_Stop(void) 
 234:.\Generated_Source\PSoC5/Arm_PWM.c **** {
 205              		.loc 1 234 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210 0000 80B4     		push	{r7}
 211              		.cfi_def_cfa_offset 4
 212              		.cfi_offset 7, -4
 213 0002 00AF     		add	r7, sp, #0
 214              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if (Arm_PWM_UseControl || Arm_PWM_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_CONTROL &= ((uint8)(~Arm_PWM_CTRL_ENABLE));
 215              		.loc 1 236 0
 216 0004 054B     		ldr	r3, .L12
 217 0006 054A     		ldr	r2, .L12
 218 0008 1278     		ldrb	r2, [r2]
 219 000a D2B2     		uxtb	r2, r2
 220 000c 02F07F02 		and	r2, r2, #127
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 9


 221 0010 D2B2     		uxtb	r2, r2
 222 0012 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* (Arm_PWM_UseControl || Arm_PWM_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 239:.\Generated_Source\PSoC5/Arm_PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if (Arm_PWM_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_GLOBAL_ENABLE &= ((uint8)(~Arm_PWM_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/Arm_PWM.c ****         Arm_PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~Arm_PWM_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* (Arm_PWM_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/Arm_PWM.c **** }
 223              		.loc 1 244 0
 224 0014 BD46     		mov	sp, r7
 225              		@ sp needed
 226 0016 5DF8047B 		ldr	r7, [sp], #4
 227 001a 7047     		bx	lr
 228              	.L13:
 229              		.align	2
 230              	.L12:
 231 001c 7D640040 		.word	1073767549
 232              		.cfi_endproc
 233              	.LFE3:
 234              		.size	Arm_PWM_Stop, .-Arm_PWM_Stop
 235              		.section	.text.Arm_PWM_WriteCounter,"ax",%progbits
 236              		.align	2
 237              		.global	Arm_PWM_WriteCounter
 238              		.thumb
 239              		.thumb_func
 240              		.type	Arm_PWM_WriteCounter, %function
 241              	Arm_PWM_WriteCounter:
 242              	.LFB4:
 245:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 246:.\Generated_Source\PSoC5/Arm_PWM.c **** #if (Arm_PWM_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if (Arm_PWM_CompareMode1SW)
 248:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 249:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 250:.\Generated_Source\PSoC5/Arm_PWM.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/Arm_PWM.c ****         * Function Name: Arm_PWM_SetCompareMode
 252:.\Generated_Source\PSoC5/Arm_PWM.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/Arm_PWM.c ****         *
 254:.\Generated_Source\PSoC5/Arm_PWM.c ****         * Summary:
 255:.\Generated_Source\PSoC5/Arm_PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/Arm_PWM.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/Arm_PWM.c ****         *
 258:.\Generated_Source\PSoC5/Arm_PWM.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/Arm_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/Arm_PWM.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/Arm_PWM.c ****         *
 262:.\Generated_Source\PSoC5/Arm_PWM.c ****         * Return:
 263:.\Generated_Source\PSoC5/Arm_PWM.c ****         *  None
 264:.\Generated_Source\PSoC5/Arm_PWM.c ****         *
 265:.\Generated_Source\PSoC5/Arm_PWM.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/Arm_PWM.c ****         void Arm_PWM_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/Arm_PWM.c ****         {
 268:.\Generated_Source\PSoC5/Arm_PWM.c ****             #if(Arm_PWM_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 270:.\Generated_Source\PSoC5/Arm_PWM.c ****                 #if(0 != Arm_PWM_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/Arm_PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << Arm_PWM_CTRL_CMPMODE1_
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 10


 272:.\Generated_Source\PSoC5/Arm_PWM.c ****                 #else
 273:.\Generated_Source\PSoC5/Arm_PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/Arm_PWM.c ****                 #endif /* (0 != Arm_PWM_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 276:.\Generated_Source\PSoC5/Arm_PWM.c ****                 Arm_PWM_CONTROL3 &= ((uint8)(~Arm_PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data *
 277:.\Generated_Source\PSoC5/Arm_PWM.c ****                 Arm_PWM_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 279:.\Generated_Source\PSoC5/Arm_PWM.c ****             #elif (Arm_PWM_UseControl)
 280:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 281:.\Generated_Source\PSoC5/Arm_PWM.c ****                 #if(0 != Arm_PWM_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/Arm_PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << Arm_PWM_CTRL_CMPMODE1
 283:.\Generated_Source\PSoC5/Arm_PWM.c ****                                                 Arm_PWM_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/Arm_PWM.c ****                 #else
 285:.\Generated_Source\PSoC5/Arm_PWM.c ****                     uint8 comparemode1masked = comparemode & Arm_PWM_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/Arm_PWM.c ****                 #endif /* (0 != Arm_PWM_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 288:.\Generated_Source\PSoC5/Arm_PWM.c ****                 #if(0 != Arm_PWM_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/Arm_PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << Arm_PWM_CTRL_CMPMODE2
 290:.\Generated_Source\PSoC5/Arm_PWM.c ****                                                Arm_PWM_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/Arm_PWM.c ****                 #else
 292:.\Generated_Source\PSoC5/Arm_PWM.c ****                     uint8 comparemode2masked = comparemode & Arm_PWM_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/Arm_PWM.c ****                 #endif /* (0 != Arm_PWM_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 295:.\Generated_Source\PSoC5/Arm_PWM.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/Arm_PWM.c ****                 Arm_PWM_CONTROL &= ((uint8)(~(Arm_PWM_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/Arm_PWM.c ****                                             Arm_PWM_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/Arm_PWM.c ****                 Arm_PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 300:.\Generated_Source\PSoC5/Arm_PWM.c ****             #else
 301:.\Generated_Source\PSoC5/Arm_PWM.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/Arm_PWM.c ****             #endif /* (Arm_PWM_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/Arm_PWM.c ****         }
 304:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* Arm_PWM_CompareMode1SW */
 305:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 306:.\Generated_Source\PSoC5/Arm_PWM.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 308:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if (Arm_PWM_CompareMode1SW)
 309:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 310:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 311:.\Generated_Source\PSoC5/Arm_PWM.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/Arm_PWM.c ****         * Function Name: Arm_PWM_SetCompareMode1
 313:.\Generated_Source\PSoC5/Arm_PWM.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/Arm_PWM.c ****         *
 315:.\Generated_Source\PSoC5/Arm_PWM.c ****         * Summary:
 316:.\Generated_Source\PSoC5/Arm_PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/Arm_PWM.c ****         *
 318:.\Generated_Source\PSoC5/Arm_PWM.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/Arm_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/Arm_PWM.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/Arm_PWM.c ****         *
 322:.\Generated_Source\PSoC5/Arm_PWM.c ****         * Return:
 323:.\Generated_Source\PSoC5/Arm_PWM.c ****         *  None
 324:.\Generated_Source\PSoC5/Arm_PWM.c ****         *
 325:.\Generated_Source\PSoC5/Arm_PWM.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/Arm_PWM.c ****         void Arm_PWM_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/Arm_PWM.c ****         {
 328:.\Generated_Source\PSoC5/Arm_PWM.c ****             #if(0 != Arm_PWM_CTRL_CMPMODE1_SHIFT)
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 11


 329:.\Generated_Source\PSoC5/Arm_PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << Arm_PWM_CTRL_CMPMODE1_SHIF
 330:.\Generated_Source\PSoC5/Arm_PWM.c ****                                            Arm_PWM_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/Arm_PWM.c ****             #else
 332:.\Generated_Source\PSoC5/Arm_PWM.c ****                 uint8 comparemodemasked = comparemode & Arm_PWM_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/Arm_PWM.c ****             #endif /* (0 != Arm_PWM_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 335:.\Generated_Source\PSoC5/Arm_PWM.c ****             #if (Arm_PWM_UseControl)
 336:.\Generated_Source\PSoC5/Arm_PWM.c ****                 Arm_PWM_CONTROL &= ((uint8)(~Arm_PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC5/Arm_PWM.c ****                 Arm_PWM_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/Arm_PWM.c ****             #endif /* (Arm_PWM_UseControl) */
 339:.\Generated_Source\PSoC5/Arm_PWM.c ****         }
 340:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* Arm_PWM_CompareMode1SW */
 341:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 342:.\Generated_Source\PSoC5/Arm_PWM.c **** #if (Arm_PWM_CompareMode2SW)
 343:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 344:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 345:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_SetCompareMode2
 347:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 349:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 350:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 352:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/Arm_PWM.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 356:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 357:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 358:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 359:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/Arm_PWM.c ****     void Arm_PWM_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 362:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 363:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if(0 != Arm_PWM_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/Arm_PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << Arm_PWM_CTRL_CMPMODE2_SHIFT)) 
 365:.\Generated_Source\PSoC5/Arm_PWM.c ****                                                  Arm_PWM_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/Arm_PWM.c ****         #else
 367:.\Generated_Source\PSoC5/Arm_PWM.c ****             uint8 comparemodemasked = comparemode & Arm_PWM_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (0 != Arm_PWM_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 370:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if (Arm_PWM_UseControl)
 371:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_CONTROL &= ((uint8)(~Arm_PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (Arm_PWM_UseControl) */
 374:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 375:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /*Arm_PWM_CompareMode2SW */
 376:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 377:.\Generated_Source\PSoC5/Arm_PWM.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 379:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 380:.\Generated_Source\PSoC5/Arm_PWM.c **** #if (!Arm_PWM_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 382:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 383:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_WriteCounter
 385:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 12


 386:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 387:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 388:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 393:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 396:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 397:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 398:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 399:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 402:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/Arm_PWM.c ****     void Arm_PWM_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/Arm_PWM.c ****                                        
 405:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 243              		.loc 1 405 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 248 0000 80B4     		push	{r7}
 249              		.cfi_def_cfa_offset 4
 250              		.cfi_offset 7, -4
 251 0002 83B0     		sub	sp, sp, #12
 252              		.cfi_def_cfa_offset 16
 253 0004 00AF     		add	r7, sp, #0
 254              		.cfi_def_cfa_register 7
 255 0006 0346     		mov	r3, r0
 256 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 406:.\Generated_Source\PSoC5/Arm_PWM.c ****         CY_SET_REG16(Arm_PWM_COUNTER_LSB_PTR, counter);
 257              		.loc 1 406 0
 258 000a 044B     		ldr	r3, .L15
 259 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 260 000e 1A80     		strh	r2, [r3]	@ movhi
 407:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 261              		.loc 1 407 0
 262 0010 0C37     		adds	r7, r7, #12
 263 0012 BD46     		mov	sp, r7
 264              		@ sp needed
 265 0014 5DF8047B 		ldr	r7, [sp], #4
 266 0018 7047     		bx	lr
 267              	.L16:
 268 001a 00BF     		.align	2
 269              	.L15:
 270 001c 04680040 		.word	1073768452
 271              		.cfi_endproc
 272              	.LFE4:
 273              		.size	Arm_PWM_WriteCounter, .-Arm_PWM_WriteCounter
 274              		.section	.text.Arm_PWM_ReadCounter,"ax",%progbits
 275              		.align	2
 276              		.global	Arm_PWM_ReadCounter
 277              		.thumb
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 13


 278              		.thumb_func
 279              		.type	Arm_PWM_ReadCounter, %function
 280              	Arm_PWM_ReadCounter:
 281              	.LFB5:
 408:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 409:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 410:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_ReadCounter
 412:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 414:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 415:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 418:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 420:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 421:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 422:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 424:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/Arm_PWM.c ****     uint16 Arm_PWM_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 282              		.loc 1 426 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287 0000 80B4     		push	{r7}
 288              		.cfi_def_cfa_offset 4
 289              		.cfi_offset 7, -4
 290 0002 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC5/Arm_PWM.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/Arm_PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/Arm_PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/Arm_PWM.c ****           (void)CY_GET_REG8(Arm_PWM_COUNTERCAP_LSB_PTR_8BIT);
 292              		.loc 1 430 0
 293 0004 044B     		ldr	r3, .L19
 294 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 432:.\Generated_Source\PSoC5/Arm_PWM.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/Arm_PWM.c ****         return (CY_GET_REG16(Arm_PWM_CAPTURE_LSB_PTR));
 295              		.loc 1 433 0
 296 0008 044B     		ldr	r3, .L19+4
 297 000a 1B88     		ldrh	r3, [r3]	@ movhi
 298 000c 9BB2     		uxth	r3, r3
 434:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 299              		.loc 1 434 0
 300 000e 1846     		mov	r0, r3
 301 0010 BD46     		mov	sp, r7
 302              		@ sp needed
 303 0012 5DF8047B 		ldr	r7, [sp], #4
 304 0016 7047     		bx	lr
 305              	.L20:
 306              		.align	2
 307              	.L19:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 14


 308 0018 12640040 		.word	1073767442
 309 001c A4680040 		.word	1073768612
 310              		.cfi_endproc
 311              	.LFE5:
 312              		.size	Arm_PWM_ReadCounter, .-Arm_PWM_ReadCounter
 313              		.section	.text.Arm_PWM_ClearFIFO,"ax",%progbits
 314              		.align	2
 315              		.global	Arm_PWM_ClearFIFO
 316              		.thumb
 317              		.thumb_func
 318              		.type	Arm_PWM_ClearFIFO, %function
 319              	Arm_PWM_ClearFIFO:
 320              	.LFB6:
 435:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 436:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if (Arm_PWM_UseStatus)
 437:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 438:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 439:.\Generated_Source\PSoC5/Arm_PWM.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/Arm_PWM.c ****         * Function Name: Arm_PWM_ClearFIFO
 441:.\Generated_Source\PSoC5/Arm_PWM.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/Arm_PWM.c ****         *
 443:.\Generated_Source\PSoC5/Arm_PWM.c ****         * Summary:
 444:.\Generated_Source\PSoC5/Arm_PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/Arm_PWM.c ****         *
 446:.\Generated_Source\PSoC5/Arm_PWM.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/Arm_PWM.c ****         *  None
 448:.\Generated_Source\PSoC5/Arm_PWM.c ****         *
 449:.\Generated_Source\PSoC5/Arm_PWM.c ****         * Return:
 450:.\Generated_Source\PSoC5/Arm_PWM.c ****         *  None
 451:.\Generated_Source\PSoC5/Arm_PWM.c ****         *
 452:.\Generated_Source\PSoC5/Arm_PWM.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/Arm_PWM.c ****         void Arm_PWM_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/Arm_PWM.c ****         {
 321              		.loc 1 454 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 1, uses_anonymous_args = 0
 325 0000 80B5     		push	{r7, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 7, -8
 328              		.cfi_offset 14, -4
 329 0002 00AF     		add	r7, sp, #0
 330              		.cfi_def_cfa_register 7
 455:.\Generated_Source\PSoC5/Arm_PWM.c ****             while(0u != (Arm_PWM_ReadStatusRegister() & Arm_PWM_STATUS_FIFONEMPTY))
 331              		.loc 1 455 0
 332 0004 01E0     		b	.L22
 333              	.L23:
 456:.\Generated_Source\PSoC5/Arm_PWM.c ****             {
 457:.\Generated_Source\PSoC5/Arm_PWM.c ****                 (void)Arm_PWM_ReadCapture();
 334              		.loc 1 457 0
 335 0006 FFF7FEFF 		bl	Arm_PWM_ReadCapture
 336              	.L22:
 455:.\Generated_Source\PSoC5/Arm_PWM.c ****             while(0u != (Arm_PWM_ReadStatusRegister() & Arm_PWM_STATUS_FIFONEMPTY))
 337              		.loc 1 455 0 discriminator 1
 338 000a FFF7FEFF 		bl	Arm_PWM_ReadStatusRegister
 339 000e 0346     		mov	r3, r0
 340 0010 03F01003 		and	r3, r3, #16
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 15


 341 0014 002B     		cmp	r3, #0
 342 0016 F6D1     		bne	.L23
 458:.\Generated_Source\PSoC5/Arm_PWM.c ****             }
 459:.\Generated_Source\PSoC5/Arm_PWM.c ****         }
 343              		.loc 1 459 0
 344 0018 80BD     		pop	{r7, pc}
 345              		.cfi_endproc
 346              	.LFE6:
 347              		.size	Arm_PWM_ClearFIFO, .-Arm_PWM_ClearFIFO
 348 001a 00BF     		.section	.text.Arm_PWM_WritePeriod,"ax",%progbits
 349              		.align	2
 350              		.global	Arm_PWM_WritePeriod
 351              		.thumb
 352              		.thumb_func
 353              		.type	Arm_PWM_WritePeriod, %function
 354              	Arm_PWM_WritePeriod:
 355              	.LFB7:
 460:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 461:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* Arm_PWM_UseStatus */
 462:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 463:.\Generated_Source\PSoC5/Arm_PWM.c **** #endif /* !Arm_PWM_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 465:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 466:.\Generated_Source\PSoC5/Arm_PWM.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/Arm_PWM.c **** * Function Name: Arm_PWM_WritePeriod
 468:.\Generated_Source\PSoC5/Arm_PWM.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 470:.\Generated_Source\PSoC5/Arm_PWM.c **** * Summary:
 471:.\Generated_Source\PSoC5/Arm_PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/Arm_PWM.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 474:.\Generated_Source\PSoC5/Arm_PWM.c **** * Parameters:
 475:.\Generated_Source\PSoC5/Arm_PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/Arm_PWM.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 478:.\Generated_Source\PSoC5/Arm_PWM.c **** * Return:
 479:.\Generated_Source\PSoC5/Arm_PWM.c **** *  None
 480:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 481:.\Generated_Source\PSoC5/Arm_PWM.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/Arm_PWM.c **** void Arm_PWM_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/Arm_PWM.c **** {
 356              		.loc 1 483 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 8
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 361 0000 80B4     		push	{r7}
 362              		.cfi_def_cfa_offset 4
 363              		.cfi_offset 7, -4
 364 0002 83B0     		sub	sp, sp, #12
 365              		.cfi_def_cfa_offset 16
 366 0004 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
 368 0006 0346     		mov	r3, r0
 369 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 484:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if(Arm_PWM_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/Arm_PWM.c ****         CY_SET_REG16(Arm_PWM_PERIOD_LSB_PTR, (uint16)period);
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 16


 486:.\Generated_Source\PSoC5/Arm_PWM.c ****     #else
 487:.\Generated_Source\PSoC5/Arm_PWM.c ****         CY_SET_REG16(Arm_PWM_PERIOD_LSB_PTR, period);
 370              		.loc 1 487 0
 371 000a 044B     		ldr	r3, .L25
 372 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 373 000e 1A80     		strh	r2, [r3]	@ movhi
 488:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* (Arm_PWM_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/Arm_PWM.c **** }
 374              		.loc 1 489 0
 375 0010 0C37     		adds	r7, r7, #12
 376 0012 BD46     		mov	sp, r7
 377              		@ sp needed
 378 0014 5DF8047B 		ldr	r7, [sp], #4
 379 0018 7047     		bx	lr
 380              	.L26:
 381 001a 00BF     		.align	2
 382              	.L25:
 383 001c 84680040 		.word	1073768580
 384              		.cfi_endproc
 385              	.LFE7:
 386              		.size	Arm_PWM_WritePeriod, .-Arm_PWM_WritePeriod
 387              		.section	.text.Arm_PWM_WriteCompare,"ax",%progbits
 388              		.align	2
 389              		.global	Arm_PWM_WriteCompare
 390              		.thumb
 391              		.thumb_func
 392              		.type	Arm_PWM_WriteCompare, %function
 393              	Arm_PWM_WriteCompare:
 394              	.LFB8:
 490:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 491:.\Generated_Source\PSoC5/Arm_PWM.c **** #if (Arm_PWM_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 493:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 494:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_WriteCompare
 496:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 498:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 499:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 505:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 508:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 509:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 510:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 511:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 515:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/Arm_PWM.c ****     void Arm_PWM_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/Arm_PWM.c ****                                        
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 17


 518:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 395              		.loc 1 518 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 8
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400 0000 80B4     		push	{r7}
 401              		.cfi_def_cfa_offset 4
 402              		.cfi_offset 7, -4
 403 0002 83B0     		sub	sp, sp, #12
 404              		.cfi_def_cfa_offset 16
 405 0004 00AF     		add	r7, sp, #0
 406              		.cfi_def_cfa_register 7
 407 0006 0346     		mov	r3, r0
 408 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 519:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if(Arm_PWM_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/Arm_PWM.c ****             CY_SET_REG16(Arm_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC5/Arm_PWM.c ****         #else
 522:.\Generated_Source\PSoC5/Arm_PWM.c ****             CY_SET_REG16(Arm_PWM_COMPARE1_LSB_PTR, compare);
 409              		.loc 1 522 0
 410 000a 044B     		ldr	r3, .L28
 411 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 412 000e 1A80     		strh	r2, [r3]	@ movhi
 523:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (Arm_PWM_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 525:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if (Arm_PWM_PWMMode == Arm_PWM__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/Arm_PWM.c ****             #if(Arm_PWM_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/Arm_PWM.c ****                 CY_SET_REG16(Arm_PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/Arm_PWM.c ****             #else
 529:.\Generated_Source\PSoC5/Arm_PWM.c ****                 CY_SET_REG16(Arm_PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/Arm_PWM.c ****             #endif /* (Arm_PWM_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (Arm_PWM_PWMMode == Arm_PWM__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 413              		.loc 1 532 0
 414 0010 0C37     		adds	r7, r7, #12
 415 0012 BD46     		mov	sp, r7
 416              		@ sp needed
 417 0014 5DF8047B 		ldr	r7, [sp], #4
 418 0018 7047     		bx	lr
 419              	.L29:
 420 001a 00BF     		.align	2
 421              	.L28:
 422 001c 44680040 		.word	1073768516
 423              		.cfi_endproc
 424              	.LFE8:
 425              		.size	Arm_PWM_WriteCompare, .-Arm_PWM_WriteCompare
 426              		.section	.text.Arm_PWM_SetInterruptMode,"ax",%progbits
 427              		.align	2
 428              		.global	Arm_PWM_SetInterruptMode
 429              		.thumb
 430              		.thumb_func
 431              		.type	Arm_PWM_SetInterruptMode, %function
 432              	Arm_PWM_SetInterruptMode:
 433              	.LFB9:
 533:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 534:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 535:.\Generated_Source\PSoC5/Arm_PWM.c **** #else
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 18


 536:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 537:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 538:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_WriteCompare1
 540:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 542:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 543:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 548:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 551:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 552:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 553:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 554:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/Arm_PWM.c ****     void Arm_PWM_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/Arm_PWM.c ****                                         
 557:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 558:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if(Arm_PWM_UsingFixedFunction)
 559:.\Generated_Source\PSoC5/Arm_PWM.c ****             CY_SET_REG16(Arm_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/Arm_PWM.c ****         #else
 561:.\Generated_Source\PSoC5/Arm_PWM.c ****             CY_SET_REG16(Arm_PWM_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (Arm_PWM_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 564:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 565:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 566:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_WriteCompare2
 568:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 570:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 571:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  mode.
 576:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 577:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 580:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 581:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 582:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 583:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/Arm_PWM.c ****     void Arm_PWM_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/Arm_PWM.c ****                                         
 586:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 587:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if(Arm_PWM_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/Arm_PWM.c ****             CY_SET_REG16(Arm_PWM_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/Arm_PWM.c ****         #else
 590:.\Generated_Source\PSoC5/Arm_PWM.c ****             CY_SET_REG16(Arm_PWM_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (Arm_PWM_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 19


 593:.\Generated_Source\PSoC5/Arm_PWM.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 595:.\Generated_Source\PSoC5/Arm_PWM.c **** #if (Arm_PWM_DeadBandUsed)
 596:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 597:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 598:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_WriteDeadTime
 600:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 602:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 603:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 605:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 608:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 609:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 610:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 611:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/Arm_PWM.c ****     void Arm_PWM_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 614:.\Generated_Source\PSoC5/Arm_PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if(!Arm_PWM_DeadBand2_4)
 616:.\Generated_Source\PSoC5/Arm_PWM.c ****             CY_SET_REG8(Arm_PWM_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/Arm_PWM.c ****         #else
 618:.\Generated_Source\PSoC5/Arm_PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/Arm_PWM.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/Arm_PWM.c ****             Arm_PWM_DEADBAND_COUNT &= ((uint8)(~Arm_PWM_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 622:.\Generated_Source\PSoC5/Arm_PWM.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/Arm_PWM.c ****             #if(Arm_PWM_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/Arm_PWM.c ****                 Arm_PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << Arm_PWM_DEADBAND_COUNT_SHIFT)
 625:.\Generated_Source\PSoC5/Arm_PWM.c ****                                                     Arm_PWM_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/Arm_PWM.c ****             #else
 627:.\Generated_Source\PSoC5/Arm_PWM.c ****                 Arm_PWM_DEADBAND_COUNT |= deadtime & Arm_PWM_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/Arm_PWM.c ****             #endif /* (Arm_PWM_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 630:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (!Arm_PWM_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 632:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 633:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 634:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_ReadDeadTime
 636:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 638:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 639:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 641:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 643:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 644:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 645:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 647:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/Arm_PWM.c ****     uint8 Arm_PWM_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 20


 650:.\Generated_Source\PSoC5/Arm_PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if(!Arm_PWM_DeadBand2_4)
 652:.\Generated_Source\PSoC5/Arm_PWM.c ****             return (CY_GET_REG8(Arm_PWM_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/Arm_PWM.c ****         #else
 654:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 655:.\Generated_Source\PSoC5/Arm_PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/Arm_PWM.c ****             #if(Arm_PWM_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/Arm_PWM.c ****                 return ((uint8)(((uint8)(Arm_PWM_DEADBAND_COUNT & Arm_PWM_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC5/Arm_PWM.c ****                                                                            Arm_PWM_DEADBAND_COUNT_S
 659:.\Generated_Source\PSoC5/Arm_PWM.c ****             #else
 660:.\Generated_Source\PSoC5/Arm_PWM.c ****                 return (Arm_PWM_DEADBAND_COUNT & Arm_PWM_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/Arm_PWM.c ****             #endif /* (Arm_PWM_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (!Arm_PWM_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 664:.\Generated_Source\PSoC5/Arm_PWM.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 666:.\Generated_Source\PSoC5/Arm_PWM.c **** #if (Arm_PWM_UseStatus || Arm_PWM_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 668:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 669:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_SetInterruptMode
 671:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 673:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 674:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 677:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 680:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 681:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 682:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 683:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/Arm_PWM.c ****     void Arm_PWM_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 434              		.loc 1 685 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 8
 437              		@ frame_needed = 1, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 439 0000 80B4     		push	{r7}
 440              		.cfi_def_cfa_offset 4
 441              		.cfi_offset 7, -4
 442 0002 83B0     		sub	sp, sp, #12
 443              		.cfi_def_cfa_offset 16
 444 0004 00AF     		add	r7, sp, #0
 445              		.cfi_def_cfa_register 7
 446 0006 0346     		mov	r3, r0
 447 0008 FB71     		strb	r3, [r7, #7]
 686:.\Generated_Source\PSoC5/Arm_PWM.c ****         CY_SET_REG8(Arm_PWM_STATUS_MASK_PTR, interruptMode);
 448              		.loc 1 686 0
 449 000a 044B     		ldr	r3, .L31
 450 000c FA79     		ldrb	r2, [r7, #7]
 451 000e 1A70     		strb	r2, [r3]
 687:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 452              		.loc 1 687 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 21


 453 0010 0C37     		adds	r7, r7, #12
 454 0012 BD46     		mov	sp, r7
 455              		@ sp needed
 456 0014 5DF8047B 		ldr	r7, [sp], #4
 457 0018 7047     		bx	lr
 458              	.L32:
 459 001a 00BF     		.align	2
 460              	.L31:
 461 001c 87640040 		.word	1073767559
 462              		.cfi_endproc
 463              	.LFE9:
 464              		.size	Arm_PWM_SetInterruptMode, .-Arm_PWM_SetInterruptMode
 465              		.section	.text.Arm_PWM_ReadStatusRegister,"ax",%progbits
 466              		.align	2
 467              		.global	Arm_PWM_ReadStatusRegister
 468              		.thumb
 469              		.thumb_func
 470              		.type	Arm_PWM_ReadStatusRegister, %function
 471              	Arm_PWM_ReadStatusRegister:
 472              	.LFB10:
 688:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 689:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 690:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_ReadStatusRegister
 692:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 694:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 695:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 697:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 699:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 700:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 701:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 710:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/Arm_PWM.c ****     uint8 Arm_PWM_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 473              		.loc 1 712 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 1, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 478 0000 80B4     		push	{r7}
 479              		.cfi_def_cfa_offset 4
 480              		.cfi_offset 7, -4
 481 0002 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 713:.\Generated_Source\PSoC5/Arm_PWM.c ****         return (CY_GET_REG8(Arm_PWM_STATUS_PTR));
 483              		.loc 1 713 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 22


 484 0004 034B     		ldr	r3, .L35
 485 0006 1B78     		ldrb	r3, [r3]
 486 0008 DBB2     		uxtb	r3, r3
 714:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 487              		.loc 1 714 0
 488 000a 1846     		mov	r0, r3
 489 000c BD46     		mov	sp, r7
 490              		@ sp needed
 491 000e 5DF8047B 		ldr	r7, [sp], #4
 492 0012 7047     		bx	lr
 493              	.L36:
 494              		.align	2
 495              	.L35:
 496 0014 67640040 		.word	1073767527
 497              		.cfi_endproc
 498              	.LFE10:
 499              		.size	Arm_PWM_ReadStatusRegister, .-Arm_PWM_ReadStatusRegister
 500              		.section	.text.Arm_PWM_ReadControlRegister,"ax",%progbits
 501              		.align	2
 502              		.global	Arm_PWM_ReadControlRegister
 503              		.thumb
 504              		.thumb_func
 505              		.type	Arm_PWM_ReadControlRegister, %function
 506              	Arm_PWM_ReadControlRegister:
 507              	.LFB11:
 715:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 716:.\Generated_Source\PSoC5/Arm_PWM.c **** #endif /* (Arm_PWM_UseStatus || Arm_PWM_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 718:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 719:.\Generated_Source\PSoC5/Arm_PWM.c **** #if (Arm_PWM_UseControl)
 720:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 721:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 722:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_ReadControlRegister
 724:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 726:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 727:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 730:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 732:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 733:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 734:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 736:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC5/Arm_PWM.c ****     uint8 Arm_PWM_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 508              		.loc 1 738 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 8
 511              		@ frame_needed = 1, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 513 0000 80B4     		push	{r7}
 514              		.cfi_def_cfa_offset 4
 515              		.cfi_offset 7, -4
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 23


 516 0002 83B0     		sub	sp, sp, #12
 517              		.cfi_def_cfa_offset 16
 518 0004 00AF     		add	r7, sp, #0
 519              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC5/Arm_PWM.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 741:.\Generated_Source\PSoC5/Arm_PWM.c ****         result = CY_GET_REG8(Arm_PWM_CONTROL_PTR);
 520              		.loc 1 741 0
 521 0006 054B     		ldr	r3, .L39
 522 0008 1B78     		ldrb	r3, [r3]
 523 000a FB71     		strb	r3, [r7, #7]
 742:.\Generated_Source\PSoC5/Arm_PWM.c ****         return (result);
 524              		.loc 1 742 0
 525 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 526              		.loc 1 743 0
 527 000e 1846     		mov	r0, r3
 528 0010 0C37     		adds	r7, r7, #12
 529 0012 BD46     		mov	sp, r7
 530              		@ sp needed
 531 0014 5DF8047B 		ldr	r7, [sp], #4
 532 0018 7047     		bx	lr
 533              	.L40:
 534 001a 00BF     		.align	2
 535              	.L39:
 536 001c 7D640040 		.word	1073767549
 537              		.cfi_endproc
 538              	.LFE11:
 539              		.size	Arm_PWM_ReadControlRegister, .-Arm_PWM_ReadControlRegister
 540              		.section	.text.Arm_PWM_WriteControlRegister,"ax",%progbits
 541              		.align	2
 542              		.global	Arm_PWM_WriteControlRegister
 543              		.thumb
 544              		.thumb_func
 545              		.type	Arm_PWM_WriteControlRegister, %function
 546              	Arm_PWM_WriteControlRegister:
 547              	.LFB12:
 744:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 745:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 746:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_WriteControlRegister
 748:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 750:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 751:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 754:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 761:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 762:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 763:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 24


 764:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/Arm_PWM.c ****     void Arm_PWM_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 548              		.loc 1 766 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 8
 551              		@ frame_needed = 1, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 553 0000 80B4     		push	{r7}
 554              		.cfi_def_cfa_offset 4
 555              		.cfi_offset 7, -4
 556 0002 83B0     		sub	sp, sp, #12
 557              		.cfi_def_cfa_offset 16
 558 0004 00AF     		add	r7, sp, #0
 559              		.cfi_def_cfa_register 7
 560 0006 0346     		mov	r3, r0
 561 0008 FB71     		strb	r3, [r7, #7]
 767:.\Generated_Source\PSoC5/Arm_PWM.c ****         CY_SET_REG8(Arm_PWM_CONTROL_PTR, control);
 562              		.loc 1 767 0
 563 000a 044B     		ldr	r3, .L42
 564 000c FA79     		ldrb	r2, [r7, #7]
 565 000e 1A70     		strb	r2, [r3]
 768:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 566              		.loc 1 768 0
 567 0010 0C37     		adds	r7, r7, #12
 568 0012 BD46     		mov	sp, r7
 569              		@ sp needed
 570 0014 5DF8047B 		ldr	r7, [sp], #4
 571 0018 7047     		bx	lr
 572              	.L43:
 573 001a 00BF     		.align	2
 574              	.L42:
 575 001c 7D640040 		.word	1073767549
 576              		.cfi_endproc
 577              	.LFE12:
 578              		.size	Arm_PWM_WriteControlRegister, .-Arm_PWM_WriteControlRegister
 579              		.section	.text.Arm_PWM_ReadCapture,"ax",%progbits
 580              		.align	2
 581              		.global	Arm_PWM_ReadCapture
 582              		.thumb
 583              		.thumb_func
 584              		.type	Arm_PWM_ReadCapture, %function
 585              	Arm_PWM_ReadCapture:
 586              	.LFB13:
 769:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 770:.\Generated_Source\PSoC5/Arm_PWM.c **** #endif /* (Arm_PWM_UseControl) */
 771:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 772:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 773:.\Generated_Source\PSoC5/Arm_PWM.c **** #if (!Arm_PWM_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 775:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 776:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_ReadCapture
 778:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 780:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 781:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  Reads the capture value from the capture FIFO.
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 25


 782:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 783:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 785:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 786:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 787:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 789:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/Arm_PWM.c ****     uint16 Arm_PWM_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 587              		.loc 1 791 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592 0000 80B4     		push	{r7}
 593              		.cfi_def_cfa_offset 4
 594              		.cfi_offset 7, -4
 595 0002 00AF     		add	r7, sp, #0
 596              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC5/Arm_PWM.c ****         return (CY_GET_REG16(Arm_PWM_CAPTURE_LSB_PTR));
 597              		.loc 1 792 0
 598 0004 034B     		ldr	r3, .L46
 599 0006 1B88     		ldrh	r3, [r3]	@ movhi
 600 0008 9BB2     		uxth	r3, r3
 793:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 601              		.loc 1 793 0
 602 000a 1846     		mov	r0, r3
 603 000c BD46     		mov	sp, r7
 604              		@ sp needed
 605 000e 5DF8047B 		ldr	r7, [sp], #4
 606 0012 7047     		bx	lr
 607              	.L47:
 608              		.align	2
 609              	.L46:
 610 0014 A4680040 		.word	1073768612
 611              		.cfi_endproc
 612              	.LFE13:
 613              		.size	Arm_PWM_ReadCapture, .-Arm_PWM_ReadCapture
 614              		.section	.text.Arm_PWM_ReadCompare,"ax",%progbits
 615              		.align	2
 616              		.global	Arm_PWM_ReadCompare
 617              		.thumb
 618              		.thumb_func
 619              		.type	Arm_PWM_ReadCompare, %function
 620              	Arm_PWM_ReadCompare:
 621              	.LFB14:
 794:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 795:.\Generated_Source\PSoC5/Arm_PWM.c **** #endif /* (!Arm_PWM_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 797:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 798:.\Generated_Source\PSoC5/Arm_PWM.c **** #if (Arm_PWM_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 800:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 801:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_ReadCompare
 803:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 26


 804:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 805:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 806:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 809:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 811:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 812:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 813:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 815:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/Arm_PWM.c ****     uint16 Arm_PWM_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 622              		.loc 1 817 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627 0000 80B4     		push	{r7}
 628              		.cfi_def_cfa_offset 4
 629              		.cfi_offset 7, -4
 630 0002 00AF     		add	r7, sp, #0
 631              		.cfi_def_cfa_register 7
 818:.\Generated_Source\PSoC5/Arm_PWM.c ****         #if(Arm_PWM_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/Arm_PWM.c ****             return ((uint16)CY_GET_REG16(Arm_PWM_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/Arm_PWM.c ****         #else
 821:.\Generated_Source\PSoC5/Arm_PWM.c ****             return (CY_GET_REG16(Arm_PWM_COMPARE1_LSB_PTR));
 632              		.loc 1 821 0
 633 0004 034B     		ldr	r3, .L50
 634 0006 1B88     		ldrh	r3, [r3]	@ movhi
 635 0008 9BB2     		uxth	r3, r3
 822:.\Generated_Source\PSoC5/Arm_PWM.c ****         #endif /* (Arm_PWM_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 636              		.loc 1 823 0
 637 000a 1846     		mov	r0, r3
 638 000c BD46     		mov	sp, r7
 639              		@ sp needed
 640 000e 5DF8047B 		ldr	r7, [sp], #4
 641 0012 7047     		bx	lr
 642              	.L51:
 643              		.align	2
 644              	.L50:
 645 0014 44680040 		.word	1073768516
 646              		.cfi_endproc
 647              	.LFE14:
 648              		.size	Arm_PWM_ReadCompare, .-Arm_PWM_ReadCompare
 649              		.section	.text.Arm_PWM_ReadPeriod,"ax",%progbits
 650              		.align	2
 651              		.global	Arm_PWM_ReadPeriod
 652              		.thumb
 653              		.thumb_func
 654              		.type	Arm_PWM_ReadPeriod, %function
 655              	Arm_PWM_ReadPeriod:
 656              	.LFB15:
 824:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 825:.\Generated_Source\PSoC5/Arm_PWM.c **** #else
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 27


 826:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 827:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 828:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_ReadCompare1
 830:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 832:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 833:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 835:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 837:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 838:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 839:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 841:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/Arm_PWM.c ****     uint16 Arm_PWM_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 844:.\Generated_Source\PSoC5/Arm_PWM.c ****         return (CY_GET_REG16(Arm_PWM_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 846:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 847:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 848:.\Generated_Source\PSoC5/Arm_PWM.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Function Name: Arm_PWM_ReadCompare2
 850:.\Generated_Source\PSoC5/Arm_PWM.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 852:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Summary:
 853:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 855:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  None
 857:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 858:.\Generated_Source\PSoC5/Arm_PWM.c ****     * Return:
 859:.\Generated_Source\PSoC5/Arm_PWM.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/Arm_PWM.c ****     *
 861:.\Generated_Source\PSoC5/Arm_PWM.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/Arm_PWM.c ****     uint16 Arm_PWM_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/Arm_PWM.c ****     {
 864:.\Generated_Source\PSoC5/Arm_PWM.c ****         return (CY_GET_REG16(Arm_PWM_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC5/Arm_PWM.c ****     }
 866:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 867:.\Generated_Source\PSoC5/Arm_PWM.c **** #endif /* (Arm_PWM_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 869:.\Generated_Source\PSoC5/Arm_PWM.c **** 
 870:.\Generated_Source\PSoC5/Arm_PWM.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/Arm_PWM.c **** * Function Name: Arm_PWM_ReadPeriod
 872:.\Generated_Source\PSoC5/Arm_PWM.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 874:.\Generated_Source\PSoC5/Arm_PWM.c **** * Summary:
 875:.\Generated_Source\PSoC5/Arm_PWM.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 877:.\Generated_Source\PSoC5/Arm_PWM.c **** * Parameters:
 878:.\Generated_Source\PSoC5/Arm_PWM.c **** *  None
 879:.\Generated_Source\PSoC5/Arm_PWM.c **** *
 880:.\Generated_Source\PSoC5/Arm_PWM.c **** * Return:
 881:.\Generated_Source\PSoC5/Arm_PWM.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/Arm_PWM.c **** *
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 28


 883:.\Generated_Source\PSoC5/Arm_PWM.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/Arm_PWM.c **** uint16 Arm_PWM_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/Arm_PWM.c **** {
 657              		.loc 1 885 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 1, uses_anonymous_args = 0
 661              		@ link register save eliminated.
 662 0000 80B4     		push	{r7}
 663              		.cfi_def_cfa_offset 4
 664              		.cfi_offset 7, -4
 665 0002 00AF     		add	r7, sp, #0
 666              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC5/Arm_PWM.c ****     #if(Arm_PWM_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/Arm_PWM.c ****         return ((uint16)CY_GET_REG16(Arm_PWM_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/Arm_PWM.c ****     #else
 889:.\Generated_Source\PSoC5/Arm_PWM.c ****         return (CY_GET_REG16(Arm_PWM_PERIOD_LSB_PTR));
 667              		.loc 1 889 0
 668 0004 034B     		ldr	r3, .L54
 669 0006 1B88     		ldrh	r3, [r3]	@ movhi
 670 0008 9BB2     		uxth	r3, r3
 890:.\Generated_Source\PSoC5/Arm_PWM.c ****     #endif /* (Arm_PWM_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/Arm_PWM.c **** }
 671              		.loc 1 891 0
 672 000a 1846     		mov	r0, r3
 673 000c BD46     		mov	sp, r7
 674              		@ sp needed
 675 000e 5DF8047B 		ldr	r7, [sp], #4
 676 0012 7047     		bx	lr
 677              	.L55:
 678              		.align	2
 679              	.L54:
 680 0014 84680040 		.word	1073768580
 681              		.cfi_endproc
 682              	.LFE15:
 683              		.size	Arm_PWM_ReadPeriod, .-Arm_PWM_ReadPeriod
 684              		.text
 685              	.Letext0:
 686              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 687              		.section	.debug_info,"",%progbits
 688              	.Ldebug_info0:
 689 0000 9A020000 		.4byte	0x29a
 690 0004 0400     		.2byte	0x4
 691 0006 00000000 		.4byte	.Ldebug_abbrev0
 692 000a 04       		.byte	0x4
 693 000b 01       		.uleb128 0x1
 694 000c EE010000 		.4byte	.LASF40
 695 0010 01       		.byte	0x1
 696 0011 59000000 		.4byte	.LASF41
 697 0015 96000000 		.4byte	.LASF42
 698 0019 00000000 		.4byte	.Ldebug_ranges0+0
 699 001d 00000000 		.4byte	0
 700 0021 00000000 		.4byte	.Ldebug_line0
 701 0025 02       		.uleb128 0x2
 702 0026 01       		.byte	0x1
 703 0027 06       		.byte	0x6
 704 0028 12030000 		.4byte	.LASF0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 29


 705 002c 02       		.uleb128 0x2
 706 002d 01       		.byte	0x1
 707 002e 08       		.byte	0x8
 708 002f 05010000 		.4byte	.LASF1
 709 0033 02       		.uleb128 0x2
 710 0034 02       		.byte	0x2
 711 0035 05       		.byte	0x5
 712 0036 D4020000 		.4byte	.LASF2
 713 003a 02       		.uleb128 0x2
 714 003b 02       		.byte	0x2
 715 003c 07       		.byte	0x7
 716 003d 13000000 		.4byte	.LASF3
 717 0041 02       		.uleb128 0x2
 718 0042 04       		.byte	0x4
 719 0043 05       		.byte	0x5
 720 0044 F0020000 		.4byte	.LASF4
 721 0048 02       		.uleb128 0x2
 722 0049 04       		.byte	0x4
 723 004a 07       		.byte	0x7
 724 004b E5000000 		.4byte	.LASF5
 725 004f 02       		.uleb128 0x2
 726 0050 08       		.byte	0x8
 727 0051 05       		.byte	0x5
 728 0052 B8020000 		.4byte	.LASF6
 729 0056 02       		.uleb128 0x2
 730 0057 08       		.byte	0x8
 731 0058 07       		.byte	0x7
 732 0059 AA010000 		.4byte	.LASF7
 733 005d 03       		.uleb128 0x3
 734 005e 04       		.byte	0x4
 735 005f 05       		.byte	0x5
 736 0060 696E7400 		.ascii	"int\000"
 737 0064 02       		.uleb128 0x2
 738 0065 04       		.byte	0x4
 739 0066 07       		.byte	0x7
 740 0067 9D010000 		.4byte	.LASF8
 741 006b 04       		.uleb128 0x4
 742 006c F7000000 		.4byte	.LASF9
 743 0070 02       		.byte	0x2
 744 0071 B3       		.byte	0xb3
 745 0072 2C000000 		.4byte	0x2c
 746 0076 04       		.uleb128 0x4
 747 0077 74010000 		.4byte	.LASF10
 748 007b 02       		.byte	0x2
 749 007c B4       		.byte	0xb4
 750 007d 3A000000 		.4byte	0x3a
 751 0081 02       		.uleb128 0x2
 752 0082 04       		.byte	0x4
 753 0083 04       		.byte	0x4
 754 0084 06000000 		.4byte	.LASF11
 755 0088 02       		.uleb128 0x2
 756 0089 08       		.byte	0x8
 757 008a 04       		.byte	0x4
 758 008b 30010000 		.4byte	.LASF12
 759 008f 02       		.uleb128 0x2
 760 0090 01       		.byte	0x1
 761 0091 08       		.byte	0x8
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 30


 762 0092 F9020000 		.4byte	.LASF13
 763 0096 05       		.uleb128 0x5
 764 0097 91000000 		.4byte	.LASF14
 765 009b 02       		.byte	0x2
 766 009c 5D01     		.2byte	0x15d
 767 009e A2000000 		.4byte	0xa2
 768 00a2 06       		.uleb128 0x6
 769 00a3 6B000000 		.4byte	0x6b
 770 00a7 05       		.uleb128 0x5
 771 00a8 00000000 		.4byte	.LASF15
 772 00ac 02       		.byte	0x2
 773 00ad 5E01     		.2byte	0x15e
 774 00af B3000000 		.4byte	0xb3
 775 00b3 06       		.uleb128 0x6
 776 00b4 76000000 		.4byte	0x76
 777 00b8 02       		.uleb128 0x2
 778 00b9 04       		.byte	0x4
 779 00ba 07       		.byte	0x7
 780 00bb AF020000 		.4byte	.LASF16
 781 00bf 07       		.uleb128 0x7
 782 00c0 7B010000 		.4byte	.LASF19
 783 00c4 01       		.byte	0x1
 784 00c5 37       		.byte	0x37
 785 00c6 00000000 		.4byte	.LFB0
 786 00ca 20000000 		.4byte	.LFE0-.LFB0
 787 00ce 01       		.uleb128 0x1
 788 00cf 9C       		.byte	0x9c
 789 00d0 08       		.uleb128 0x8
 790 00d1 37010000 		.4byte	.LASF22
 791 00d5 01       		.byte	0x1
 792 00d6 54       		.byte	0x54
 793 00d7 00000000 		.4byte	.LFB1
 794 00db 94000000 		.4byte	.LFE1-.LFB1
 795 00df 01       		.uleb128 0x1
 796 00e0 9C       		.byte	0x9c
 797 00e1 02010000 		.4byte	0x102
 798 00e5 09       		.uleb128 0x9
 799 00e6 96020000 		.4byte	.LASF17
 800 00ea 01       		.byte	0x1
 801 00eb 57       		.byte	0x57
 802 00ec 6B000000 		.4byte	0x6b
 803 00f0 02       		.uleb128 0x2
 804 00f1 91       		.byte	0x91
 805 00f2 77       		.sleb128 -9
 806 00f3 09       		.uleb128 0x9
 807 00f4 D7010000 		.4byte	.LASF18
 808 00f8 01       		.byte	0x1
 809 00f9 5D       		.byte	0x5d
 810 00fa 6B000000 		.4byte	0x6b
 811 00fe 02       		.uleb128 0x2
 812 00ff 91       		.byte	0x91
 813 0100 76       		.sleb128 -10
 814 0101 00       		.byte	0
 815 0102 0A       		.uleb128 0xa
 816 0103 C1010000 		.4byte	.LASF20
 817 0107 01       		.byte	0x1
 818 0108 C7       		.byte	0xc7
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 31


 819 0109 00000000 		.4byte	.LFB2
 820 010d 20000000 		.4byte	.LFE2-.LFB2
 821 0111 01       		.uleb128 0x1
 822 0112 9C       		.byte	0x9c
 823 0113 0A       		.uleb128 0xa
 824 0114 26030000 		.4byte	.LASF21
 825 0118 01       		.byte	0x1
 826 0119 E9       		.byte	0xe9
 827 011a 00000000 		.4byte	.LFB3
 828 011e 20000000 		.4byte	.LFE3-.LFB3
 829 0122 01       		.uleb128 0x1
 830 0123 9C       		.byte	0x9c
 831 0124 0B       		.uleb128 0xb
 832 0125 7C000000 		.4byte	.LASF23
 833 0129 01       		.byte	0x1
 834 012a 9301     		.2byte	0x193
 835 012c 00000000 		.4byte	.LFB4
 836 0130 20000000 		.4byte	.LFE4-.LFB4
 837 0134 01       		.uleb128 0x1
 838 0135 9C       		.byte	0x9c
 839 0136 4A010000 		.4byte	0x14a
 840 013a 0C       		.uleb128 0xc
 841 013b 51000000 		.4byte	.LASF26
 842 013f 01       		.byte	0x1
 843 0140 9301     		.2byte	0x193
 844 0142 76000000 		.4byte	0x76
 845 0146 02       		.uleb128 0x2
 846 0147 91       		.byte	0x91
 847 0148 76       		.sleb128 -10
 848 0149 00       		.byte	0
 849 014a 0D       		.uleb128 0xd
 850 014b 9B020000 		.4byte	.LASF32
 851 014f 01       		.byte	0x1
 852 0150 A901     		.2byte	0x1a9
 853 0152 76000000 		.4byte	0x76
 854 0156 00000000 		.4byte	.LFB5
 855 015a 20000000 		.4byte	.LFE5-.LFB5
 856 015e 01       		.uleb128 0x1
 857 015f 9C       		.byte	0x9c
 858 0160 0E       		.uleb128 0xe
 859 0161 DE020000 		.4byte	.LASF24
 860 0165 01       		.byte	0x1
 861 0166 C501     		.2byte	0x1c5
 862 0168 00000000 		.4byte	.LFB6
 863 016c 1A000000 		.4byte	.LFE6-.LFB6
 864 0170 01       		.uleb128 0x1
 865 0171 9C       		.byte	0x9c
 866 0172 0B       		.uleb128 0xb
 867 0173 89010000 		.4byte	.LASF25
 868 0177 01       		.byte	0x1
 869 0178 E201     		.2byte	0x1e2
 870 017a 00000000 		.4byte	.LFB7
 871 017e 20000000 		.4byte	.LFE7-.LFB7
 872 0182 01       		.uleb128 0x1
 873 0183 9C       		.byte	0x9c
 874 0184 98010000 		.4byte	0x198
 875 0188 0C       		.uleb128 0xc
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 32


 876 0189 0C000000 		.4byte	.LASF27
 877 018d 01       		.byte	0x1
 878 018e E201     		.2byte	0x1e2
 879 0190 76000000 		.4byte	0x76
 880 0194 02       		.uleb128 0x2
 881 0195 91       		.byte	0x91
 882 0196 76       		.sleb128 -10
 883 0197 00       		.byte	0
 884 0198 0B       		.uleb128 0xb
 885 0199 33030000 		.4byte	.LASF28
 886 019d 01       		.byte	0x1
 887 019e 0402     		.2byte	0x204
 888 01a0 00000000 		.4byte	.LFB8
 889 01a4 20000000 		.4byte	.LFE8-.LFB8
 890 01a8 01       		.uleb128 0x1
 891 01a9 9C       		.byte	0x9c
 892 01aa BE010000 		.4byte	0x1be
 893 01ae 0C       		.uleb128 0xc
 894 01af 1E030000 		.4byte	.LASF29
 895 01b3 01       		.byte	0x1
 896 01b4 0402     		.2byte	0x204
 897 01b6 76000000 		.4byte	0x76
 898 01ba 02       		.uleb128 0x2
 899 01bb 91       		.byte	0x91
 900 01bc 76       		.sleb128 -10
 901 01bd 00       		.byte	0
 902 01be 0B       		.uleb128 0xb
 903 01bf 7D020000 		.4byte	.LASF30
 904 01c3 01       		.byte	0x1
 905 01c4 AC02     		.2byte	0x2ac
 906 01c6 00000000 		.4byte	.LFB9
 907 01ca 20000000 		.4byte	.LFE9-.LFB9
 908 01ce 01       		.uleb128 0x1
 909 01cf 9C       		.byte	0x9c
 910 01d0 E4010000 		.4byte	0x1e4
 911 01d4 0C       		.uleb128 0xc
 912 01d5 C6020000 		.4byte	.LASF31
 913 01d9 01       		.byte	0x1
 914 01da AC02     		.2byte	0x2ac
 915 01dc 6B000000 		.4byte	0x6b
 916 01e0 02       		.uleb128 0x2
 917 01e1 91       		.byte	0x91
 918 01e2 77       		.sleb128 -9
 919 01e3 00       		.byte	0
 920 01e4 0D       		.uleb128 0xd
 921 01e5 26000000 		.4byte	.LASF33
 922 01e9 01       		.byte	0x1
 923 01ea C702     		.2byte	0x2c7
 924 01ec 6B000000 		.4byte	0x6b
 925 01f0 00000000 		.4byte	.LFB10
 926 01f4 18000000 		.4byte	.LFE10-.LFB10
 927 01f8 01       		.uleb128 0x1
 928 01f9 9C       		.byte	0x9c
 929 01fa 0F       		.uleb128 0xf
 930 01fb 44010000 		.4byte	.LASF43
 931 01ff 01       		.byte	0x1
 932 0200 E102     		.2byte	0x2e1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 33


 933 0202 6B000000 		.4byte	0x6b
 934 0206 00000000 		.4byte	.LFB11
 935 020a 20000000 		.4byte	.LFE11-.LFB11
 936 020e 01       		.uleb128 0x1
 937 020f 9C       		.byte	0x9c
 938 0210 24020000 		.4byte	0x224
 939 0214 10       		.uleb128 0x10
 940 0215 D0010000 		.4byte	.LASF34
 941 0219 01       		.byte	0x1
 942 021a E302     		.2byte	0x2e3
 943 021c 6B000000 		.4byte	0x6b
 944 0220 02       		.uleb128 0x2
 945 0221 91       		.byte	0x91
 946 0222 77       		.sleb128 -9
 947 0223 00       		.byte	0
 948 0224 0B       		.uleb128 0xb
 949 0225 13010000 		.4byte	.LASF35
 950 0229 01       		.byte	0x1
 951 022a FD02     		.2byte	0x2fd
 952 022c 00000000 		.4byte	.LFB12
 953 0230 20000000 		.4byte	.LFE12-.LFB12
 954 0234 01       		.uleb128 0x1
 955 0235 9C       		.byte	0x9c
 956 0236 4A020000 		.4byte	0x24a
 957 023a 0C       		.uleb128 0xc
 958 023b FD000000 		.4byte	.LASF36
 959 023f 01       		.byte	0x1
 960 0240 FD02     		.2byte	0x2fd
 961 0242 6B000000 		.4byte	0x6b
 962 0246 02       		.uleb128 0x2
 963 0247 91       		.byte	0x91
 964 0248 77       		.sleb128 -9
 965 0249 00       		.byte	0
 966 024a 0D       		.uleb128 0xd
 967 024b 60010000 		.4byte	.LASF37
 968 024f 01       		.byte	0x1
 969 0250 1603     		.2byte	0x316
 970 0252 76000000 		.4byte	0x76
 971 0256 00000000 		.4byte	.LFB13
 972 025a 18000000 		.4byte	.LFE13-.LFB13
 973 025e 01       		.uleb128 0x1
 974 025f 9C       		.byte	0x9c
 975 0260 0D       		.uleb128 0xd
 976 0261 FE020000 		.4byte	.LASF38
 977 0265 01       		.byte	0x1
 978 0266 3003     		.2byte	0x330
 979 0268 76000000 		.4byte	0x76
 980 026c 00000000 		.4byte	.LFB14
 981 0270 18000000 		.4byte	.LFE14-.LFB14
 982 0274 01       		.uleb128 0x1
 983 0275 9C       		.byte	0x9c
 984 0276 0D       		.uleb128 0xd
 985 0277 6A020000 		.4byte	.LASF39
 986 027b 01       		.byte	0x1
 987 027c 7403     		.2byte	0x374
 988 027e 76000000 		.4byte	0x76
 989 0282 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 34


 990 0286 18000000 		.4byte	.LFE15-.LFB15
 991 028a 01       		.uleb128 0x1
 992 028b 9C       		.byte	0x9c
 993 028c 11       		.uleb128 0x11
 994 028d 41000000 		.4byte	.LASF44
 995 0291 01       		.byte	0x1
 996 0292 20       		.byte	0x20
 997 0293 6B000000 		.4byte	0x6b
 998 0297 05       		.uleb128 0x5
 999 0298 03       		.byte	0x3
 1000 0299 00000000 		.4byte	Arm_PWM_initVar
 1001 029d 00       		.byte	0
 1002              		.section	.debug_abbrev,"",%progbits
 1003              	.Ldebug_abbrev0:
 1004 0000 01       		.uleb128 0x1
 1005 0001 11       		.uleb128 0x11
 1006 0002 01       		.byte	0x1
 1007 0003 25       		.uleb128 0x25
 1008 0004 0E       		.uleb128 0xe
 1009 0005 13       		.uleb128 0x13
 1010 0006 0B       		.uleb128 0xb
 1011 0007 03       		.uleb128 0x3
 1012 0008 0E       		.uleb128 0xe
 1013 0009 1B       		.uleb128 0x1b
 1014 000a 0E       		.uleb128 0xe
 1015 000b 55       		.uleb128 0x55
 1016 000c 17       		.uleb128 0x17
 1017 000d 11       		.uleb128 0x11
 1018 000e 01       		.uleb128 0x1
 1019 000f 10       		.uleb128 0x10
 1020 0010 17       		.uleb128 0x17
 1021 0011 00       		.byte	0
 1022 0012 00       		.byte	0
 1023 0013 02       		.uleb128 0x2
 1024 0014 24       		.uleb128 0x24
 1025 0015 00       		.byte	0
 1026 0016 0B       		.uleb128 0xb
 1027 0017 0B       		.uleb128 0xb
 1028 0018 3E       		.uleb128 0x3e
 1029 0019 0B       		.uleb128 0xb
 1030 001a 03       		.uleb128 0x3
 1031 001b 0E       		.uleb128 0xe
 1032 001c 00       		.byte	0
 1033 001d 00       		.byte	0
 1034 001e 03       		.uleb128 0x3
 1035 001f 24       		.uleb128 0x24
 1036 0020 00       		.byte	0
 1037 0021 0B       		.uleb128 0xb
 1038 0022 0B       		.uleb128 0xb
 1039 0023 3E       		.uleb128 0x3e
 1040 0024 0B       		.uleb128 0xb
 1041 0025 03       		.uleb128 0x3
 1042 0026 08       		.uleb128 0x8
 1043 0027 00       		.byte	0
 1044 0028 00       		.byte	0
 1045 0029 04       		.uleb128 0x4
 1046 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 35


 1047 002b 00       		.byte	0
 1048 002c 03       		.uleb128 0x3
 1049 002d 0E       		.uleb128 0xe
 1050 002e 3A       		.uleb128 0x3a
 1051 002f 0B       		.uleb128 0xb
 1052 0030 3B       		.uleb128 0x3b
 1053 0031 0B       		.uleb128 0xb
 1054 0032 49       		.uleb128 0x49
 1055 0033 13       		.uleb128 0x13
 1056 0034 00       		.byte	0
 1057 0035 00       		.byte	0
 1058 0036 05       		.uleb128 0x5
 1059 0037 16       		.uleb128 0x16
 1060 0038 00       		.byte	0
 1061 0039 03       		.uleb128 0x3
 1062 003a 0E       		.uleb128 0xe
 1063 003b 3A       		.uleb128 0x3a
 1064 003c 0B       		.uleb128 0xb
 1065 003d 3B       		.uleb128 0x3b
 1066 003e 05       		.uleb128 0x5
 1067 003f 49       		.uleb128 0x49
 1068 0040 13       		.uleb128 0x13
 1069 0041 00       		.byte	0
 1070 0042 00       		.byte	0
 1071 0043 06       		.uleb128 0x6
 1072 0044 35       		.uleb128 0x35
 1073 0045 00       		.byte	0
 1074 0046 49       		.uleb128 0x49
 1075 0047 13       		.uleb128 0x13
 1076 0048 00       		.byte	0
 1077 0049 00       		.byte	0
 1078 004a 07       		.uleb128 0x7
 1079 004b 2E       		.uleb128 0x2e
 1080 004c 00       		.byte	0
 1081 004d 3F       		.uleb128 0x3f
 1082 004e 19       		.uleb128 0x19
 1083 004f 03       		.uleb128 0x3
 1084 0050 0E       		.uleb128 0xe
 1085 0051 3A       		.uleb128 0x3a
 1086 0052 0B       		.uleb128 0xb
 1087 0053 3B       		.uleb128 0x3b
 1088 0054 0B       		.uleb128 0xb
 1089 0055 27       		.uleb128 0x27
 1090 0056 19       		.uleb128 0x19
 1091 0057 11       		.uleb128 0x11
 1092 0058 01       		.uleb128 0x1
 1093 0059 12       		.uleb128 0x12
 1094 005a 06       		.uleb128 0x6
 1095 005b 40       		.uleb128 0x40
 1096 005c 18       		.uleb128 0x18
 1097 005d 9642     		.uleb128 0x2116
 1098 005f 19       		.uleb128 0x19
 1099 0060 00       		.byte	0
 1100 0061 00       		.byte	0
 1101 0062 08       		.uleb128 0x8
 1102 0063 2E       		.uleb128 0x2e
 1103 0064 01       		.byte	0x1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 36


 1104 0065 3F       		.uleb128 0x3f
 1105 0066 19       		.uleb128 0x19
 1106 0067 03       		.uleb128 0x3
 1107 0068 0E       		.uleb128 0xe
 1108 0069 3A       		.uleb128 0x3a
 1109 006a 0B       		.uleb128 0xb
 1110 006b 3B       		.uleb128 0x3b
 1111 006c 0B       		.uleb128 0xb
 1112 006d 27       		.uleb128 0x27
 1113 006e 19       		.uleb128 0x19
 1114 006f 11       		.uleb128 0x11
 1115 0070 01       		.uleb128 0x1
 1116 0071 12       		.uleb128 0x12
 1117 0072 06       		.uleb128 0x6
 1118 0073 40       		.uleb128 0x40
 1119 0074 18       		.uleb128 0x18
 1120 0075 9642     		.uleb128 0x2116
 1121 0077 19       		.uleb128 0x19
 1122 0078 01       		.uleb128 0x1
 1123 0079 13       		.uleb128 0x13
 1124 007a 00       		.byte	0
 1125 007b 00       		.byte	0
 1126 007c 09       		.uleb128 0x9
 1127 007d 34       		.uleb128 0x34
 1128 007e 00       		.byte	0
 1129 007f 03       		.uleb128 0x3
 1130 0080 0E       		.uleb128 0xe
 1131 0081 3A       		.uleb128 0x3a
 1132 0082 0B       		.uleb128 0xb
 1133 0083 3B       		.uleb128 0x3b
 1134 0084 0B       		.uleb128 0xb
 1135 0085 49       		.uleb128 0x49
 1136 0086 13       		.uleb128 0x13
 1137 0087 02       		.uleb128 0x2
 1138 0088 18       		.uleb128 0x18
 1139 0089 00       		.byte	0
 1140 008a 00       		.byte	0
 1141 008b 0A       		.uleb128 0xa
 1142 008c 2E       		.uleb128 0x2e
 1143 008d 00       		.byte	0
 1144 008e 3F       		.uleb128 0x3f
 1145 008f 19       		.uleb128 0x19
 1146 0090 03       		.uleb128 0x3
 1147 0091 0E       		.uleb128 0xe
 1148 0092 3A       		.uleb128 0x3a
 1149 0093 0B       		.uleb128 0xb
 1150 0094 3B       		.uleb128 0x3b
 1151 0095 0B       		.uleb128 0xb
 1152 0096 27       		.uleb128 0x27
 1153 0097 19       		.uleb128 0x19
 1154 0098 11       		.uleb128 0x11
 1155 0099 01       		.uleb128 0x1
 1156 009a 12       		.uleb128 0x12
 1157 009b 06       		.uleb128 0x6
 1158 009c 40       		.uleb128 0x40
 1159 009d 18       		.uleb128 0x18
 1160 009e 9742     		.uleb128 0x2117
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 37


 1161 00a0 19       		.uleb128 0x19
 1162 00a1 00       		.byte	0
 1163 00a2 00       		.byte	0
 1164 00a3 0B       		.uleb128 0xb
 1165 00a4 2E       		.uleb128 0x2e
 1166 00a5 01       		.byte	0x1
 1167 00a6 3F       		.uleb128 0x3f
 1168 00a7 19       		.uleb128 0x19
 1169 00a8 03       		.uleb128 0x3
 1170 00a9 0E       		.uleb128 0xe
 1171 00aa 3A       		.uleb128 0x3a
 1172 00ab 0B       		.uleb128 0xb
 1173 00ac 3B       		.uleb128 0x3b
 1174 00ad 05       		.uleb128 0x5
 1175 00ae 27       		.uleb128 0x27
 1176 00af 19       		.uleb128 0x19
 1177 00b0 11       		.uleb128 0x11
 1178 00b1 01       		.uleb128 0x1
 1179 00b2 12       		.uleb128 0x12
 1180 00b3 06       		.uleb128 0x6
 1181 00b4 40       		.uleb128 0x40
 1182 00b5 18       		.uleb128 0x18
 1183 00b6 9742     		.uleb128 0x2117
 1184 00b8 19       		.uleb128 0x19
 1185 00b9 01       		.uleb128 0x1
 1186 00ba 13       		.uleb128 0x13
 1187 00bb 00       		.byte	0
 1188 00bc 00       		.byte	0
 1189 00bd 0C       		.uleb128 0xc
 1190 00be 05       		.uleb128 0x5
 1191 00bf 00       		.byte	0
 1192 00c0 03       		.uleb128 0x3
 1193 00c1 0E       		.uleb128 0xe
 1194 00c2 3A       		.uleb128 0x3a
 1195 00c3 0B       		.uleb128 0xb
 1196 00c4 3B       		.uleb128 0x3b
 1197 00c5 05       		.uleb128 0x5
 1198 00c6 49       		.uleb128 0x49
 1199 00c7 13       		.uleb128 0x13
 1200 00c8 02       		.uleb128 0x2
 1201 00c9 18       		.uleb128 0x18
 1202 00ca 00       		.byte	0
 1203 00cb 00       		.byte	0
 1204 00cc 0D       		.uleb128 0xd
 1205 00cd 2E       		.uleb128 0x2e
 1206 00ce 00       		.byte	0
 1207 00cf 3F       		.uleb128 0x3f
 1208 00d0 19       		.uleb128 0x19
 1209 00d1 03       		.uleb128 0x3
 1210 00d2 0E       		.uleb128 0xe
 1211 00d3 3A       		.uleb128 0x3a
 1212 00d4 0B       		.uleb128 0xb
 1213 00d5 3B       		.uleb128 0x3b
 1214 00d6 05       		.uleb128 0x5
 1215 00d7 27       		.uleb128 0x27
 1216 00d8 19       		.uleb128 0x19
 1217 00d9 49       		.uleb128 0x49
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 38


 1218 00da 13       		.uleb128 0x13
 1219 00db 11       		.uleb128 0x11
 1220 00dc 01       		.uleb128 0x1
 1221 00dd 12       		.uleb128 0x12
 1222 00de 06       		.uleb128 0x6
 1223 00df 40       		.uleb128 0x40
 1224 00e0 18       		.uleb128 0x18
 1225 00e1 9742     		.uleb128 0x2117
 1226 00e3 19       		.uleb128 0x19
 1227 00e4 00       		.byte	0
 1228 00e5 00       		.byte	0
 1229 00e6 0E       		.uleb128 0xe
 1230 00e7 2E       		.uleb128 0x2e
 1231 00e8 00       		.byte	0
 1232 00e9 3F       		.uleb128 0x3f
 1233 00ea 19       		.uleb128 0x19
 1234 00eb 03       		.uleb128 0x3
 1235 00ec 0E       		.uleb128 0xe
 1236 00ed 3A       		.uleb128 0x3a
 1237 00ee 0B       		.uleb128 0xb
 1238 00ef 3B       		.uleb128 0x3b
 1239 00f0 05       		.uleb128 0x5
 1240 00f1 27       		.uleb128 0x27
 1241 00f2 19       		.uleb128 0x19
 1242 00f3 11       		.uleb128 0x11
 1243 00f4 01       		.uleb128 0x1
 1244 00f5 12       		.uleb128 0x12
 1245 00f6 06       		.uleb128 0x6
 1246 00f7 40       		.uleb128 0x40
 1247 00f8 18       		.uleb128 0x18
 1248 00f9 9642     		.uleb128 0x2116
 1249 00fb 19       		.uleb128 0x19
 1250 00fc 00       		.byte	0
 1251 00fd 00       		.byte	0
 1252 00fe 0F       		.uleb128 0xf
 1253 00ff 2E       		.uleb128 0x2e
 1254 0100 01       		.byte	0x1
 1255 0101 3F       		.uleb128 0x3f
 1256 0102 19       		.uleb128 0x19
 1257 0103 03       		.uleb128 0x3
 1258 0104 0E       		.uleb128 0xe
 1259 0105 3A       		.uleb128 0x3a
 1260 0106 0B       		.uleb128 0xb
 1261 0107 3B       		.uleb128 0x3b
 1262 0108 05       		.uleb128 0x5
 1263 0109 27       		.uleb128 0x27
 1264 010a 19       		.uleb128 0x19
 1265 010b 49       		.uleb128 0x49
 1266 010c 13       		.uleb128 0x13
 1267 010d 11       		.uleb128 0x11
 1268 010e 01       		.uleb128 0x1
 1269 010f 12       		.uleb128 0x12
 1270 0110 06       		.uleb128 0x6
 1271 0111 40       		.uleb128 0x40
 1272 0112 18       		.uleb128 0x18
 1273 0113 9742     		.uleb128 0x2117
 1274 0115 19       		.uleb128 0x19
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 39


 1275 0116 01       		.uleb128 0x1
 1276 0117 13       		.uleb128 0x13
 1277 0118 00       		.byte	0
 1278 0119 00       		.byte	0
 1279 011a 10       		.uleb128 0x10
 1280 011b 34       		.uleb128 0x34
 1281 011c 00       		.byte	0
 1282 011d 03       		.uleb128 0x3
 1283 011e 0E       		.uleb128 0xe
 1284 011f 3A       		.uleb128 0x3a
 1285 0120 0B       		.uleb128 0xb
 1286 0121 3B       		.uleb128 0x3b
 1287 0122 05       		.uleb128 0x5
 1288 0123 49       		.uleb128 0x49
 1289 0124 13       		.uleb128 0x13
 1290 0125 02       		.uleb128 0x2
 1291 0126 18       		.uleb128 0x18
 1292 0127 00       		.byte	0
 1293 0128 00       		.byte	0
 1294 0129 11       		.uleb128 0x11
 1295 012a 34       		.uleb128 0x34
 1296 012b 00       		.byte	0
 1297 012c 03       		.uleb128 0x3
 1298 012d 0E       		.uleb128 0xe
 1299 012e 3A       		.uleb128 0x3a
 1300 012f 0B       		.uleb128 0xb
 1301 0130 3B       		.uleb128 0x3b
 1302 0131 0B       		.uleb128 0xb
 1303 0132 49       		.uleb128 0x49
 1304 0133 13       		.uleb128 0x13
 1305 0134 3F       		.uleb128 0x3f
 1306 0135 19       		.uleb128 0x19
 1307 0136 02       		.uleb128 0x2
 1308 0137 18       		.uleb128 0x18
 1309 0138 00       		.byte	0
 1310 0139 00       		.byte	0
 1311 013a 00       		.byte	0
 1312              		.section	.debug_aranges,"",%progbits
 1313 0000 94000000 		.4byte	0x94
 1314 0004 0200     		.2byte	0x2
 1315 0006 00000000 		.4byte	.Ldebug_info0
 1316 000a 04       		.byte	0x4
 1317 000b 00       		.byte	0
 1318 000c 0000     		.2byte	0
 1319 000e 0000     		.2byte	0
 1320 0010 00000000 		.4byte	.LFB0
 1321 0014 20000000 		.4byte	.LFE0-.LFB0
 1322 0018 00000000 		.4byte	.LFB1
 1323 001c 94000000 		.4byte	.LFE1-.LFB1
 1324 0020 00000000 		.4byte	.LFB2
 1325 0024 20000000 		.4byte	.LFE2-.LFB2
 1326 0028 00000000 		.4byte	.LFB3
 1327 002c 20000000 		.4byte	.LFE3-.LFB3
 1328 0030 00000000 		.4byte	.LFB4
 1329 0034 20000000 		.4byte	.LFE4-.LFB4
 1330 0038 00000000 		.4byte	.LFB5
 1331 003c 20000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 40


 1332 0040 00000000 		.4byte	.LFB6
 1333 0044 1A000000 		.4byte	.LFE6-.LFB6
 1334 0048 00000000 		.4byte	.LFB7
 1335 004c 20000000 		.4byte	.LFE7-.LFB7
 1336 0050 00000000 		.4byte	.LFB8
 1337 0054 20000000 		.4byte	.LFE8-.LFB8
 1338 0058 00000000 		.4byte	.LFB9
 1339 005c 20000000 		.4byte	.LFE9-.LFB9
 1340 0060 00000000 		.4byte	.LFB10
 1341 0064 18000000 		.4byte	.LFE10-.LFB10
 1342 0068 00000000 		.4byte	.LFB11
 1343 006c 20000000 		.4byte	.LFE11-.LFB11
 1344 0070 00000000 		.4byte	.LFB12
 1345 0074 20000000 		.4byte	.LFE12-.LFB12
 1346 0078 00000000 		.4byte	.LFB13
 1347 007c 18000000 		.4byte	.LFE13-.LFB13
 1348 0080 00000000 		.4byte	.LFB14
 1349 0084 18000000 		.4byte	.LFE14-.LFB14
 1350 0088 00000000 		.4byte	.LFB15
 1351 008c 18000000 		.4byte	.LFE15-.LFB15
 1352 0090 00000000 		.4byte	0
 1353 0094 00000000 		.4byte	0
 1354              		.section	.debug_ranges,"",%progbits
 1355              	.Ldebug_ranges0:
 1356 0000 00000000 		.4byte	.LFB0
 1357 0004 20000000 		.4byte	.LFE0
 1358 0008 00000000 		.4byte	.LFB1
 1359 000c 94000000 		.4byte	.LFE1
 1360 0010 00000000 		.4byte	.LFB2
 1361 0014 20000000 		.4byte	.LFE2
 1362 0018 00000000 		.4byte	.LFB3
 1363 001c 20000000 		.4byte	.LFE3
 1364 0020 00000000 		.4byte	.LFB4
 1365 0024 20000000 		.4byte	.LFE4
 1366 0028 00000000 		.4byte	.LFB5
 1367 002c 20000000 		.4byte	.LFE5
 1368 0030 00000000 		.4byte	.LFB6
 1369 0034 1A000000 		.4byte	.LFE6
 1370 0038 00000000 		.4byte	.LFB7
 1371 003c 20000000 		.4byte	.LFE7
 1372 0040 00000000 		.4byte	.LFB8
 1373 0044 20000000 		.4byte	.LFE8
 1374 0048 00000000 		.4byte	.LFB9
 1375 004c 20000000 		.4byte	.LFE9
 1376 0050 00000000 		.4byte	.LFB10
 1377 0054 18000000 		.4byte	.LFE10
 1378 0058 00000000 		.4byte	.LFB11
 1379 005c 20000000 		.4byte	.LFE11
 1380 0060 00000000 		.4byte	.LFB12
 1381 0064 20000000 		.4byte	.LFE12
 1382 0068 00000000 		.4byte	.LFB13
 1383 006c 18000000 		.4byte	.LFE13
 1384 0070 00000000 		.4byte	.LFB14
 1385 0074 18000000 		.4byte	.LFE14
 1386 0078 00000000 		.4byte	.LFB15
 1387 007c 18000000 		.4byte	.LFE15
 1388 0080 00000000 		.4byte	0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 41


 1389 0084 00000000 		.4byte	0
 1390              		.section	.debug_line,"",%progbits
 1391              	.Ldebug_line0:
 1392 0000 8D010000 		.section	.debug_str,"MS",%progbits,1
 1392      02004600 
 1392      00000201 
 1392      FB0E0D00 
 1392      01010101 
 1393              	.LASF15:
 1394 0000 72656731 		.ascii	"reg16\000"
 1394      3600
 1395              	.LASF11:
 1396 0006 666C6F61 		.ascii	"float\000"
 1396      7400
 1397              	.LASF27:
 1398 000c 70657269 		.ascii	"period\000"
 1398      6F6400
 1399              	.LASF3:
 1400 0013 73686F72 		.ascii	"short unsigned int\000"
 1400      7420756E 
 1400      7369676E 
 1400      65642069 
 1400      6E7400
 1401              	.LASF33:
 1402 0026 41726D5F 		.ascii	"Arm_PWM_ReadStatusRegister\000"
 1402      50574D5F 
 1402      52656164 
 1402      53746174 
 1402      75735265 
 1403              	.LASF44:
 1404 0041 41726D5F 		.ascii	"Arm_PWM_initVar\000"
 1404      50574D5F 
 1404      696E6974 
 1404      56617200 
 1405              	.LASF26:
 1406 0051 636F756E 		.ascii	"counter\000"
 1406      74657200 
 1407              	.LASF41:
 1408 0059 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Arm_PWM.c\000"
 1408      6E657261 
 1408      7465645F 
 1408      536F7572 
 1408      63655C50 
 1409              	.LASF23:
 1410 007c 41726D5F 		.ascii	"Arm_PWM_WriteCounter\000"
 1410      50574D5F 
 1410      57726974 
 1410      65436F75 
 1410      6E746572 
 1411              	.LASF14:
 1412 0091 72656738 		.ascii	"reg8\000"
 1412      00
 1413              	.LASF42:
 1414 0096 433A5C55 		.ascii	"C:\\Users\\xavieran\\Desktop\\ECE3091\\PSOCProjects"
 1414      73657273 
 1414      5C786176 
 1414      69657261 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 42


 1414      6E5C4465 
 1415 00c4 5C454E47 		.ascii	"\\ENG3091_MandM\\camera_test.cydsn\000"
 1415      33303931 
 1415      5F4D616E 
 1415      644D5C63 
 1415      616D6572 
 1416              	.LASF5:
 1417 00e5 6C6F6E67 		.ascii	"long unsigned int\000"
 1417      20756E73 
 1417      69676E65 
 1417      6420696E 
 1417      7400
 1418              	.LASF9:
 1419 00f7 75696E74 		.ascii	"uint8\000"
 1419      3800
 1420              	.LASF36:
 1421 00fd 636F6E74 		.ascii	"control\000"
 1421      726F6C00 
 1422              	.LASF1:
 1423 0105 756E7369 		.ascii	"unsigned char\000"
 1423      676E6564 
 1423      20636861 
 1423      7200
 1424              	.LASF35:
 1425 0113 41726D5F 		.ascii	"Arm_PWM_WriteControlRegister\000"
 1425      50574D5F 
 1425      57726974 
 1425      65436F6E 
 1425      74726F6C 
 1426              	.LASF12:
 1427 0130 646F7562 		.ascii	"double\000"
 1427      6C6500
 1428              	.LASF22:
 1429 0137 41726D5F 		.ascii	"Arm_PWM_Init\000"
 1429      50574D5F 
 1429      496E6974 
 1429      00
 1430              	.LASF43:
 1431 0144 41726D5F 		.ascii	"Arm_PWM_ReadControlRegister\000"
 1431      50574D5F 
 1431      52656164 
 1431      436F6E74 
 1431      726F6C52 
 1432              	.LASF37:
 1433 0160 41726D5F 		.ascii	"Arm_PWM_ReadCapture\000"
 1433      50574D5F 
 1433      52656164 
 1433      43617074 
 1433      75726500 
 1434              	.LASF10:
 1435 0174 75696E74 		.ascii	"uint16\000"
 1435      313600
 1436              	.LASF19:
 1437 017b 41726D5F 		.ascii	"Arm_PWM_Start\000"
 1437      50574D5F 
 1437      53746172 
 1437      7400
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 43


 1438              	.LASF25:
 1439 0189 41726D5F 		.ascii	"Arm_PWM_WritePeriod\000"
 1439      50574D5F 
 1439      57726974 
 1439      65506572 
 1439      696F6400 
 1440              	.LASF8:
 1441 019d 756E7369 		.ascii	"unsigned int\000"
 1441      676E6564 
 1441      20696E74 
 1441      00
 1442              	.LASF7:
 1443 01aa 6C6F6E67 		.ascii	"long long unsigned int\000"
 1443      206C6F6E 
 1443      6720756E 
 1443      7369676E 
 1443      65642069 
 1444              	.LASF20:
 1445 01c1 41726D5F 		.ascii	"Arm_PWM_Enable\000"
 1445      50574D5F 
 1445      456E6162 
 1445      6C6500
 1446              	.LASF34:
 1447 01d0 72657375 		.ascii	"result\000"
 1447      6C7400
 1448              	.LASF18:
 1449 01d7 41726D5F 		.ascii	"Arm_PWM_interruptState\000"
 1449      50574D5F 
 1449      696E7465 
 1449      72727570 
 1449      74537461 
 1450              	.LASF40:
 1451 01ee 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1451      4320342E 
 1451      382E3420 
 1451      32303134 
 1451      30353236 
 1452 0221 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1452      20726576 
 1452      6973696F 
 1452      6E203231 
 1452      31333538 
 1453 0254 30202D66 		.ascii	"0 -ffunction-sections\000"
 1453      66756E63 
 1453      74696F6E 
 1453      2D736563 
 1453      74696F6E 
 1454              	.LASF39:
 1455 026a 41726D5F 		.ascii	"Arm_PWM_ReadPeriod\000"
 1455      50574D5F 
 1455      52656164 
 1455      50657269 
 1455      6F6400
 1456              	.LASF30:
 1457 027d 41726D5F 		.ascii	"Arm_PWM_SetInterruptMode\000"
 1457      50574D5F 
 1457      53657449 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 44


 1457      6E746572 
 1457      72757074 
 1458              	.LASF17:
 1459 0296 6374726C 		.ascii	"ctrl\000"
 1459      00
 1460              	.LASF32:
 1461 029b 41726D5F 		.ascii	"Arm_PWM_ReadCounter\000"
 1461      50574D5F 
 1461      52656164 
 1461      436F756E 
 1461      74657200 
 1462              	.LASF16:
 1463 02af 73697A65 		.ascii	"sizetype\000"
 1463      74797065 
 1463      00
 1464              	.LASF6:
 1465 02b8 6C6F6E67 		.ascii	"long long int\000"
 1465      206C6F6E 
 1465      6720696E 
 1465      7400
 1466              	.LASF31:
 1467 02c6 696E7465 		.ascii	"interruptMode\000"
 1467      72727570 
 1467      744D6F64 
 1467      6500
 1468              	.LASF2:
 1469 02d4 73686F72 		.ascii	"short int\000"
 1469      7420696E 
 1469      7400
 1470              	.LASF24:
 1471 02de 41726D5F 		.ascii	"Arm_PWM_ClearFIFO\000"
 1471      50574D5F 
 1471      436C6561 
 1471      72464946 
 1471      4F00
 1472              	.LASF4:
 1473 02f0 6C6F6E67 		.ascii	"long int\000"
 1473      20696E74 
 1473      00
 1474              	.LASF13:
 1475 02f9 63686172 		.ascii	"char\000"
 1475      00
 1476              	.LASF38:
 1477 02fe 41726D5F 		.ascii	"Arm_PWM_ReadCompare\000"
 1477      50574D5F 
 1477      52656164 
 1477      436F6D70 
 1477      61726500 
 1478              	.LASF0:
 1479 0312 7369676E 		.ascii	"signed char\000"
 1479      65642063 
 1479      68617200 
 1480              	.LASF29:
 1481 031e 636F6D70 		.ascii	"compare\000"
 1481      61726500 
 1482              	.LASF21:
 1483 0326 41726D5F 		.ascii	"Arm_PWM_Stop\000"
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc46c4Ur.s 			page 45


 1483      50574D5F 
 1483      53746F70 
 1483      00
 1484              	.LASF28:
 1485 0333 41726D5F 		.ascii	"Arm_PWM_WriteCompare\000"
 1485      50574D5F 
 1485      57726974 
 1485      65436F6D 
 1485      70617265 
 1486              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
