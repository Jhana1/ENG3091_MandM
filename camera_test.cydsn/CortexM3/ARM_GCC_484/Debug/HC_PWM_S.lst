ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"HC_PWM_S.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	HC_PWM_S_initVar
  19              		.bss
  20              		.type	HC_PWM_S_initVar, %object
  21              		.size	HC_PWM_S_initVar, 1
  22              	HC_PWM_S_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.HC_PWM_S_Start,"ax",%progbits
  25              		.align	2
  26              		.global	HC_PWM_S_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	HC_PWM_S_Start, %function
  30              	HC_PWM_S_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\HC_PWM_S.c"
   1:.\Generated_Source\PSoC5/HC_PWM_S.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/HC_PWM_S.c **** * File Name: HC_PWM_S.c
   3:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
   5:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Description:
   6:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
  15:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Note:
  16:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
  17:.\Generated_Source\PSoC5/HC_PWM_S.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/HC_PWM_S.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/HC_PWM_S.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/HC_PWM_S.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/HC_PWM_S.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
  24:.\Generated_Source\PSoC5/HC_PWM_S.c **** #include "HC_PWM_S.h"
  25:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 2


  26:.\Generated_Source\PSoC5/HC_PWM_S.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/HC_PWM_S.c **** #ifdef HC_PWM_S_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/HC_PWM_S.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/HC_PWM_S.c **** #endif /* HC_PWM_S_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
  32:.\Generated_Source\PSoC5/HC_PWM_S.c **** uint8 HC_PWM_S_initVar = 0u;
  33:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
  34:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
  35:.\Generated_Source\PSoC5/HC_PWM_S.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Function Name: HC_PWM_S_Start
  37:.\Generated_Source\PSoC5/HC_PWM_S.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
  39:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Summary:
  40:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
  44:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Parameters:
  45:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  None
  46:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
  47:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Return:
  48:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  None
  49:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
  50:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Global variables:
  51:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  HC_PWM_S_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/HC_PWM_S.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
  54:.\Generated_Source\PSoC5/HC_PWM_S.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/HC_PWM_S.c **** void HC_PWM_S_Start(void) 
  56:.\Generated_Source\PSoC5/HC_PWM_S.c **** {
  33              		.loc 1 56 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/HC_PWM_S.c ****     if(HC_PWM_S_initVar == 0u)
  43              		.loc 1 58 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
  60:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_Init();
  48              		.loc 1 60 0
  49 000c FFF7FEFF 		bl	HC_PWM_S_Init
  61:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_initVar = 1u;
  50              		.loc 1 61 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 3


  54              	.L2:
  62:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
  63:.\Generated_Source\PSoC5/HC_PWM_S.c ****     HC_PWM_S_Enable();
  55              		.loc 1 63 0
  56 0016 FFF7FEFF 		bl	HC_PWM_S_Enable
  64:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
  65:.\Generated_Source\PSoC5/HC_PWM_S.c **** }
  57              		.loc 1 65 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	HC_PWM_S_initVar
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	HC_PWM_S_Start, .-HC_PWM_S_Start
  66              		.section	.text.HC_PWM_S_Init,"ax",%progbits
  67              		.align	2
  68              		.global	HC_PWM_S_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	HC_PWM_S_Init, %function
  72              	HC_PWM_S_Init:
  73              	.LFB1:
  66:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
  67:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
  68:.\Generated_Source\PSoC5/HC_PWM_S.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Function Name: HC_PWM_S_Init
  70:.\Generated_Source\PSoC5/HC_PWM_S.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
  72:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Summary:
  73:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  HC_PWM_S_Start().
  76:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
  77:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Parameters:
  78:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  None
  79:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
  80:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Return:
  81:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  None
  82:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
  83:.\Generated_Source\PSoC5/HC_PWM_S.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/HC_PWM_S.c **** void HC_PWM_S_Init(void) 
  85:.\Generated_Source\PSoC5/HC_PWM_S.c **** {
  74              		.loc 1 85 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 82B0     		sub	sp, sp, #8
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if (HC_PWM_S_UsingFixedFunction || HC_PWM_S_UseControl)
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 4


  87:.\Generated_Source\PSoC5/HC_PWM_S.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* (HC_PWM_S_UsingFixedFunction || HC_PWM_S_UseControl) */
  89:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
  90:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if(!HC_PWM_S_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if(HC_PWM_S_UseStatus)
  92:.\Generated_Source\PSoC5/HC_PWM_S.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/HC_PWM_S.c ****             uint8 HC_PWM_S_interruptState;
  94:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (HC_PWM_S_UseStatus) */
  95:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* (!HC_PWM_S_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
  97:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if (HC_PWM_S_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/HC_PWM_S.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_CONTROL |= HC_PWM_S_CFG0_MODE;
 100:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if (HC_PWM_S_DeadBand2_4)
 101:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_CONTROL |= HC_PWM_S_CFG0_DB;
 102:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (HC_PWM_S_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 104:.\Generated_Source\PSoC5/HC_PWM_S.c ****         ctrl = HC_PWM_S_CONTROL3 & ((uint8 )(~HC_PWM_S_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_CONTROL3 = ctrl | HC_PWM_S_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 107:.\Generated_Source\PSoC5/HC_PWM_S.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_RT1 &= ((uint8)(~HC_PWM_S_RT1_MASK));
 109:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_RT1 |= HC_PWM_S_SYNC;
 110:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 111:.\Generated_Source\PSoC5/HC_PWM_S.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_RT1 &= ((uint8)(~HC_PWM_S_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_RT1 |= HC_PWM_S_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 115:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #elif (HC_PWM_S_UseControl)
 116:.\Generated_Source\PSoC5/HC_PWM_S.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/HC_PWM_S.c ****         ctrl = HC_PWM_S_CONTROL & ((uint8)(~HC_PWM_S_CTRL_CMPMODE2_MASK)) &
  86              		.loc 1 117 0
  87 0006 224B     		ldr	r3, .L6
  88 0008 1B78     		ldrb	r3, [r3]
  89 000a DBB2     		uxtb	r3, r3
  90 000c 23F03F03 		bic	r3, r3, #63
  91 0010 FB71     		strb	r3, [r7, #7]
 118:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 ((uint8)(~HC_PWM_S_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_CONTROL = ctrl | HC_PWM_S_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0012 1F4B     		ldr	r3, .L6
  94 0014 FA79     		ldrb	r2, [r7, #7]
  95 0016 42F00C02 		orr	r2, r2, #12
  96 001a D2B2     		uxtb	r2, r2
  97 001c 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC5/HC_PWM_S.c ****                                    HC_PWM_S_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* (HC_PWM_S_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 123:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if (!HC_PWM_S_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if (HC_PWM_S_Resolution == 8)
 125:.\Generated_Source\PSoC5/HC_PWM_S.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_AUX_CONTROLDP0 |= (HC_PWM_S_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #else /* (HC_PWM_S_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/HC_PWM_S.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_AUX_CONTROLDP0 |= (HC_PWM_S_AUX_CTRL_FIFO0_CLR);
  98              		.loc 1 129 0
  99 001e 1D4B     		ldr	r3, .L6+4
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 5


 100 0020 1C4A     		ldr	r2, .L6+4
 101 0022 1278     		ldrb	r2, [r2]
 102 0024 D2B2     		uxtb	r2, r2
 103 0026 42F00102 		orr	r2, r2, #1
 104 002a D2B2     		uxtb	r2, r2
 105 002c 1A70     		strb	r2, [r3]
 130:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_AUX_CONTROLDP1 |= (HC_PWM_S_AUX_CTRL_FIFO0_CLR);
 106              		.loc 1 130 0
 107 002e 1A4B     		ldr	r3, .L6+8
 108 0030 194A     		ldr	r2, .L6+8
 109 0032 1278     		ldrb	r2, [r2]
 110 0034 D2B2     		uxtb	r2, r2
 111 0036 42F00102 		orr	r2, r2, #1
 112 003a D2B2     		uxtb	r2, r2
 113 003c 1A70     		strb	r2, [r3]
 131:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (HC_PWM_S_Resolution == 8) */
 132:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 133:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_WriteCounter(HC_PWM_S_INIT_PERIOD_VALUE);
 114              		.loc 1 133 0
 115 003e 4CF24F30 		movw	r0, #49999
 116 0042 FFF7FEFF 		bl	HC_PWM_S_WriteCounter
 134:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* (!HC_PWM_S_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 136:.\Generated_Source\PSoC5/HC_PWM_S.c ****     HC_PWM_S_WritePeriod(HC_PWM_S_INIT_PERIOD_VALUE);
 117              		.loc 1 136 0
 118 0046 4CF24F30 		movw	r0, #49999
 119 004a FFF7FEFF 		bl	HC_PWM_S_WritePeriod
 137:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 138:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if (HC_PWM_S_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_WriteCompare(HC_PWM_S_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #else
 141:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_WriteCompare1(HC_PWM_S_INIT_COMPARE_VALUE1);
 120              		.loc 1 141 0
 121 004e 4AF6B370 		movw	r0, #44979
 122 0052 FFF7FEFF 		bl	HC_PWM_S_WriteCompare1
 142:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_WriteCompare2(HC_PWM_S_INIT_COMPARE_VALUE2);
 123              		.loc 1 142 0
 124 0056 42F21070 		movw	r0, #10000
 125 005a FFF7FEFF 		bl	HC_PWM_S_WriteCompare2
 143:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (HC_PWM_S_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 145:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if (HC_PWM_S_KillModeMinTime)
 146:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_WriteKillTime(HC_PWM_S_MinimumKillTime);
 147:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (HC_PWM_S_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 149:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if (HC_PWM_S_DeadBandUsed)
 150:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_WriteDeadTime(HC_PWM_S_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (HC_PWM_S_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 153:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if (HC_PWM_S_UseStatus || HC_PWM_S_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_SetInterruptMode(HC_PWM_S_INIT_INTERRUPTS_MODE);
 126              		.loc 1 154 0
 127 005e 0020     		movs	r0, #0
 128 0060 FFF7FEFF 		bl	HC_PWM_S_SetInterruptMode
 155:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* (HC_PWM_S_UseStatus || HC_PWM_S_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 157:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if (HC_PWM_S_UsingFixedFunction)
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 6


 158:.\Generated_Source\PSoC5/HC_PWM_S.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_GLOBAL_ENABLE |= HC_PWM_S_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/HC_PWM_S.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_CONTROL2 |= HC_PWM_S_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #else
 163:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if(HC_PWM_S_UseStatus)
 164:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 165:.\Generated_Source\PSoC5/HC_PWM_S.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/HC_PWM_S.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_interruptState = CyEnterCriticalSection();
 129              		.loc 1 167 0
 130 0064 FFF7FEFF 		bl	CyEnterCriticalSection
 131 0068 0346     		mov	r3, r0
 132 006a BB71     		strb	r3, [r7, #6]
 168:.\Generated_Source\PSoC5/HC_PWM_S.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_STATUS_AUX_CTRL |= HC_PWM_S_STATUS_ACTL_INT_EN_MASK;
 133              		.loc 1 169 0
 134 006c 0B4B     		ldr	r3, .L6+12
 135 006e 0B4A     		ldr	r2, .L6+12
 136 0070 1278     		ldrb	r2, [r2]
 137 0072 D2B2     		uxtb	r2, r2
 138 0074 42F01002 		orr	r2, r2, #16
 139 0078 D2B2     		uxtb	r2, r2
 140 007a 1A70     		strb	r2, [r3]
 170:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 171:.\Generated_Source\PSoC5/HC_PWM_S.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/HC_PWM_S.c ****             CyExitCriticalSection(HC_PWM_S_interruptState);
 141              		.loc 1 172 0
 142 007c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 143 007e 1846     		mov	r0, r3
 144 0080 FFF7FEFF 		bl	CyExitCriticalSection
 173:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 174:.\Generated_Source\PSoC5/HC_PWM_S.c ****             /* Clear the FIFO to enable the HC_PWM_S_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/HC_PWM_S.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_ClearFIFO();
 145              		.loc 1 176 0
 146 0084 FFF7FEFF 		bl	HC_PWM_S_ClearFIFO
 177:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (HC_PWM_S_UseStatus) */
 178:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* (HC_PWM_S_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/HC_PWM_S.c **** }
 147              		.loc 1 179 0
 148 0088 0837     		adds	r7, r7, #8
 149 008a BD46     		mov	sp, r7
 150              		@ sp needed
 151 008c 80BD     		pop	{r7, pc}
 152              	.L7:
 153 008e 00BF     		.align	2
 154              	.L6:
 155 0090 75650040 		.word	1073767797
 156 0094 96640040 		.word	1073767574
 157 0098 97640040 		.word	1073767575
 158 009c 94650040 		.word	1073767828
 159              		.cfi_endproc
 160              	.LFE1:
 161              		.size	HC_PWM_S_Init, .-HC_PWM_S_Init
 162              		.section	.text.HC_PWM_S_Enable,"ax",%progbits
 163              		.align	2
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 7


 164              		.global	HC_PWM_S_Enable
 165              		.thumb
 166              		.thumb_func
 167              		.type	HC_PWM_S_Enable, %function
 168              	HC_PWM_S_Enable:
 169              	.LFB2:
 180:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 181:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 182:.\Generated_Source\PSoC5/HC_PWM_S.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Function Name: HC_PWM_S_Enable
 184:.\Generated_Source\PSoC5/HC_PWM_S.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 186:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Summary:
 187:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 189:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Parameters:
 190:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  None
 191:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 192:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Return:
 193:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  None
 194:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 195:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 198:.\Generated_Source\PSoC5/HC_PWM_S.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/HC_PWM_S.c **** void HC_PWM_S_Enable(void) 
 200:.\Generated_Source\PSoC5/HC_PWM_S.c **** {
 170              		.loc 1 200 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 1, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175 0000 80B4     		push	{r7}
 176              		.cfi_def_cfa_offset 4
 177              		.cfi_offset 7, -4
 178 0002 00AF     		add	r7, sp, #0
 179              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if (HC_PWM_S_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_GLOBAL_ENABLE |= HC_PWM_S_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_GLOBAL_STBY_ENABLE |= HC_PWM_S_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* (HC_PWM_S_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 207:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if (HC_PWM_S_UseControl || HC_PWM_S_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_CONTROL |= HC_PWM_S_CTRL_ENABLE;
 180              		.loc 1 209 0
 181 0004 054B     		ldr	r3, .L9
 182 0006 054A     		ldr	r2, .L9
 183 0008 1278     		ldrb	r2, [r2]
 184 000a D2B2     		uxtb	r2, r2
 185 000c 62F07F02 		orn	r2, r2, #127
 186 0010 D2B2     		uxtb	r2, r2
 187 0012 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* (HC_PWM_S_UseControl || HC_PWM_S_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/HC_PWM_S.c **** }
 188              		.loc 1 211 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 8


 189 0014 BD46     		mov	sp, r7
 190              		@ sp needed
 191 0016 5DF8047B 		ldr	r7, [sp], #4
 192 001a 7047     		bx	lr
 193              	.L10:
 194              		.align	2
 195              	.L9:
 196 001c 75650040 		.word	1073767797
 197              		.cfi_endproc
 198              	.LFE2:
 199              		.size	HC_PWM_S_Enable, .-HC_PWM_S_Enable
 200              		.section	.text.HC_PWM_S_Stop,"ax",%progbits
 201              		.align	2
 202              		.global	HC_PWM_S_Stop
 203              		.thumb
 204              		.thumb_func
 205              		.type	HC_PWM_S_Stop, %function
 206              	HC_PWM_S_Stop:
 207              	.LFB3:
 212:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 213:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 214:.\Generated_Source\PSoC5/HC_PWM_S.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Function Name: HC_PWM_S_Stop
 216:.\Generated_Source\PSoC5/HC_PWM_S.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 218:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Summary:
 219:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 222:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Parameters:
 223:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  None
 224:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 225:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Return:
 226:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  None
 227:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 228:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 232:.\Generated_Source\PSoC5/HC_PWM_S.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/HC_PWM_S.c **** void HC_PWM_S_Stop(void) 
 234:.\Generated_Source\PSoC5/HC_PWM_S.c **** {
 208              		.loc 1 234 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213 0000 80B4     		push	{r7}
 214              		.cfi_def_cfa_offset 4
 215              		.cfi_offset 7, -4
 216 0002 00AF     		add	r7, sp, #0
 217              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if (HC_PWM_S_UseControl || HC_PWM_S_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_CONTROL &= ((uint8)(~HC_PWM_S_CTRL_ENABLE));
 218              		.loc 1 236 0
 219 0004 054B     		ldr	r3, .L12
 220 0006 054A     		ldr	r2, .L12
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 9


 221 0008 1278     		ldrb	r2, [r2]
 222 000a D2B2     		uxtb	r2, r2
 223 000c 02F07F02 		and	r2, r2, #127
 224 0010 D2B2     		uxtb	r2, r2
 225 0012 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* (HC_PWM_S_UseControl || HC_PWM_S_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 239:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if (HC_PWM_S_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_GLOBAL_ENABLE &= ((uint8)(~HC_PWM_S_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/HC_PWM_S.c ****         HC_PWM_S_GLOBAL_STBY_ENABLE &= ((uint8)(~HC_PWM_S_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* (HC_PWM_S_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/HC_PWM_S.c **** }
 226              		.loc 1 244 0
 227 0014 BD46     		mov	sp, r7
 228              		@ sp needed
 229 0016 5DF8047B 		ldr	r7, [sp], #4
 230 001a 7047     		bx	lr
 231              	.L13:
 232              		.align	2
 233              	.L12:
 234 001c 75650040 		.word	1073767797
 235              		.cfi_endproc
 236              	.LFE3:
 237              		.size	HC_PWM_S_Stop, .-HC_PWM_S_Stop
 238              		.section	.text.HC_PWM_S_WriteCounter,"ax",%progbits
 239              		.align	2
 240              		.global	HC_PWM_S_WriteCounter
 241              		.thumb
 242              		.thumb_func
 243              		.type	HC_PWM_S_WriteCounter, %function
 244              	HC_PWM_S_WriteCounter:
 245              	.LFB4:
 245:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 246:.\Generated_Source\PSoC5/HC_PWM_S.c **** #if (HC_PWM_S_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if (HC_PWM_S_CompareMode1SW)
 248:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 249:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 250:.\Generated_Source\PSoC5/HC_PWM_S.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/HC_PWM_S.c ****         * Function Name: HC_PWM_S_SetCompareMode
 252:.\Generated_Source\PSoC5/HC_PWM_S.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *
 254:.\Generated_Source\PSoC5/HC_PWM_S.c ****         * Summary:
 255:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *
 258:.\Generated_Source\PSoC5/HC_PWM_S.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *
 262:.\Generated_Source\PSoC5/HC_PWM_S.c ****         * Return:
 263:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *  None
 264:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *
 265:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/HC_PWM_S.c ****         void HC_PWM_S_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/HC_PWM_S.c ****         {
 268:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #if(HC_PWM_S_UsingFixedFunction)
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 10


 269:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 270:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 #if(0 != HC_PWM_S_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/HC_PWM_S.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << HC_PWM_S_CTRL_CMPMODE1
 272:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 #else
 273:.\Generated_Source\PSoC5/HC_PWM_S.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 #endif /* (0 != HC_PWM_S_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 276:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 HC_PWM_S_CONTROL3 &= ((uint8)(~HC_PWM_S_CTRL_CMPMODE1_MASK)); /*Clear Existing Data
 277:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 HC_PWM_S_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 279:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #elif (HC_PWM_S_UseControl)
 280:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 281:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 #if(0 != HC_PWM_S_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/HC_PWM_S.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << HC_PWM_S_CTRL_CMPMODE
 283:.\Generated_Source\PSoC5/HC_PWM_S.c ****                                                 HC_PWM_S_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 #else
 285:.\Generated_Source\PSoC5/HC_PWM_S.c ****                     uint8 comparemode1masked = comparemode & HC_PWM_S_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 #endif /* (0 != HC_PWM_S_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 288:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 #if(0 != HC_PWM_S_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/HC_PWM_S.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << HC_PWM_S_CTRL_CMPMODE
 290:.\Generated_Source\PSoC5/HC_PWM_S.c ****                                                HC_PWM_S_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 #else
 292:.\Generated_Source\PSoC5/HC_PWM_S.c ****                     uint8 comparemode2masked = comparemode & HC_PWM_S_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 #endif /* (0 != HC_PWM_S_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 295:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 HC_PWM_S_CONTROL &= ((uint8)(~(HC_PWM_S_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/HC_PWM_S.c ****                                             HC_PWM_S_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 HC_PWM_S_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 300:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #else
 301:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #endif /* (HC_PWM_S_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/HC_PWM_S.c ****         }
 304:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* HC_PWM_S_CompareMode1SW */
 305:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 306:.\Generated_Source\PSoC5/HC_PWM_S.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 308:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if (HC_PWM_S_CompareMode1SW)
 309:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 310:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 311:.\Generated_Source\PSoC5/HC_PWM_S.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/HC_PWM_S.c ****         * Function Name: HC_PWM_S_SetCompareMode1
 313:.\Generated_Source\PSoC5/HC_PWM_S.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *
 315:.\Generated_Source\PSoC5/HC_PWM_S.c ****         * Summary:
 316:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *
 318:.\Generated_Source\PSoC5/HC_PWM_S.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *
 322:.\Generated_Source\PSoC5/HC_PWM_S.c ****         * Return:
 323:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *  None
 324:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *
 325:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *******************************************************************************/
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 11


 326:.\Generated_Source\PSoC5/HC_PWM_S.c ****         void HC_PWM_S_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/HC_PWM_S.c ****         {
 328:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #if(0 != HC_PWM_S_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << HC_PWM_S_CTRL_CMPMODE1_SHI
 330:.\Generated_Source\PSoC5/HC_PWM_S.c ****                                            HC_PWM_S_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #else
 332:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 uint8 comparemodemasked = comparemode & HC_PWM_S_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #endif /* (0 != HC_PWM_S_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 335:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #if (HC_PWM_S_UseControl)
 336:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 HC_PWM_S_CONTROL &= ((uint8)(~HC_PWM_S_CTRL_CMPMODE1_MASK)); /*Clear existing mode 
 337:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 HC_PWM_S_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #endif /* (HC_PWM_S_UseControl) */
 339:.\Generated_Source\PSoC5/HC_PWM_S.c ****         }
 340:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* HC_PWM_S_CompareMode1SW */
 341:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 342:.\Generated_Source\PSoC5/HC_PWM_S.c **** #if (HC_PWM_S_CompareMode2SW)
 343:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 344:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 345:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_SetCompareMode2
 347:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 349:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 350:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 352:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 356:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 357:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 358:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 359:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/HC_PWM_S.c ****     void HC_PWM_S_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 362:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 363:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if(0 != HC_PWM_S_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/HC_PWM_S.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << HC_PWM_S_CTRL_CMPMODE2_SHIFT))
 365:.\Generated_Source\PSoC5/HC_PWM_S.c ****                                                  HC_PWM_S_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #else
 367:.\Generated_Source\PSoC5/HC_PWM_S.c ****             uint8 comparemodemasked = comparemode & HC_PWM_S_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (0 != HC_PWM_S_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 370:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if (HC_PWM_S_UseControl)
 371:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_CONTROL &= ((uint8)(~HC_PWM_S_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (HC_PWM_S_UseControl) */
 374:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 375:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /*HC_PWM_S_CompareMode2SW */
 376:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 377:.\Generated_Source\PSoC5/HC_PWM_S.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 379:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 380:.\Generated_Source\PSoC5/HC_PWM_S.c **** #if (!HC_PWM_S_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 382:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 12


 383:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_WriteCounter
 385:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 387:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 388:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 393:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 396:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 397:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 398:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 399:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 402:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/HC_PWM_S.c ****     void HC_PWM_S_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/HC_PWM_S.c ****                                        
 405:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 246              		.loc 1 405 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 8
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251 0000 80B4     		push	{r7}
 252              		.cfi_def_cfa_offset 4
 253              		.cfi_offset 7, -4
 254 0002 83B0     		sub	sp, sp, #12
 255              		.cfi_def_cfa_offset 16
 256 0004 00AF     		add	r7, sp, #0
 257              		.cfi_def_cfa_register 7
 258 0006 0346     		mov	r3, r0
 259 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 406:.\Generated_Source\PSoC5/HC_PWM_S.c ****         CY_SET_REG16(HC_PWM_S_COUNTER_LSB_PTR, counter);
 260              		.loc 1 406 0
 261 000a 044B     		ldr	r3, .L15
 262 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 263 000e 1A80     		strh	r2, [r3]	@ movhi
 407:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 264              		.loc 1 407 0
 265 0010 0C37     		adds	r7, r7, #12
 266 0012 BD46     		mov	sp, r7
 267              		@ sp needed
 268 0014 5DF8047B 		ldr	r7, [sp], #4
 269 0018 7047     		bx	lr
 270              	.L16:
 271 001a 00BF     		.align	2
 272              	.L15:
 273 001c 0C680040 		.word	1073768460
 274              		.cfi_endproc
 275              	.LFE4:
 276              		.size	HC_PWM_S_WriteCounter, .-HC_PWM_S_WriteCounter
 277              		.section	.text.HC_PWM_S_ReadCounter,"ax",%progbits
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 13


 278              		.align	2
 279              		.global	HC_PWM_S_ReadCounter
 280              		.thumb
 281              		.thumb_func
 282              		.type	HC_PWM_S_ReadCounter, %function
 283              	HC_PWM_S_ReadCounter:
 284              	.LFB5:
 408:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 409:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 410:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_ReadCounter
 412:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 414:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 415:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 418:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 420:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 421:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 422:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 424:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/HC_PWM_S.c ****     uint16 HC_PWM_S_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 285              		.loc 1 426 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 1, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290 0000 80B4     		push	{r7}
 291              		.cfi_def_cfa_offset 4
 292              		.cfi_offset 7, -4
 293 0002 00AF     		add	r7, sp, #0
 294              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC5/HC_PWM_S.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/HC_PWM_S.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/HC_PWM_S.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/HC_PWM_S.c ****           (void)CY_GET_REG8(HC_PWM_S_COUNTERCAP_LSB_PTR_8BIT);
 295              		.loc 1 430 0
 296 0004 044B     		ldr	r3, .L19
 297 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 432:.\Generated_Source\PSoC5/HC_PWM_S.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/HC_PWM_S.c ****         return (CY_GET_REG16(HC_PWM_S_CAPTURE_LSB_PTR));
 298              		.loc 1 433 0
 299 0008 044B     		ldr	r3, .L19+4
 300 000a 1B88     		ldrh	r3, [r3]	@ movhi
 301 000c 9BB2     		uxth	r3, r3
 434:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 302              		.loc 1 434 0
 303 000e 1846     		mov	r0, r3
 304 0010 BD46     		mov	sp, r7
 305              		@ sp needed
 306 0012 5DF8047B 		ldr	r7, [sp], #4
 307 0016 7047     		bx	lr
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 14


 308              	.L20:
 309              		.align	2
 310              	.L19:
 311 0018 16640040 		.word	1073767446
 312 001c AC680040 		.word	1073768620
 313              		.cfi_endproc
 314              	.LFE5:
 315              		.size	HC_PWM_S_ReadCounter, .-HC_PWM_S_ReadCounter
 316              		.section	.text.HC_PWM_S_ClearFIFO,"ax",%progbits
 317              		.align	2
 318              		.global	HC_PWM_S_ClearFIFO
 319              		.thumb
 320              		.thumb_func
 321              		.type	HC_PWM_S_ClearFIFO, %function
 322              	HC_PWM_S_ClearFIFO:
 323              	.LFB6:
 435:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 436:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if (HC_PWM_S_UseStatus)
 437:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 438:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 439:.\Generated_Source\PSoC5/HC_PWM_S.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/HC_PWM_S.c ****         * Function Name: HC_PWM_S_ClearFIFO
 441:.\Generated_Source\PSoC5/HC_PWM_S.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *
 443:.\Generated_Source\PSoC5/HC_PWM_S.c ****         * Summary:
 444:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *
 446:.\Generated_Source\PSoC5/HC_PWM_S.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *  None
 448:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *
 449:.\Generated_Source\PSoC5/HC_PWM_S.c ****         * Return:
 450:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *  None
 451:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *
 452:.\Generated_Source\PSoC5/HC_PWM_S.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/HC_PWM_S.c ****         void HC_PWM_S_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/HC_PWM_S.c ****         {
 324              		.loc 1 454 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 1, uses_anonymous_args = 0
 328 0000 80B5     		push	{r7, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 00AF     		add	r7, sp, #0
 333              		.cfi_def_cfa_register 7
 455:.\Generated_Source\PSoC5/HC_PWM_S.c ****             while(0u != (HC_PWM_S_ReadStatusRegister() & HC_PWM_S_STATUS_FIFONEMPTY))
 334              		.loc 1 455 0
 335 0004 01E0     		b	.L22
 336              	.L23:
 456:.\Generated_Source\PSoC5/HC_PWM_S.c ****             {
 457:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 (void)HC_PWM_S_ReadCapture();
 337              		.loc 1 457 0
 338 0006 FFF7FEFF 		bl	HC_PWM_S_ReadCapture
 339              	.L22:
 455:.\Generated_Source\PSoC5/HC_PWM_S.c ****             while(0u != (HC_PWM_S_ReadStatusRegister() & HC_PWM_S_STATUS_FIFONEMPTY))
 340              		.loc 1 455 0 discriminator 1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 15


 341 000a FFF7FEFF 		bl	HC_PWM_S_ReadStatusRegister
 342 000e 0346     		mov	r3, r0
 343 0010 03F01003 		and	r3, r3, #16
 344 0014 002B     		cmp	r3, #0
 345 0016 F6D1     		bne	.L23
 458:.\Generated_Source\PSoC5/HC_PWM_S.c ****             }
 459:.\Generated_Source\PSoC5/HC_PWM_S.c ****         }
 346              		.loc 1 459 0
 347 0018 80BD     		pop	{r7, pc}
 348              		.cfi_endproc
 349              	.LFE6:
 350              		.size	HC_PWM_S_ClearFIFO, .-HC_PWM_S_ClearFIFO
 351 001a 00BF     		.section	.text.HC_PWM_S_WritePeriod,"ax",%progbits
 352              		.align	2
 353              		.global	HC_PWM_S_WritePeriod
 354              		.thumb
 355              		.thumb_func
 356              		.type	HC_PWM_S_WritePeriod, %function
 357              	HC_PWM_S_WritePeriod:
 358              	.LFB7:
 460:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 461:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* HC_PWM_S_UseStatus */
 462:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 463:.\Generated_Source\PSoC5/HC_PWM_S.c **** #endif /* !HC_PWM_S_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 465:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 466:.\Generated_Source\PSoC5/HC_PWM_S.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Function Name: HC_PWM_S_WritePeriod
 468:.\Generated_Source\PSoC5/HC_PWM_S.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 470:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Summary:
 471:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 474:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Parameters:
 475:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/HC_PWM_S.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 478:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Return:
 479:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  None
 480:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 481:.\Generated_Source\PSoC5/HC_PWM_S.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/HC_PWM_S.c **** void HC_PWM_S_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/HC_PWM_S.c **** {
 359              		.loc 1 483 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 8
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 364 0000 80B4     		push	{r7}
 365              		.cfi_def_cfa_offset 4
 366              		.cfi_offset 7, -4
 367 0002 83B0     		sub	sp, sp, #12
 368              		.cfi_def_cfa_offset 16
 369 0004 00AF     		add	r7, sp, #0
 370              		.cfi_def_cfa_register 7
 371 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 16


 372 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 484:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if(HC_PWM_S_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/HC_PWM_S.c ****         CY_SET_REG16(HC_PWM_S_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #else
 487:.\Generated_Source\PSoC5/HC_PWM_S.c ****         CY_SET_REG16(HC_PWM_S_PERIOD_LSB_PTR, period);
 373              		.loc 1 487 0
 374 000a 044B     		ldr	r3, .L25
 375 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 376 000e 1A80     		strh	r2, [r3]	@ movhi
 488:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* (HC_PWM_S_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/HC_PWM_S.c **** }
 377              		.loc 1 489 0
 378 0010 0C37     		adds	r7, r7, #12
 379 0012 BD46     		mov	sp, r7
 380              		@ sp needed
 381 0014 5DF8047B 		ldr	r7, [sp], #4
 382 0018 7047     		bx	lr
 383              	.L26:
 384 001a 00BF     		.align	2
 385              	.L25:
 386 001c 8C680040 		.word	1073768588
 387              		.cfi_endproc
 388              	.LFE7:
 389              		.size	HC_PWM_S_WritePeriod, .-HC_PWM_S_WritePeriod
 390              		.section	.text.HC_PWM_S_WriteCompare1,"ax",%progbits
 391              		.align	2
 392              		.global	HC_PWM_S_WriteCompare1
 393              		.thumb
 394              		.thumb_func
 395              		.type	HC_PWM_S_WriteCompare1, %function
 396              	HC_PWM_S_WriteCompare1:
 397              	.LFB8:
 490:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 491:.\Generated_Source\PSoC5/HC_PWM_S.c **** #if (HC_PWM_S_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 493:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 494:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_WriteCompare
 496:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 498:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 499:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 505:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 508:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 509:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 510:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 511:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 17


 515:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/HC_PWM_S.c ****     void HC_PWM_S_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/HC_PWM_S.c ****                                        
 518:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 519:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if(HC_PWM_S_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/HC_PWM_S.c ****             CY_SET_REG16(HC_PWM_S_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #else
 522:.\Generated_Source\PSoC5/HC_PWM_S.c ****             CY_SET_REG16(HC_PWM_S_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (HC_PWM_S_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 525:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if (HC_PWM_S_PWMMode == HC_PWM_S__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #if(HC_PWM_S_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 CY_SET_REG16(HC_PWM_S_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #else
 529:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 CY_SET_REG16(HC_PWM_S_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #endif /* (HC_PWM_S_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (HC_PWM_S_PWMMode == HC_PWM_S__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 533:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 534:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 535:.\Generated_Source\PSoC5/HC_PWM_S.c **** #else
 536:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 537:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 538:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_WriteCompare1
 540:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 542:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 543:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 548:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 551:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 552:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 553:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 554:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/HC_PWM_S.c ****     void HC_PWM_S_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/HC_PWM_S.c ****                                         
 557:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 398              		.loc 1 557 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 8
 401              		@ frame_needed = 1, uses_anonymous_args = 0
 402              		@ link register save eliminated.
 403 0000 80B4     		push	{r7}
 404              		.cfi_def_cfa_offset 4
 405              		.cfi_offset 7, -4
 406 0002 83B0     		sub	sp, sp, #12
 407              		.cfi_def_cfa_offset 16
 408 0004 00AF     		add	r7, sp, #0
 409              		.cfi_def_cfa_register 7
 410 0006 0346     		mov	r3, r0
 411 0008 FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 18


 558:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if(HC_PWM_S_UsingFixedFunction)
 559:.\Generated_Source\PSoC5/HC_PWM_S.c ****             CY_SET_REG16(HC_PWM_S_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #else
 561:.\Generated_Source\PSoC5/HC_PWM_S.c ****             CY_SET_REG16(HC_PWM_S_COMPARE1_LSB_PTR, compare);
 412              		.loc 1 561 0
 413 000a 044B     		ldr	r3, .L28
 414 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 415 000e 1A80     		strh	r2, [r3]	@ movhi
 562:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (HC_PWM_S_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 416              		.loc 1 563 0
 417 0010 0C37     		adds	r7, r7, #12
 418 0012 BD46     		mov	sp, r7
 419              		@ sp needed
 420 0014 5DF8047B 		ldr	r7, [sp], #4
 421 0018 7047     		bx	lr
 422              	.L29:
 423 001a 00BF     		.align	2
 424              	.L28:
 425 001c 4C680040 		.word	1073768524
 426              		.cfi_endproc
 427              	.LFE8:
 428              		.size	HC_PWM_S_WriteCompare1, .-HC_PWM_S_WriteCompare1
 429              		.section	.text.HC_PWM_S_WriteCompare2,"ax",%progbits
 430              		.align	2
 431              		.global	HC_PWM_S_WriteCompare2
 432              		.thumb
 433              		.thumb_func
 434              		.type	HC_PWM_S_WriteCompare2, %function
 435              	HC_PWM_S_WriteCompare2:
 436              	.LFB9:
 564:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 565:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 566:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_WriteCompare2
 568:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 570:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 571:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  mode.
 576:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 577:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 580:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 581:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 582:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 583:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/HC_PWM_S.c ****     void HC_PWM_S_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/HC_PWM_S.c ****                                         
 586:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 437              		.loc 1 586 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 19


 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442 0000 80B4     		push	{r7}
 443              		.cfi_def_cfa_offset 4
 444              		.cfi_offset 7, -4
 445 0002 83B0     		sub	sp, sp, #12
 446              		.cfi_def_cfa_offset 16
 447 0004 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 449 0006 0346     		mov	r3, r0
 450 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if(HC_PWM_S_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/HC_PWM_S.c ****             CY_SET_REG16(HC_PWM_S_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #else
 590:.\Generated_Source\PSoC5/HC_PWM_S.c ****             CY_SET_REG16(HC_PWM_S_COMPARE2_LSB_PTR, compare);
 451              		.loc 1 590 0
 452 000a 044B     		ldr	r3, .L31
 453 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 454 000e 1A80     		strh	r2, [r3]	@ movhi
 591:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (HC_PWM_S_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 455              		.loc 1 592 0
 456 0010 0C37     		adds	r7, r7, #12
 457 0012 BD46     		mov	sp, r7
 458              		@ sp needed
 459 0014 5DF8047B 		ldr	r7, [sp], #4
 460 0018 7047     		bx	lr
 461              	.L32:
 462 001a 00BF     		.align	2
 463              	.L31:
 464 001c 6C680040 		.word	1073768556
 465              		.cfi_endproc
 466              	.LFE9:
 467              		.size	HC_PWM_S_WriteCompare2, .-HC_PWM_S_WriteCompare2
 468              		.section	.text.HC_PWM_S_SetInterruptMode,"ax",%progbits
 469              		.align	2
 470              		.global	HC_PWM_S_SetInterruptMode
 471              		.thumb
 472              		.thumb_func
 473              		.type	HC_PWM_S_SetInterruptMode, %function
 474              	HC_PWM_S_SetInterruptMode:
 475              	.LFB10:
 593:.\Generated_Source\PSoC5/HC_PWM_S.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 595:.\Generated_Source\PSoC5/HC_PWM_S.c **** #if (HC_PWM_S_DeadBandUsed)
 596:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 597:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 598:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_WriteDeadTime
 600:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 602:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 603:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 605:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 20


 608:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 609:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 610:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 611:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/HC_PWM_S.c ****     void HC_PWM_S_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 614:.\Generated_Source\PSoC5/HC_PWM_S.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if(!HC_PWM_S_DeadBand2_4)
 616:.\Generated_Source\PSoC5/HC_PWM_S.c ****             CY_SET_REG8(HC_PWM_S_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #else
 618:.\Generated_Source\PSoC5/HC_PWM_S.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/HC_PWM_S.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/HC_PWM_S.c ****             HC_PWM_S_DEADBAND_COUNT &= ((uint8)(~HC_PWM_S_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 622:.\Generated_Source\PSoC5/HC_PWM_S.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #if(HC_PWM_S_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 HC_PWM_S_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << HC_PWM_S_DEADBAND_COUNT_SHIF
 625:.\Generated_Source\PSoC5/HC_PWM_S.c ****                                                     HC_PWM_S_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #else
 627:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 HC_PWM_S_DEADBAND_COUNT |= deadtime & HC_PWM_S_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #endif /* (HC_PWM_S_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 630:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (!HC_PWM_S_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 632:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 633:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 634:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_ReadDeadTime
 636:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 638:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 639:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 641:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 643:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 644:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 645:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 647:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/HC_PWM_S.c ****     uint8 HC_PWM_S_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 650:.\Generated_Source\PSoC5/HC_PWM_S.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if(!HC_PWM_S_DeadBand2_4)
 652:.\Generated_Source\PSoC5/HC_PWM_S.c ****             return (CY_GET_REG8(HC_PWM_S_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #else
 654:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 655:.\Generated_Source\PSoC5/HC_PWM_S.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #if(HC_PWM_S_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 return ((uint8)(((uint8)(HC_PWM_S_DEADBAND_COUNT & HC_PWM_S_DEADBAND_COUNT_MASK)) >
 658:.\Generated_Source\PSoC5/HC_PWM_S.c ****                                                                            HC_PWM_S_DEADBAND_COUNT_
 659:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #else
 660:.\Generated_Source\PSoC5/HC_PWM_S.c ****                 return (HC_PWM_S_DEADBAND_COUNT & HC_PWM_S_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/HC_PWM_S.c ****             #endif /* (HC_PWM_S_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (!HC_PWM_S_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 664:.\Generated_Source\PSoC5/HC_PWM_S.c **** #endif /* DeadBandUsed */
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 21


 665:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 666:.\Generated_Source\PSoC5/HC_PWM_S.c **** #if (HC_PWM_S_UseStatus || HC_PWM_S_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 668:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 669:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_SetInterruptMode
 671:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 673:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 674:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 677:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 680:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 681:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 682:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 683:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/HC_PWM_S.c ****     void HC_PWM_S_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 476              		.loc 1 685 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 8
 479              		@ frame_needed = 1, uses_anonymous_args = 0
 480              		@ link register save eliminated.
 481 0000 80B4     		push	{r7}
 482              		.cfi_def_cfa_offset 4
 483              		.cfi_offset 7, -4
 484 0002 83B0     		sub	sp, sp, #12
 485              		.cfi_def_cfa_offset 16
 486 0004 00AF     		add	r7, sp, #0
 487              		.cfi_def_cfa_register 7
 488 0006 0346     		mov	r3, r0
 489 0008 FB71     		strb	r3, [r7, #7]
 686:.\Generated_Source\PSoC5/HC_PWM_S.c ****         CY_SET_REG8(HC_PWM_S_STATUS_MASK_PTR, interruptMode);
 490              		.loc 1 686 0
 491 000a 044B     		ldr	r3, .L34
 492 000c FA79     		ldrb	r2, [r7, #7]
 493 000e 1A70     		strb	r2, [r3]
 687:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 494              		.loc 1 687 0
 495 0010 0C37     		adds	r7, r7, #12
 496 0012 BD46     		mov	sp, r7
 497              		@ sp needed
 498 0014 5DF8047B 		ldr	r7, [sp], #4
 499 0018 7047     		bx	lr
 500              	.L35:
 501 001a 00BF     		.align	2
 502              	.L34:
 503 001c 84650040 		.word	1073767812
 504              		.cfi_endproc
 505              	.LFE10:
 506              		.size	HC_PWM_S_SetInterruptMode, .-HC_PWM_S_SetInterruptMode
 507              		.section	.text.HC_PWM_S_ReadStatusRegister,"ax",%progbits
 508              		.align	2
 509              		.global	HC_PWM_S_ReadStatusRegister
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 22


 510              		.thumb
 511              		.thumb_func
 512              		.type	HC_PWM_S_ReadStatusRegister, %function
 513              	HC_PWM_S_ReadStatusRegister:
 514              	.LFB11:
 688:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 689:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 690:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_ReadStatusRegister
 692:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 694:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 695:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 697:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 699:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 700:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 701:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 710:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/HC_PWM_S.c ****     uint8 HC_PWM_S_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 515              		.loc 1 712 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 1, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 520 0000 80B4     		push	{r7}
 521              		.cfi_def_cfa_offset 4
 522              		.cfi_offset 7, -4
 523 0002 00AF     		add	r7, sp, #0
 524              		.cfi_def_cfa_register 7
 713:.\Generated_Source\PSoC5/HC_PWM_S.c ****         return (CY_GET_REG8(HC_PWM_S_STATUS_PTR));
 525              		.loc 1 713 0
 526 0004 034B     		ldr	r3, .L38
 527 0006 1B78     		ldrb	r3, [r3]
 528 0008 DBB2     		uxtb	r3, r3
 714:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 529              		.loc 1 714 0
 530 000a 1846     		mov	r0, r3
 531 000c BD46     		mov	sp, r7
 532              		@ sp needed
 533 000e 5DF8047B 		ldr	r7, [sp], #4
 534 0012 7047     		bx	lr
 535              	.L39:
 536              		.align	2
 537              	.L38:
 538 0014 64650040 		.word	1073767780
 539              		.cfi_endproc
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 23


 540              	.LFE11:
 541              		.size	HC_PWM_S_ReadStatusRegister, .-HC_PWM_S_ReadStatusRegister
 542              		.section	.text.HC_PWM_S_ReadControlRegister,"ax",%progbits
 543              		.align	2
 544              		.global	HC_PWM_S_ReadControlRegister
 545              		.thumb
 546              		.thumb_func
 547              		.type	HC_PWM_S_ReadControlRegister, %function
 548              	HC_PWM_S_ReadControlRegister:
 549              	.LFB12:
 715:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 716:.\Generated_Source\PSoC5/HC_PWM_S.c **** #endif /* (HC_PWM_S_UseStatus || HC_PWM_S_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 718:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 719:.\Generated_Source\PSoC5/HC_PWM_S.c **** #if (HC_PWM_S_UseControl)
 720:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 721:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 722:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_ReadControlRegister
 724:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 726:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 727:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 730:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 732:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 733:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 734:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 736:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC5/HC_PWM_S.c ****     uint8 HC_PWM_S_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 550              		.loc 1 738 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 8
 553              		@ frame_needed = 1, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 555 0000 80B4     		push	{r7}
 556              		.cfi_def_cfa_offset 4
 557              		.cfi_offset 7, -4
 558 0002 83B0     		sub	sp, sp, #12
 559              		.cfi_def_cfa_offset 16
 560 0004 00AF     		add	r7, sp, #0
 561              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC5/HC_PWM_S.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 741:.\Generated_Source\PSoC5/HC_PWM_S.c ****         result = CY_GET_REG8(HC_PWM_S_CONTROL_PTR);
 562              		.loc 1 741 0
 563 0006 054B     		ldr	r3, .L42
 564 0008 1B78     		ldrb	r3, [r3]
 565 000a FB71     		strb	r3, [r7, #7]
 742:.\Generated_Source\PSoC5/HC_PWM_S.c ****         return (result);
 566              		.loc 1 742 0
 567 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 24


 568              		.loc 1 743 0
 569 000e 1846     		mov	r0, r3
 570 0010 0C37     		adds	r7, r7, #12
 571 0012 BD46     		mov	sp, r7
 572              		@ sp needed
 573 0014 5DF8047B 		ldr	r7, [sp], #4
 574 0018 7047     		bx	lr
 575              	.L43:
 576 001a 00BF     		.align	2
 577              	.L42:
 578 001c 75650040 		.word	1073767797
 579              		.cfi_endproc
 580              	.LFE12:
 581              		.size	HC_PWM_S_ReadControlRegister, .-HC_PWM_S_ReadControlRegister
 582              		.section	.text.HC_PWM_S_WriteControlRegister,"ax",%progbits
 583              		.align	2
 584              		.global	HC_PWM_S_WriteControlRegister
 585              		.thumb
 586              		.thumb_func
 587              		.type	HC_PWM_S_WriteControlRegister, %function
 588              	HC_PWM_S_WriteControlRegister:
 589              	.LFB13:
 744:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 745:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 746:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_WriteControlRegister
 748:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 750:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 751:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 754:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 761:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 762:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 763:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 764:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/HC_PWM_S.c ****     void HC_PWM_S_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 590              		.loc 1 766 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 8
 593              		@ frame_needed = 1, uses_anonymous_args = 0
 594              		@ link register save eliminated.
 595 0000 80B4     		push	{r7}
 596              		.cfi_def_cfa_offset 4
 597              		.cfi_offset 7, -4
 598 0002 83B0     		sub	sp, sp, #12
 599              		.cfi_def_cfa_offset 16
 600 0004 00AF     		add	r7, sp, #0
 601              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 25


 602 0006 0346     		mov	r3, r0
 603 0008 FB71     		strb	r3, [r7, #7]
 767:.\Generated_Source\PSoC5/HC_PWM_S.c ****         CY_SET_REG8(HC_PWM_S_CONTROL_PTR, control);
 604              		.loc 1 767 0
 605 000a 044B     		ldr	r3, .L45
 606 000c FA79     		ldrb	r2, [r7, #7]
 607 000e 1A70     		strb	r2, [r3]
 768:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 608              		.loc 1 768 0
 609 0010 0C37     		adds	r7, r7, #12
 610 0012 BD46     		mov	sp, r7
 611              		@ sp needed
 612 0014 5DF8047B 		ldr	r7, [sp], #4
 613 0018 7047     		bx	lr
 614              	.L46:
 615 001a 00BF     		.align	2
 616              	.L45:
 617 001c 75650040 		.word	1073767797
 618              		.cfi_endproc
 619              	.LFE13:
 620              		.size	HC_PWM_S_WriteControlRegister, .-HC_PWM_S_WriteControlRegister
 621              		.section	.text.HC_PWM_S_ReadCapture,"ax",%progbits
 622              		.align	2
 623              		.global	HC_PWM_S_ReadCapture
 624              		.thumb
 625              		.thumb_func
 626              		.type	HC_PWM_S_ReadCapture, %function
 627              	HC_PWM_S_ReadCapture:
 628              	.LFB14:
 769:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 770:.\Generated_Source\PSoC5/HC_PWM_S.c **** #endif /* (HC_PWM_S_UseControl) */
 771:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 772:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 773:.\Generated_Source\PSoC5/HC_PWM_S.c **** #if (!HC_PWM_S_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 775:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 776:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_ReadCapture
 778:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 780:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 781:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 783:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 785:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 786:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 787:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 789:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/HC_PWM_S.c ****     uint16 HC_PWM_S_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 629              		.loc 1 791 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 1, uses_anonymous_args = 0
 633              		@ link register save eliminated.
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 26


 634 0000 80B4     		push	{r7}
 635              		.cfi_def_cfa_offset 4
 636              		.cfi_offset 7, -4
 637 0002 00AF     		add	r7, sp, #0
 638              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC5/HC_PWM_S.c ****         return (CY_GET_REG16(HC_PWM_S_CAPTURE_LSB_PTR));
 639              		.loc 1 792 0
 640 0004 034B     		ldr	r3, .L49
 641 0006 1B88     		ldrh	r3, [r3]	@ movhi
 642 0008 9BB2     		uxth	r3, r3
 793:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 643              		.loc 1 793 0
 644 000a 1846     		mov	r0, r3
 645 000c BD46     		mov	sp, r7
 646              		@ sp needed
 647 000e 5DF8047B 		ldr	r7, [sp], #4
 648 0012 7047     		bx	lr
 649              	.L50:
 650              		.align	2
 651              	.L49:
 652 0014 AC680040 		.word	1073768620
 653              		.cfi_endproc
 654              	.LFE14:
 655              		.size	HC_PWM_S_ReadCapture, .-HC_PWM_S_ReadCapture
 656              		.section	.text.HC_PWM_S_ReadCompare1,"ax",%progbits
 657              		.align	2
 658              		.global	HC_PWM_S_ReadCompare1
 659              		.thumb
 660              		.thumb_func
 661              		.type	HC_PWM_S_ReadCompare1, %function
 662              	HC_PWM_S_ReadCompare1:
 663              	.LFB15:
 794:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 795:.\Generated_Source\PSoC5/HC_PWM_S.c **** #endif /* (!HC_PWM_S_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 797:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 798:.\Generated_Source\PSoC5/HC_PWM_S.c **** #if (HC_PWM_S_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 800:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 801:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_ReadCompare
 803:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 805:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 806:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 809:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 811:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 812:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 813:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 815:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/HC_PWM_S.c ****     uint16 HC_PWM_S_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 818:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #if(HC_PWM_S_UsingFixedFunction)
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 27


 819:.\Generated_Source\PSoC5/HC_PWM_S.c ****             return ((uint16)CY_GET_REG16(HC_PWM_S_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #else
 821:.\Generated_Source\PSoC5/HC_PWM_S.c ****             return (CY_GET_REG16(HC_PWM_S_COMPARE1_LSB_PTR));
 822:.\Generated_Source\PSoC5/HC_PWM_S.c ****         #endif /* (HC_PWM_S_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 824:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 825:.\Generated_Source\PSoC5/HC_PWM_S.c **** #else
 826:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 827:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 828:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_ReadCompare1
 830:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 832:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 833:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 835:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 837:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 838:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 839:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 841:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/HC_PWM_S.c ****     uint16 HC_PWM_S_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 664              		.loc 1 843 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 1, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669 0000 80B4     		push	{r7}
 670              		.cfi_def_cfa_offset 4
 671              		.cfi_offset 7, -4
 672 0002 00AF     		add	r7, sp, #0
 673              		.cfi_def_cfa_register 7
 844:.\Generated_Source\PSoC5/HC_PWM_S.c ****         return (CY_GET_REG16(HC_PWM_S_COMPARE1_LSB_PTR));
 674              		.loc 1 844 0
 675 0004 034B     		ldr	r3, .L53
 676 0006 1B88     		ldrh	r3, [r3]	@ movhi
 677 0008 9BB2     		uxth	r3, r3
 845:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 678              		.loc 1 845 0
 679 000a 1846     		mov	r0, r3
 680 000c BD46     		mov	sp, r7
 681              		@ sp needed
 682 000e 5DF8047B 		ldr	r7, [sp], #4
 683 0012 7047     		bx	lr
 684              	.L54:
 685              		.align	2
 686              	.L53:
 687 0014 4C680040 		.word	1073768524
 688              		.cfi_endproc
 689              	.LFE15:
 690              		.size	HC_PWM_S_ReadCompare1, .-HC_PWM_S_ReadCompare1
 691              		.section	.text.HC_PWM_S_ReadCompare2,"ax",%progbits
 692              		.align	2
 693              		.global	HC_PWM_S_ReadCompare2
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 28


 694              		.thumb
 695              		.thumb_func
 696              		.type	HC_PWM_S_ReadCompare2, %function
 697              	HC_PWM_S_ReadCompare2:
 698              	.LFB16:
 846:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 847:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 848:.\Generated_Source\PSoC5/HC_PWM_S.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Function Name: HC_PWM_S_ReadCompare2
 850:.\Generated_Source\PSoC5/HC_PWM_S.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 852:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Summary:
 853:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 855:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  None
 857:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 858:.\Generated_Source\PSoC5/HC_PWM_S.c ****     * Return:
 859:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *
 861:.\Generated_Source\PSoC5/HC_PWM_S.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/HC_PWM_S.c ****     uint16 HC_PWM_S_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/HC_PWM_S.c ****     {
 699              		.loc 1 863 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 704 0000 80B4     		push	{r7}
 705              		.cfi_def_cfa_offset 4
 706              		.cfi_offset 7, -4
 707 0002 00AF     		add	r7, sp, #0
 708              		.cfi_def_cfa_register 7
 864:.\Generated_Source\PSoC5/HC_PWM_S.c ****         return (CY_GET_REG16(HC_PWM_S_COMPARE2_LSB_PTR));
 709              		.loc 1 864 0
 710 0004 034B     		ldr	r3, .L57
 711 0006 1B88     		ldrh	r3, [r3]	@ movhi
 712 0008 9BB2     		uxth	r3, r3
 865:.\Generated_Source\PSoC5/HC_PWM_S.c ****     }
 713              		.loc 1 865 0
 714 000a 1846     		mov	r0, r3
 715 000c BD46     		mov	sp, r7
 716              		@ sp needed
 717 000e 5DF8047B 		ldr	r7, [sp], #4
 718 0012 7047     		bx	lr
 719              	.L58:
 720              		.align	2
 721              	.L57:
 722 0014 6C680040 		.word	1073768556
 723              		.cfi_endproc
 724              	.LFE16:
 725              		.size	HC_PWM_S_ReadCompare2, .-HC_PWM_S_ReadCompare2
 726              		.section	.text.HC_PWM_S_ReadPeriod,"ax",%progbits
 727              		.align	2
 728              		.global	HC_PWM_S_ReadPeriod
 729              		.thumb
 730              		.thumb_func
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 29


 731              		.type	HC_PWM_S_ReadPeriod, %function
 732              	HC_PWM_S_ReadPeriod:
 733              	.LFB17:
 866:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 867:.\Generated_Source\PSoC5/HC_PWM_S.c **** #endif /* (HC_PWM_S_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 869:.\Generated_Source\PSoC5/HC_PWM_S.c **** 
 870:.\Generated_Source\PSoC5/HC_PWM_S.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Function Name: HC_PWM_S_ReadPeriod
 872:.\Generated_Source\PSoC5/HC_PWM_S.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 874:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Summary:
 875:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 877:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Parameters:
 878:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  None
 879:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 880:.\Generated_Source\PSoC5/HC_PWM_S.c **** * Return:
 881:.\Generated_Source\PSoC5/HC_PWM_S.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/HC_PWM_S.c **** *
 883:.\Generated_Source\PSoC5/HC_PWM_S.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/HC_PWM_S.c **** uint16 HC_PWM_S_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/HC_PWM_S.c **** {
 734              		.loc 1 885 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 1, uses_anonymous_args = 0
 738              		@ link register save eliminated.
 739 0000 80B4     		push	{r7}
 740              		.cfi_def_cfa_offset 4
 741              		.cfi_offset 7, -4
 742 0002 00AF     		add	r7, sp, #0
 743              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #if(HC_PWM_S_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/HC_PWM_S.c ****         return ((uint16)CY_GET_REG16(HC_PWM_S_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #else
 889:.\Generated_Source\PSoC5/HC_PWM_S.c ****         return (CY_GET_REG16(HC_PWM_S_PERIOD_LSB_PTR));
 744              		.loc 1 889 0
 745 0004 034B     		ldr	r3, .L61
 746 0006 1B88     		ldrh	r3, [r3]	@ movhi
 747 0008 9BB2     		uxth	r3, r3
 890:.\Generated_Source\PSoC5/HC_PWM_S.c ****     #endif /* (HC_PWM_S_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/HC_PWM_S.c **** }
 748              		.loc 1 891 0
 749 000a 1846     		mov	r0, r3
 750 000c BD46     		mov	sp, r7
 751              		@ sp needed
 752 000e 5DF8047B 		ldr	r7, [sp], #4
 753 0012 7047     		bx	lr
 754              	.L62:
 755              		.align	2
 756              	.L61:
 757 0014 8C680040 		.word	1073768588
 758              		.cfi_endproc
 759              	.LFE17:
 760              		.size	HC_PWM_S_ReadPeriod, .-HC_PWM_S_ReadPeriod
 761              		.text
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 30


 762              	.Letext0:
 763              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 764              		.section	.debug_info,"",%progbits
 765              	.Ldebug_info0:
 766 0000 D6020000 		.4byte	0x2d6
 767 0004 0400     		.2byte	0x4
 768 0006 00000000 		.4byte	.Ldebug_abbrev0
 769 000a 04       		.byte	0x4
 770 000b 01       		.uleb128 0x1
 771 000c 36020000 		.4byte	.LASF42
 772 0010 01       		.byte	0x1
 773 0011 06000000 		.4byte	.LASF43
 774 0015 31010000 		.4byte	.LASF44
 775 0019 00000000 		.4byte	.Ldebug_ranges0+0
 776 001d 00000000 		.4byte	0
 777 0021 00000000 		.4byte	.Ldebug_line0
 778 0025 02       		.uleb128 0x2
 779 0026 01       		.byte	0x1
 780 0027 06       		.byte	0x6
 781 0028 71030000 		.4byte	.LASF0
 782 002c 02       		.uleb128 0x2
 783 002d 01       		.byte	0x1
 784 002e 08       		.byte	0x8
 785 002f D1010000 		.4byte	.LASF1
 786 0033 02       		.uleb128 0x2
 787 0034 02       		.byte	0x2
 788 0035 05       		.byte	0x5
 789 0036 1E030000 		.4byte	.LASF2
 790 003a 02       		.uleb128 0x2
 791 003b 02       		.byte	0x2
 792 003c 07       		.byte	0x7
 793 003d 5A000000 		.4byte	.LASF3
 794 0041 02       		.uleb128 0x2
 795 0042 04       		.byte	0x4
 796 0043 05       		.byte	0x5
 797 0044 63030000 		.4byte	.LASF4
 798 0048 02       		.uleb128 0x2
 799 0049 04       		.byte	0x4
 800 004a 07       		.byte	0x7
 801 004b 80010000 		.4byte	.LASF5
 802 004f 02       		.uleb128 0x2
 803 0050 08       		.byte	0x8
 804 0051 05       		.byte	0x5
 805 0052 D6020000 		.4byte	.LASF6
 806 0056 02       		.uleb128 0x2
 807 0057 08       		.byte	0x8
 808 0058 07       		.byte	0x7
 809 0059 18020000 		.4byte	.LASF7
 810 005d 03       		.uleb128 0x3
 811 005e 04       		.byte	0x4
 812 005f 05       		.byte	0x5
 813 0060 696E7400 		.ascii	"int\000"
 814 0064 02       		.uleb128 0x2
 815 0065 04       		.byte	0x4
 816 0066 07       		.byte	0x7
 817 0067 0B020000 		.4byte	.LASF8
 818 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 31


 819 006c 92010000 		.4byte	.LASF9
 820 0070 02       		.byte	0x2
 821 0071 B3       		.byte	0xb3
 822 0072 2C000000 		.4byte	0x2c
 823 0076 04       		.uleb128 0x4
 824 0077 F4010000 		.4byte	.LASF10
 825 007b 02       		.byte	0x2
 826 007c B4       		.byte	0xb4
 827 007d 3A000000 		.4byte	0x3a
 828 0081 02       		.uleb128 0x2
 829 0082 04       		.byte	0x4
 830 0083 04       		.byte	0x4
 831 0084 D0000000 		.4byte	.LASF11
 832 0088 02       		.uleb128 0x2
 833 0089 08       		.byte	0x8
 834 008a 04       		.byte	0x4
 835 008b DF010000 		.4byte	.LASF12
 836 008f 02       		.uleb128 0x2
 837 0090 01       		.byte	0x1
 838 0091 08       		.byte	0x8
 839 0092 6C030000 		.4byte	.LASF13
 840 0096 05       		.uleb128 0x5
 841 0097 B2020000 		.4byte	.LASF14
 842 009b 02       		.byte	0x2
 843 009c 5D01     		.2byte	0x15d
 844 009e A2000000 		.4byte	0xa2
 845 00a2 06       		.uleb128 0x6
 846 00a3 6B000000 		.4byte	0x6b
 847 00a7 05       		.uleb128 0x5
 848 00a8 00000000 		.4byte	.LASF15
 849 00ac 02       		.byte	0x2
 850 00ad 5E01     		.2byte	0x15e
 851 00af B3000000 		.4byte	0xb3
 852 00b3 06       		.uleb128 0x6
 853 00b4 76000000 		.4byte	0x76
 854 00b8 02       		.uleb128 0x2
 855 00b9 04       		.byte	0x4
 856 00ba 07       		.byte	0x7
 857 00bb B7020000 		.4byte	.LASF16
 858 00bf 07       		.uleb128 0x7
 859 00c0 4B000000 		.4byte	.LASF19
 860 00c4 01       		.byte	0x1
 861 00c5 37       		.byte	0x37
 862 00c6 00000000 		.4byte	.LFB0
 863 00ca 20000000 		.4byte	.LFE0-.LFB0
 864 00ce 01       		.uleb128 0x1
 865 00cf 9C       		.byte	0x9c
 866 00d0 08       		.uleb128 0x8
 867 00d1 E6010000 		.4byte	.LASF22
 868 00d5 01       		.byte	0x1
 869 00d6 54       		.byte	0x54
 870 00d7 00000000 		.4byte	.LFB1
 871 00db A0000000 		.4byte	.LFE1-.LFB1
 872 00df 01       		.uleb128 0x1
 873 00e0 9C       		.byte	0x9c
 874 00e1 02010000 		.4byte	0x102
 875 00e5 09       		.uleb128 0x9
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 32


 876 00e6 85030000 		.4byte	.LASF17
 877 00ea 01       		.byte	0x1
 878 00eb 57       		.byte	0x57
 879 00ec 6B000000 		.4byte	0x6b
 880 00f0 02       		.uleb128 0x2
 881 00f1 91       		.byte	0x91
 882 00f2 77       		.sleb128 -9
 883 00f3 09       		.uleb128 0x9
 884 00f4 4B030000 		.4byte	.LASF18
 885 00f8 01       		.byte	0x1
 886 00f9 5D       		.byte	0x5d
 887 00fa 6B000000 		.4byte	0x6b
 888 00fe 02       		.uleb128 0x2
 889 00ff 91       		.byte	0x91
 890 0100 76       		.sleb128 -10
 891 0101 00       		.byte	0
 892 0102 0A       		.uleb128 0xa
 893 0103 FB010000 		.4byte	.LASF20
 894 0107 01       		.byte	0x1
 895 0108 C7       		.byte	0xc7
 896 0109 00000000 		.4byte	.LFB2
 897 010d 20000000 		.4byte	.LFE2-.LFB2
 898 0111 01       		.uleb128 0x1
 899 0112 9C       		.byte	0x9c
 900 0113 0A       		.uleb128 0xa
 901 0114 3D030000 		.4byte	.LASF21
 902 0118 01       		.byte	0x1
 903 0119 E9       		.byte	0xe9
 904 011a 00000000 		.4byte	.LFB3
 905 011e 20000000 		.4byte	.LFE3-.LFB3
 906 0122 01       		.uleb128 0x1
 907 0123 9C       		.byte	0x9c
 908 0124 0B       		.uleb128 0xb
 909 0125 C0020000 		.4byte	.LASF23
 910 0129 01       		.byte	0x1
 911 012a 9301     		.2byte	0x193
 912 012c 00000000 		.4byte	.LFB4
 913 0130 20000000 		.4byte	.LFE4-.LFB4
 914 0134 01       		.uleb128 0x1
 915 0135 9C       		.byte	0x9c
 916 0136 4A010000 		.4byte	0x14a
 917 013a 0C       		.uleb128 0xc
 918 013b D6000000 		.4byte	.LASF26
 919 013f 01       		.byte	0x1
 920 0140 9301     		.2byte	0x193
 921 0142 76000000 		.4byte	0x76
 922 0146 02       		.uleb128 0x2
 923 0147 91       		.byte	0x91
 924 0148 76       		.sleb128 -10
 925 0149 00       		.byte	0
 926 014a 0D       		.uleb128 0xd
 927 014b A0010000 		.4byte	.LASF33
 928 014f 01       		.byte	0x1
 929 0150 A901     		.2byte	0x1a9
 930 0152 76000000 		.4byte	0x76
 931 0156 00000000 		.4byte	.LFB5
 932 015a 20000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 33


 933 015e 01       		.uleb128 0x1
 934 015f 9C       		.byte	0x9c
 935 0160 0E       		.uleb128 0xe
 936 0161 BD000000 		.4byte	.LASF24
 937 0165 01       		.byte	0x1
 938 0166 C501     		.2byte	0x1c5
 939 0168 00000000 		.4byte	.LFB6
 940 016c 1A000000 		.4byte	.LFE6-.LFB6
 941 0170 01       		.uleb128 0x1
 942 0171 9C       		.byte	0x9c
 943 0172 0B       		.uleb128 0xb
 944 0173 28030000 		.4byte	.LASF25
 945 0177 01       		.byte	0x1
 946 0178 E201     		.2byte	0x1e2
 947 017a 00000000 		.4byte	.LFB7
 948 017e 20000000 		.4byte	.LFE7-.LFB7
 949 0182 01       		.uleb128 0x1
 950 0183 9C       		.byte	0x9c
 951 0184 98010000 		.4byte	0x198
 952 0188 0C       		.uleb128 0xc
 953 0189 44000000 		.4byte	.LASF27
 954 018d 01       		.byte	0x1
 955 018e E201     		.2byte	0x1e2
 956 0190 76000000 		.4byte	0x76
 957 0194 02       		.uleb128 0x2
 958 0195 91       		.byte	0x91
 959 0196 76       		.sleb128 -10
 960 0197 00       		.byte	0
 961 0198 0B       		.uleb128 0xb
 962 0199 F5000000 		.4byte	.LASF28
 963 019d 01       		.byte	0x1
 964 019e 2B02     		.2byte	0x22b
 965 01a0 00000000 		.4byte	.LFB8
 966 01a4 20000000 		.4byte	.LFE8-.LFB8
 967 01a8 01       		.uleb128 0x1
 968 01a9 9C       		.byte	0x9c
 969 01aa BE010000 		.4byte	0x1be
 970 01ae 0C       		.uleb128 0xc
 971 01af 7D030000 		.4byte	.LASF29
 972 01b3 01       		.byte	0x1
 973 01b4 2B02     		.2byte	0x22b
 974 01b6 76000000 		.4byte	0x76
 975 01ba 02       		.uleb128 0x2
 976 01bb 91       		.byte	0x91
 977 01bc 76       		.sleb128 -10
 978 01bd 00       		.byte	0
 979 01be 0B       		.uleb128 0xb
 980 01bf DE000000 		.4byte	.LASF30
 981 01c3 01       		.byte	0x1
 982 01c4 4802     		.2byte	0x248
 983 01c6 00000000 		.4byte	.LFB9
 984 01ca 20000000 		.4byte	.LFE9-.LFB9
 985 01ce 01       		.uleb128 0x1
 986 01cf 9C       		.byte	0x9c
 987 01d0 E4010000 		.4byte	0x1e4
 988 01d4 0C       		.uleb128 0xc
 989 01d5 7D030000 		.4byte	.LASF29
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 34


 990 01d9 01       		.byte	0x1
 991 01da 4802     		.2byte	0x248
 992 01dc 76000000 		.4byte	0x76
 993 01e0 02       		.uleb128 0x2
 994 01e1 91       		.byte	0x91
 995 01e2 76       		.sleb128 -10
 996 01e3 00       		.byte	0
 997 01e4 0B       		.uleb128 0xb
 998 01e5 2A000000 		.4byte	.LASF31
 999 01e9 01       		.byte	0x1
 1000 01ea AC02     		.2byte	0x2ac
 1001 01ec 00000000 		.4byte	.LFB10
 1002 01f0 20000000 		.4byte	.LFE10-.LFB10
 1003 01f4 01       		.uleb128 0x1
 1004 01f5 9C       		.byte	0x9c
 1005 01f6 0A020000 		.4byte	0x20a
 1006 01fa 0C       		.uleb128 0xc
 1007 01fb E4020000 		.4byte	.LASF32
 1008 01ff 01       		.byte	0x1
 1009 0200 AC02     		.2byte	0x2ac
 1010 0202 6B000000 		.4byte	0x6b
 1011 0206 02       		.uleb128 0x2
 1012 0207 91       		.byte	0x91
 1013 0208 77       		.sleb128 -9
 1014 0209 00       		.byte	0
 1015 020a 0D       		.uleb128 0xd
 1016 020b B5010000 		.4byte	.LASF34
 1017 020f 01       		.byte	0x1
 1018 0210 C702     		.2byte	0x2c7
 1019 0212 6B000000 		.4byte	0x6b
 1020 0216 00000000 		.4byte	.LFB11
 1021 021a 18000000 		.4byte	.LFE11-.LFB11
 1022 021e 01       		.uleb128 0x1
 1023 021f 9C       		.byte	0x9c
 1024 0220 0F       		.uleb128 0xf
 1025 0221 A0000000 		.4byte	.LASF45
 1026 0225 01       		.byte	0x1
 1027 0226 E102     		.2byte	0x2e1
 1028 0228 6B000000 		.4byte	0x6b
 1029 022c 00000000 		.4byte	.LFB12
 1030 0230 20000000 		.4byte	.LFE12-.LFB12
 1031 0234 01       		.uleb128 0x1
 1032 0235 9C       		.byte	0x9c
 1033 0236 4A020000 		.4byte	0x24a
 1034 023a 10       		.uleb128 0x10
 1035 023b 2F020000 		.4byte	.LASF35
 1036 023f 01       		.byte	0x1
 1037 0240 E302     		.2byte	0x2e3
 1038 0242 6B000000 		.4byte	0x6b
 1039 0246 02       		.uleb128 0x2
 1040 0247 91       		.byte	0x91
 1041 0248 77       		.sleb128 -9
 1042 0249 00       		.byte	0
 1043 024a 0B       		.uleb128 0xb
 1044 024b 6D000000 		.4byte	.LASF36
 1045 024f 01       		.byte	0x1
 1046 0250 FD02     		.2byte	0x2fd
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 35


 1047 0252 00000000 		.4byte	.LFB13
 1048 0256 20000000 		.4byte	.LFE13-.LFB13
 1049 025a 01       		.uleb128 0x1
 1050 025b 9C       		.byte	0x9c
 1051 025c 70020000 		.4byte	0x270
 1052 0260 0C       		.uleb128 0xc
 1053 0261 98010000 		.4byte	.LASF37
 1054 0265 01       		.byte	0x1
 1055 0266 FD02     		.2byte	0x2fd
 1056 0268 6B000000 		.4byte	0x6b
 1057 026c 02       		.uleb128 0x2
 1058 026d 91       		.byte	0x91
 1059 026e 77       		.sleb128 -9
 1060 026f 00       		.byte	0
 1061 0270 0D       		.uleb128 0xd
 1062 0271 8B000000 		.4byte	.LASF38
 1063 0275 01       		.byte	0x1
 1064 0276 1603     		.2byte	0x316
 1065 0278 76000000 		.4byte	0x76
 1066 027c 00000000 		.4byte	.LFB14
 1067 0280 18000000 		.4byte	.LFE14-.LFB14
 1068 0284 01       		.uleb128 0x1
 1069 0285 9C       		.byte	0x9c
 1070 0286 0D       		.uleb128 0xd
 1071 0287 F2020000 		.4byte	.LASF39
 1072 028b 01       		.byte	0x1
 1073 028c 4A03     		.2byte	0x34a
 1074 028e 76000000 		.4byte	0x76
 1075 0292 00000000 		.4byte	.LFB15
 1076 0296 18000000 		.4byte	.LFE15-.LFB15
 1077 029a 01       		.uleb128 0x1
 1078 029b 9C       		.byte	0x9c
 1079 029c 0D       		.uleb128 0xd
 1080 029d 08030000 		.4byte	.LASF40
 1081 02a1 01       		.byte	0x1
 1082 02a2 5E03     		.2byte	0x35e
 1083 02a4 76000000 		.4byte	0x76
 1084 02a8 00000000 		.4byte	.LFB16
 1085 02ac 18000000 		.4byte	.LFE16-.LFB16
 1086 02b0 01       		.uleb128 0x1
 1087 02b1 9C       		.byte	0x9c
 1088 02b2 0D       		.uleb128 0xd
 1089 02b3 1D010000 		.4byte	.LASF41
 1090 02b7 01       		.byte	0x1
 1091 02b8 7403     		.2byte	0x374
 1092 02ba 76000000 		.4byte	0x76
 1093 02be 00000000 		.4byte	.LFB17
 1094 02c2 18000000 		.4byte	.LFE17-.LFB17
 1095 02c6 01       		.uleb128 0x1
 1096 02c7 9C       		.byte	0x9c
 1097 02c8 11       		.uleb128 0x11
 1098 02c9 0C010000 		.4byte	.LASF46
 1099 02cd 01       		.byte	0x1
 1100 02ce 20       		.byte	0x20
 1101 02cf 6B000000 		.4byte	0x6b
 1102 02d3 05       		.uleb128 0x5
 1103 02d4 03       		.byte	0x3
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 36


 1104 02d5 00000000 		.4byte	HC_PWM_S_initVar
 1105 02d9 00       		.byte	0
 1106              		.section	.debug_abbrev,"",%progbits
 1107              	.Ldebug_abbrev0:
 1108 0000 01       		.uleb128 0x1
 1109 0001 11       		.uleb128 0x11
 1110 0002 01       		.byte	0x1
 1111 0003 25       		.uleb128 0x25
 1112 0004 0E       		.uleb128 0xe
 1113 0005 13       		.uleb128 0x13
 1114 0006 0B       		.uleb128 0xb
 1115 0007 03       		.uleb128 0x3
 1116 0008 0E       		.uleb128 0xe
 1117 0009 1B       		.uleb128 0x1b
 1118 000a 0E       		.uleb128 0xe
 1119 000b 55       		.uleb128 0x55
 1120 000c 17       		.uleb128 0x17
 1121 000d 11       		.uleb128 0x11
 1122 000e 01       		.uleb128 0x1
 1123 000f 10       		.uleb128 0x10
 1124 0010 17       		.uleb128 0x17
 1125 0011 00       		.byte	0
 1126 0012 00       		.byte	0
 1127 0013 02       		.uleb128 0x2
 1128 0014 24       		.uleb128 0x24
 1129 0015 00       		.byte	0
 1130 0016 0B       		.uleb128 0xb
 1131 0017 0B       		.uleb128 0xb
 1132 0018 3E       		.uleb128 0x3e
 1133 0019 0B       		.uleb128 0xb
 1134 001a 03       		.uleb128 0x3
 1135 001b 0E       		.uleb128 0xe
 1136 001c 00       		.byte	0
 1137 001d 00       		.byte	0
 1138 001e 03       		.uleb128 0x3
 1139 001f 24       		.uleb128 0x24
 1140 0020 00       		.byte	0
 1141 0021 0B       		.uleb128 0xb
 1142 0022 0B       		.uleb128 0xb
 1143 0023 3E       		.uleb128 0x3e
 1144 0024 0B       		.uleb128 0xb
 1145 0025 03       		.uleb128 0x3
 1146 0026 08       		.uleb128 0x8
 1147 0027 00       		.byte	0
 1148 0028 00       		.byte	0
 1149 0029 04       		.uleb128 0x4
 1150 002a 16       		.uleb128 0x16
 1151 002b 00       		.byte	0
 1152 002c 03       		.uleb128 0x3
 1153 002d 0E       		.uleb128 0xe
 1154 002e 3A       		.uleb128 0x3a
 1155 002f 0B       		.uleb128 0xb
 1156 0030 3B       		.uleb128 0x3b
 1157 0031 0B       		.uleb128 0xb
 1158 0032 49       		.uleb128 0x49
 1159 0033 13       		.uleb128 0x13
 1160 0034 00       		.byte	0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 37


 1161 0035 00       		.byte	0
 1162 0036 05       		.uleb128 0x5
 1163 0037 16       		.uleb128 0x16
 1164 0038 00       		.byte	0
 1165 0039 03       		.uleb128 0x3
 1166 003a 0E       		.uleb128 0xe
 1167 003b 3A       		.uleb128 0x3a
 1168 003c 0B       		.uleb128 0xb
 1169 003d 3B       		.uleb128 0x3b
 1170 003e 05       		.uleb128 0x5
 1171 003f 49       		.uleb128 0x49
 1172 0040 13       		.uleb128 0x13
 1173 0041 00       		.byte	0
 1174 0042 00       		.byte	0
 1175 0043 06       		.uleb128 0x6
 1176 0044 35       		.uleb128 0x35
 1177 0045 00       		.byte	0
 1178 0046 49       		.uleb128 0x49
 1179 0047 13       		.uleb128 0x13
 1180 0048 00       		.byte	0
 1181 0049 00       		.byte	0
 1182 004a 07       		.uleb128 0x7
 1183 004b 2E       		.uleb128 0x2e
 1184 004c 00       		.byte	0
 1185 004d 3F       		.uleb128 0x3f
 1186 004e 19       		.uleb128 0x19
 1187 004f 03       		.uleb128 0x3
 1188 0050 0E       		.uleb128 0xe
 1189 0051 3A       		.uleb128 0x3a
 1190 0052 0B       		.uleb128 0xb
 1191 0053 3B       		.uleb128 0x3b
 1192 0054 0B       		.uleb128 0xb
 1193 0055 27       		.uleb128 0x27
 1194 0056 19       		.uleb128 0x19
 1195 0057 11       		.uleb128 0x11
 1196 0058 01       		.uleb128 0x1
 1197 0059 12       		.uleb128 0x12
 1198 005a 06       		.uleb128 0x6
 1199 005b 40       		.uleb128 0x40
 1200 005c 18       		.uleb128 0x18
 1201 005d 9642     		.uleb128 0x2116
 1202 005f 19       		.uleb128 0x19
 1203 0060 00       		.byte	0
 1204 0061 00       		.byte	0
 1205 0062 08       		.uleb128 0x8
 1206 0063 2E       		.uleb128 0x2e
 1207 0064 01       		.byte	0x1
 1208 0065 3F       		.uleb128 0x3f
 1209 0066 19       		.uleb128 0x19
 1210 0067 03       		.uleb128 0x3
 1211 0068 0E       		.uleb128 0xe
 1212 0069 3A       		.uleb128 0x3a
 1213 006a 0B       		.uleb128 0xb
 1214 006b 3B       		.uleb128 0x3b
 1215 006c 0B       		.uleb128 0xb
 1216 006d 27       		.uleb128 0x27
 1217 006e 19       		.uleb128 0x19
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 38


 1218 006f 11       		.uleb128 0x11
 1219 0070 01       		.uleb128 0x1
 1220 0071 12       		.uleb128 0x12
 1221 0072 06       		.uleb128 0x6
 1222 0073 40       		.uleb128 0x40
 1223 0074 18       		.uleb128 0x18
 1224 0075 9642     		.uleb128 0x2116
 1225 0077 19       		.uleb128 0x19
 1226 0078 01       		.uleb128 0x1
 1227 0079 13       		.uleb128 0x13
 1228 007a 00       		.byte	0
 1229 007b 00       		.byte	0
 1230 007c 09       		.uleb128 0x9
 1231 007d 34       		.uleb128 0x34
 1232 007e 00       		.byte	0
 1233 007f 03       		.uleb128 0x3
 1234 0080 0E       		.uleb128 0xe
 1235 0081 3A       		.uleb128 0x3a
 1236 0082 0B       		.uleb128 0xb
 1237 0083 3B       		.uleb128 0x3b
 1238 0084 0B       		.uleb128 0xb
 1239 0085 49       		.uleb128 0x49
 1240 0086 13       		.uleb128 0x13
 1241 0087 02       		.uleb128 0x2
 1242 0088 18       		.uleb128 0x18
 1243 0089 00       		.byte	0
 1244 008a 00       		.byte	0
 1245 008b 0A       		.uleb128 0xa
 1246 008c 2E       		.uleb128 0x2e
 1247 008d 00       		.byte	0
 1248 008e 3F       		.uleb128 0x3f
 1249 008f 19       		.uleb128 0x19
 1250 0090 03       		.uleb128 0x3
 1251 0091 0E       		.uleb128 0xe
 1252 0092 3A       		.uleb128 0x3a
 1253 0093 0B       		.uleb128 0xb
 1254 0094 3B       		.uleb128 0x3b
 1255 0095 0B       		.uleb128 0xb
 1256 0096 27       		.uleb128 0x27
 1257 0097 19       		.uleb128 0x19
 1258 0098 11       		.uleb128 0x11
 1259 0099 01       		.uleb128 0x1
 1260 009a 12       		.uleb128 0x12
 1261 009b 06       		.uleb128 0x6
 1262 009c 40       		.uleb128 0x40
 1263 009d 18       		.uleb128 0x18
 1264 009e 9742     		.uleb128 0x2117
 1265 00a0 19       		.uleb128 0x19
 1266 00a1 00       		.byte	0
 1267 00a2 00       		.byte	0
 1268 00a3 0B       		.uleb128 0xb
 1269 00a4 2E       		.uleb128 0x2e
 1270 00a5 01       		.byte	0x1
 1271 00a6 3F       		.uleb128 0x3f
 1272 00a7 19       		.uleb128 0x19
 1273 00a8 03       		.uleb128 0x3
 1274 00a9 0E       		.uleb128 0xe
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 39


 1275 00aa 3A       		.uleb128 0x3a
 1276 00ab 0B       		.uleb128 0xb
 1277 00ac 3B       		.uleb128 0x3b
 1278 00ad 05       		.uleb128 0x5
 1279 00ae 27       		.uleb128 0x27
 1280 00af 19       		.uleb128 0x19
 1281 00b0 11       		.uleb128 0x11
 1282 00b1 01       		.uleb128 0x1
 1283 00b2 12       		.uleb128 0x12
 1284 00b3 06       		.uleb128 0x6
 1285 00b4 40       		.uleb128 0x40
 1286 00b5 18       		.uleb128 0x18
 1287 00b6 9742     		.uleb128 0x2117
 1288 00b8 19       		.uleb128 0x19
 1289 00b9 01       		.uleb128 0x1
 1290 00ba 13       		.uleb128 0x13
 1291 00bb 00       		.byte	0
 1292 00bc 00       		.byte	0
 1293 00bd 0C       		.uleb128 0xc
 1294 00be 05       		.uleb128 0x5
 1295 00bf 00       		.byte	0
 1296 00c0 03       		.uleb128 0x3
 1297 00c1 0E       		.uleb128 0xe
 1298 00c2 3A       		.uleb128 0x3a
 1299 00c3 0B       		.uleb128 0xb
 1300 00c4 3B       		.uleb128 0x3b
 1301 00c5 05       		.uleb128 0x5
 1302 00c6 49       		.uleb128 0x49
 1303 00c7 13       		.uleb128 0x13
 1304 00c8 02       		.uleb128 0x2
 1305 00c9 18       		.uleb128 0x18
 1306 00ca 00       		.byte	0
 1307 00cb 00       		.byte	0
 1308 00cc 0D       		.uleb128 0xd
 1309 00cd 2E       		.uleb128 0x2e
 1310 00ce 00       		.byte	0
 1311 00cf 3F       		.uleb128 0x3f
 1312 00d0 19       		.uleb128 0x19
 1313 00d1 03       		.uleb128 0x3
 1314 00d2 0E       		.uleb128 0xe
 1315 00d3 3A       		.uleb128 0x3a
 1316 00d4 0B       		.uleb128 0xb
 1317 00d5 3B       		.uleb128 0x3b
 1318 00d6 05       		.uleb128 0x5
 1319 00d7 27       		.uleb128 0x27
 1320 00d8 19       		.uleb128 0x19
 1321 00d9 49       		.uleb128 0x49
 1322 00da 13       		.uleb128 0x13
 1323 00db 11       		.uleb128 0x11
 1324 00dc 01       		.uleb128 0x1
 1325 00dd 12       		.uleb128 0x12
 1326 00de 06       		.uleb128 0x6
 1327 00df 40       		.uleb128 0x40
 1328 00e0 18       		.uleb128 0x18
 1329 00e1 9742     		.uleb128 0x2117
 1330 00e3 19       		.uleb128 0x19
 1331 00e4 00       		.byte	0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 40


 1332 00e5 00       		.byte	0
 1333 00e6 0E       		.uleb128 0xe
 1334 00e7 2E       		.uleb128 0x2e
 1335 00e8 00       		.byte	0
 1336 00e9 3F       		.uleb128 0x3f
 1337 00ea 19       		.uleb128 0x19
 1338 00eb 03       		.uleb128 0x3
 1339 00ec 0E       		.uleb128 0xe
 1340 00ed 3A       		.uleb128 0x3a
 1341 00ee 0B       		.uleb128 0xb
 1342 00ef 3B       		.uleb128 0x3b
 1343 00f0 05       		.uleb128 0x5
 1344 00f1 27       		.uleb128 0x27
 1345 00f2 19       		.uleb128 0x19
 1346 00f3 11       		.uleb128 0x11
 1347 00f4 01       		.uleb128 0x1
 1348 00f5 12       		.uleb128 0x12
 1349 00f6 06       		.uleb128 0x6
 1350 00f7 40       		.uleb128 0x40
 1351 00f8 18       		.uleb128 0x18
 1352 00f9 9642     		.uleb128 0x2116
 1353 00fb 19       		.uleb128 0x19
 1354 00fc 00       		.byte	0
 1355 00fd 00       		.byte	0
 1356 00fe 0F       		.uleb128 0xf
 1357 00ff 2E       		.uleb128 0x2e
 1358 0100 01       		.byte	0x1
 1359 0101 3F       		.uleb128 0x3f
 1360 0102 19       		.uleb128 0x19
 1361 0103 03       		.uleb128 0x3
 1362 0104 0E       		.uleb128 0xe
 1363 0105 3A       		.uleb128 0x3a
 1364 0106 0B       		.uleb128 0xb
 1365 0107 3B       		.uleb128 0x3b
 1366 0108 05       		.uleb128 0x5
 1367 0109 27       		.uleb128 0x27
 1368 010a 19       		.uleb128 0x19
 1369 010b 49       		.uleb128 0x49
 1370 010c 13       		.uleb128 0x13
 1371 010d 11       		.uleb128 0x11
 1372 010e 01       		.uleb128 0x1
 1373 010f 12       		.uleb128 0x12
 1374 0110 06       		.uleb128 0x6
 1375 0111 40       		.uleb128 0x40
 1376 0112 18       		.uleb128 0x18
 1377 0113 9742     		.uleb128 0x2117
 1378 0115 19       		.uleb128 0x19
 1379 0116 01       		.uleb128 0x1
 1380 0117 13       		.uleb128 0x13
 1381 0118 00       		.byte	0
 1382 0119 00       		.byte	0
 1383 011a 10       		.uleb128 0x10
 1384 011b 34       		.uleb128 0x34
 1385 011c 00       		.byte	0
 1386 011d 03       		.uleb128 0x3
 1387 011e 0E       		.uleb128 0xe
 1388 011f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 41


 1389 0120 0B       		.uleb128 0xb
 1390 0121 3B       		.uleb128 0x3b
 1391 0122 05       		.uleb128 0x5
 1392 0123 49       		.uleb128 0x49
 1393 0124 13       		.uleb128 0x13
 1394 0125 02       		.uleb128 0x2
 1395 0126 18       		.uleb128 0x18
 1396 0127 00       		.byte	0
 1397 0128 00       		.byte	0
 1398 0129 11       		.uleb128 0x11
 1399 012a 34       		.uleb128 0x34
 1400 012b 00       		.byte	0
 1401 012c 03       		.uleb128 0x3
 1402 012d 0E       		.uleb128 0xe
 1403 012e 3A       		.uleb128 0x3a
 1404 012f 0B       		.uleb128 0xb
 1405 0130 3B       		.uleb128 0x3b
 1406 0131 0B       		.uleb128 0xb
 1407 0132 49       		.uleb128 0x49
 1408 0133 13       		.uleb128 0x13
 1409 0134 3F       		.uleb128 0x3f
 1410 0135 19       		.uleb128 0x19
 1411 0136 02       		.uleb128 0x2
 1412 0137 18       		.uleb128 0x18
 1413 0138 00       		.byte	0
 1414 0139 00       		.byte	0
 1415 013a 00       		.byte	0
 1416              		.section	.debug_aranges,"",%progbits
 1417 0000 A4000000 		.4byte	0xa4
 1418 0004 0200     		.2byte	0x2
 1419 0006 00000000 		.4byte	.Ldebug_info0
 1420 000a 04       		.byte	0x4
 1421 000b 00       		.byte	0
 1422 000c 0000     		.2byte	0
 1423 000e 0000     		.2byte	0
 1424 0010 00000000 		.4byte	.LFB0
 1425 0014 20000000 		.4byte	.LFE0-.LFB0
 1426 0018 00000000 		.4byte	.LFB1
 1427 001c A0000000 		.4byte	.LFE1-.LFB1
 1428 0020 00000000 		.4byte	.LFB2
 1429 0024 20000000 		.4byte	.LFE2-.LFB2
 1430 0028 00000000 		.4byte	.LFB3
 1431 002c 20000000 		.4byte	.LFE3-.LFB3
 1432 0030 00000000 		.4byte	.LFB4
 1433 0034 20000000 		.4byte	.LFE4-.LFB4
 1434 0038 00000000 		.4byte	.LFB5
 1435 003c 20000000 		.4byte	.LFE5-.LFB5
 1436 0040 00000000 		.4byte	.LFB6
 1437 0044 1A000000 		.4byte	.LFE6-.LFB6
 1438 0048 00000000 		.4byte	.LFB7
 1439 004c 20000000 		.4byte	.LFE7-.LFB7
 1440 0050 00000000 		.4byte	.LFB8
 1441 0054 20000000 		.4byte	.LFE8-.LFB8
 1442 0058 00000000 		.4byte	.LFB9
 1443 005c 20000000 		.4byte	.LFE9-.LFB9
 1444 0060 00000000 		.4byte	.LFB10
 1445 0064 20000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 42


 1446 0068 00000000 		.4byte	.LFB11
 1447 006c 18000000 		.4byte	.LFE11-.LFB11
 1448 0070 00000000 		.4byte	.LFB12
 1449 0074 20000000 		.4byte	.LFE12-.LFB12
 1450 0078 00000000 		.4byte	.LFB13
 1451 007c 20000000 		.4byte	.LFE13-.LFB13
 1452 0080 00000000 		.4byte	.LFB14
 1453 0084 18000000 		.4byte	.LFE14-.LFB14
 1454 0088 00000000 		.4byte	.LFB15
 1455 008c 18000000 		.4byte	.LFE15-.LFB15
 1456 0090 00000000 		.4byte	.LFB16
 1457 0094 18000000 		.4byte	.LFE16-.LFB16
 1458 0098 00000000 		.4byte	.LFB17
 1459 009c 18000000 		.4byte	.LFE17-.LFB17
 1460 00a0 00000000 		.4byte	0
 1461 00a4 00000000 		.4byte	0
 1462              		.section	.debug_ranges,"",%progbits
 1463              	.Ldebug_ranges0:
 1464 0000 00000000 		.4byte	.LFB0
 1465 0004 20000000 		.4byte	.LFE0
 1466 0008 00000000 		.4byte	.LFB1
 1467 000c A0000000 		.4byte	.LFE1
 1468 0010 00000000 		.4byte	.LFB2
 1469 0014 20000000 		.4byte	.LFE2
 1470 0018 00000000 		.4byte	.LFB3
 1471 001c 20000000 		.4byte	.LFE3
 1472 0020 00000000 		.4byte	.LFB4
 1473 0024 20000000 		.4byte	.LFE4
 1474 0028 00000000 		.4byte	.LFB5
 1475 002c 20000000 		.4byte	.LFE5
 1476 0030 00000000 		.4byte	.LFB6
 1477 0034 1A000000 		.4byte	.LFE6
 1478 0038 00000000 		.4byte	.LFB7
 1479 003c 20000000 		.4byte	.LFE7
 1480 0040 00000000 		.4byte	.LFB8
 1481 0044 20000000 		.4byte	.LFE8
 1482 0048 00000000 		.4byte	.LFB9
 1483 004c 20000000 		.4byte	.LFE9
 1484 0050 00000000 		.4byte	.LFB10
 1485 0054 20000000 		.4byte	.LFE10
 1486 0058 00000000 		.4byte	.LFB11
 1487 005c 18000000 		.4byte	.LFE11
 1488 0060 00000000 		.4byte	.LFB12
 1489 0064 20000000 		.4byte	.LFE12
 1490 0068 00000000 		.4byte	.LFB13
 1491 006c 20000000 		.4byte	.LFE13
 1492 0070 00000000 		.4byte	.LFB14
 1493 0074 18000000 		.4byte	.LFE14
 1494 0078 00000000 		.4byte	.LFB15
 1495 007c 18000000 		.4byte	.LFE15
 1496 0080 00000000 		.4byte	.LFB16
 1497 0084 18000000 		.4byte	.LFE16
 1498 0088 00000000 		.4byte	.LFB17
 1499 008c 18000000 		.4byte	.LFE17
 1500 0090 00000000 		.4byte	0
 1501 0094 00000000 		.4byte	0
 1502              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 43


 1503              	.Ldebug_line0:
 1504 0000 B1010000 		.section	.debug_str,"MS",%progbits,1
 1504      02004700 
 1504      00000201 
 1504      FB0E0D00 
 1504      01010101 
 1505              	.LASF15:
 1506 0000 72656731 		.ascii	"reg16\000"
 1506      3600
 1507              	.LASF43:
 1508 0006 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\HC_PWM_S.c\000"
 1508      6E657261 
 1508      7465645F 
 1508      536F7572 
 1508      63655C50 
 1509              	.LASF31:
 1510 002a 48435F50 		.ascii	"HC_PWM_S_SetInterruptMode\000"
 1510      574D5F53 
 1510      5F536574 
 1510      496E7465 
 1510      72727570 
 1511              	.LASF27:
 1512 0044 70657269 		.ascii	"period\000"
 1512      6F6400
 1513              	.LASF19:
 1514 004b 48435F50 		.ascii	"HC_PWM_S_Start\000"
 1514      574D5F53 
 1514      5F537461 
 1514      727400
 1515              	.LASF3:
 1516 005a 73686F72 		.ascii	"short unsigned int\000"
 1516      7420756E 
 1516      7369676E 
 1516      65642069 
 1516      6E7400
 1517              	.LASF36:
 1518 006d 48435F50 		.ascii	"HC_PWM_S_WriteControlRegister\000"
 1518      574D5F53 
 1518      5F577269 
 1518      7465436F 
 1518      6E74726F 
 1519              	.LASF38:
 1520 008b 48435F50 		.ascii	"HC_PWM_S_ReadCapture\000"
 1520      574D5F53 
 1520      5F526561 
 1520      64436170 
 1520      74757265 
 1521              	.LASF45:
 1522 00a0 48435F50 		.ascii	"HC_PWM_S_ReadControlRegister\000"
 1522      574D5F53 
 1522      5F526561 
 1522      64436F6E 
 1522      74726F6C 
 1523              	.LASF24:
 1524 00bd 48435F50 		.ascii	"HC_PWM_S_ClearFIFO\000"
 1524      574D5F53 
 1524      5F436C65 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 44


 1524      61724649 
 1524      464F00
 1525              	.LASF11:
 1526 00d0 666C6F61 		.ascii	"float\000"
 1526      7400
 1527              	.LASF26:
 1528 00d6 636F756E 		.ascii	"counter\000"
 1528      74657200 
 1529              	.LASF30:
 1530 00de 48435F50 		.ascii	"HC_PWM_S_WriteCompare2\000"
 1530      574D5F53 
 1530      5F577269 
 1530      7465436F 
 1530      6D706172 
 1531              	.LASF28:
 1532 00f5 48435F50 		.ascii	"HC_PWM_S_WriteCompare1\000"
 1532      574D5F53 
 1532      5F577269 
 1532      7465436F 
 1532      6D706172 
 1533              	.LASF46:
 1534 010c 48435F50 		.ascii	"HC_PWM_S_initVar\000"
 1534      574D5F53 
 1534      5F696E69 
 1534      74566172 
 1534      00
 1535              	.LASF41:
 1536 011d 48435F50 		.ascii	"HC_PWM_S_ReadPeriod\000"
 1536      574D5F53 
 1536      5F526561 
 1536      64506572 
 1536      696F6400 
 1537              	.LASF44:
 1538 0131 433A5C55 		.ascii	"C:\\Users\\xavieran\\Desktop\\ECE3091\\PSOCProjects"
 1538      73657273 
 1538      5C786176 
 1538      69657261 
 1538      6E5C4465 
 1539 015f 5C454E47 		.ascii	"\\ENG3091_MandM\\camera_test.cydsn\000"
 1539      33303931 
 1539      5F4D616E 
 1539      644D5C63 
 1539      616D6572 
 1540              	.LASF5:
 1541 0180 6C6F6E67 		.ascii	"long unsigned int\000"
 1541      20756E73 
 1541      69676E65 
 1541      6420696E 
 1541      7400
 1542              	.LASF9:
 1543 0192 75696E74 		.ascii	"uint8\000"
 1543      3800
 1544              	.LASF37:
 1545 0198 636F6E74 		.ascii	"control\000"
 1545      726F6C00 
 1546              	.LASF33:
 1547 01a0 48435F50 		.ascii	"HC_PWM_S_ReadCounter\000"
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 45


 1547      574D5F53 
 1547      5F526561 
 1547      64436F75 
 1547      6E746572 
 1548              	.LASF34:
 1549 01b5 48435F50 		.ascii	"HC_PWM_S_ReadStatusRegister\000"
 1549      574D5F53 
 1549      5F526561 
 1549      64537461 
 1549      74757352 
 1550              	.LASF1:
 1551 01d1 756E7369 		.ascii	"unsigned char\000"
 1551      676E6564 
 1551      20636861 
 1551      7200
 1552              	.LASF12:
 1553 01df 646F7562 		.ascii	"double\000"
 1553      6C6500
 1554              	.LASF22:
 1555 01e6 48435F50 		.ascii	"HC_PWM_S_Init\000"
 1555      574D5F53 
 1555      5F496E69 
 1555      7400
 1556              	.LASF10:
 1557 01f4 75696E74 		.ascii	"uint16\000"
 1557      313600
 1558              	.LASF20:
 1559 01fb 48435F50 		.ascii	"HC_PWM_S_Enable\000"
 1559      574D5F53 
 1559      5F456E61 
 1559      626C6500 
 1560              	.LASF8:
 1561 020b 756E7369 		.ascii	"unsigned int\000"
 1561      676E6564 
 1561      20696E74 
 1561      00
 1562              	.LASF7:
 1563 0218 6C6F6E67 		.ascii	"long long unsigned int\000"
 1563      206C6F6E 
 1563      6720756E 
 1563      7369676E 
 1563      65642069 
 1564              	.LASF35:
 1565 022f 72657375 		.ascii	"result\000"
 1565      6C7400
 1566              	.LASF42:
 1567 0236 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1567      4320342E 
 1567      382E3420 
 1567      32303134 
 1567      30353236 
 1568 0269 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1568      20726576 
 1568      6973696F 
 1568      6E203231 
 1568      31333538 
 1569 029c 30202D66 		.ascii	"0 -ffunction-sections\000"
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 46


 1569      66756E63 
 1569      74696F6E 
 1569      2D736563 
 1569      74696F6E 
 1570              	.LASF14:
 1571 02b2 72656738 		.ascii	"reg8\000"
 1571      00
 1572              	.LASF16:
 1573 02b7 73697A65 		.ascii	"sizetype\000"
 1573      74797065 
 1573      00
 1574              	.LASF23:
 1575 02c0 48435F50 		.ascii	"HC_PWM_S_WriteCounter\000"
 1575      574D5F53 
 1575      5F577269 
 1575      7465436F 
 1575      756E7465 
 1576              	.LASF6:
 1577 02d6 6C6F6E67 		.ascii	"long long int\000"
 1577      206C6F6E 
 1577      6720696E 
 1577      7400
 1578              	.LASF32:
 1579 02e4 696E7465 		.ascii	"interruptMode\000"
 1579      72727570 
 1579      744D6F64 
 1579      6500
 1580              	.LASF39:
 1581 02f2 48435F50 		.ascii	"HC_PWM_S_ReadCompare1\000"
 1581      574D5F53 
 1581      5F526561 
 1581      64436F6D 
 1581      70617265 
 1582              	.LASF40:
 1583 0308 48435F50 		.ascii	"HC_PWM_S_ReadCompare2\000"
 1583      574D5F53 
 1583      5F526561 
 1583      64436F6D 
 1583      70617265 
 1584              	.LASF2:
 1585 031e 73686F72 		.ascii	"short int\000"
 1585      7420696E 
 1585      7400
 1586              	.LASF25:
 1587 0328 48435F50 		.ascii	"HC_PWM_S_WritePeriod\000"
 1587      574D5F53 
 1587      5F577269 
 1587      74655065 
 1587      72696F64 
 1588              	.LASF21:
 1589 033d 48435F50 		.ascii	"HC_PWM_S_Stop\000"
 1589      574D5F53 
 1589      5F53746F 
 1589      7000
 1590              	.LASF18:
 1591 034b 48435F50 		.ascii	"HC_PWM_S_interruptState\000"
 1591      574D5F53 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\cc006O7W.s 			page 47


 1591      5F696E74 
 1591      65727275 
 1591      70745374 
 1592              	.LASF4:
 1593 0363 6C6F6E67 		.ascii	"long int\000"
 1593      20696E74 
 1593      00
 1594              	.LASF13:
 1595 036c 63686172 		.ascii	"char\000"
 1595      00
 1596              	.LASF0:
 1597 0371 7369676E 		.ascii	"signed char\000"
 1597      65642063 
 1597      68617200 
 1598              	.LASF29:
 1599 037d 636F6D70 		.ascii	"compare\000"
 1599      61726500 
 1600              	.LASF17:
 1601 0385 6374726C 		.ascii	"ctrl\000"
 1601      00
 1602              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
