ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"motor.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	Camera_framebuffer,50688,4
  19              		.comm	desired_distance,4,4
  20              		.comm	desired_heading,2,2
  21              		.comm	start_x,4,4
  22              		.comm	start_y,4,4
  23              		.comm	end_x,4,4
  24              		.comm	end_y,4,4
  25              		.comm	motor_state,1,1
  26              		.comm	just_arrived,1,1
  27              		.comm	currently_rotating,1,1
  28              		.section	.text.isRotating,"ax",%progbits
  29              		.align	2
  30              		.global	isRotating
  31              		.thumb
  32              		.thumb_func
  33              		.type	isRotating, %function
  34              	isRotating:
  35              	.LFB63:
  36              		.file 1 ".\\motor.c"
   1:.\motor.c     **** /* ========================================
   2:.\motor.c     ****  *
   3:.\motor.c     ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\motor.c     ****  * All Rights Reserved
   5:.\motor.c     ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\motor.c     ****  *
   7:.\motor.c     ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\motor.c     ****  * WHICH IS THE PROPERTY OF your company.
   9:.\motor.c     ****  *
  10:.\motor.c     ****  * ========================================
  11:.\motor.c     **** */
  12:.\motor.c     **** 
  13:.\motor.c     **** #include <math.h>
  14:.\motor.c     **** 
  15:.\motor.c     **** #include <project.h>
  16:.\motor.c     **** #include <motor.h>
  17:.\motor.c     **** #include <navigation.h>
  18:.\motor.c     **** #include <compass.h>
  19:.\motor.c     **** 
  20:.\motor.c     **** #include <mouse_b.h>
  21:.\motor.c     **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 2


  22:.\motor.c     **** int32 desired_distance;
  23:.\motor.c     **** int16 desired_heading;
  24:.\motor.c     **** 
  25:.\motor.c     **** //The position before executing a move to order
  26:.\motor.c     **** int32 start_x;
  27:.\motor.c     **** int32 start_y;
  28:.\motor.c     **** //The position we wish to go to
  29:.\motor.c     **** int32 end_x;
  30:.\motor.c     **** int32 end_y;
  31:.\motor.c     **** 
  32:.\motor.c     **** //Hold the current state of the motors
  33:.\motor.c     **** uint8 motor_state;
  34:.\motor.c     **** uint8 just_arrived;
  35:.\motor.c     **** uint8 currently_rotating;
  36:.\motor.c     **** uint8 isRotating(){
  37              		.loc 1 36 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41              		@ link register save eliminated.
  42 0000 80B4     		push	{r7}
  43              		.cfi_def_cfa_offset 4
  44              		.cfi_offset 7, -4
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  37:.\motor.c     ****     return currently_rotating;
  47              		.loc 1 37 0
  48 0004 034B     		ldr	r3, .L3
  49 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  38:.\motor.c     **** }
  50              		.loc 1 38 0
  51 0008 1846     		mov	r0, r3
  52 000a BD46     		mov	sp, r7
  53              		@ sp needed
  54 000c 5DF8047B 		ldr	r7, [sp], #4
  55 0010 7047     		bx	lr
  56              	.L4:
  57 0012 00BF     		.align	2
  58              	.L3:
  59 0014 00000000 		.word	currently_rotating
  60              		.cfi_endproc
  61              	.LFE63:
  62              		.size	isRotating, .-isRotating
  63              		.comm	currently_driving,1,1
  64              		.section	.text.isDriving,"ax",%progbits
  65              		.align	2
  66              		.global	isDriving
  67              		.thumb
  68              		.thumb_func
  69              		.type	isDriving, %function
  70              	isDriving:
  71              	.LFB64:
  39:.\motor.c     **** uint8 currently_driving;
  40:.\motor.c     **** uint8 isDriving(){
  72              		.loc 1 40 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 3


  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77 0000 80B4     		push	{r7}
  78              		.cfi_def_cfa_offset 4
  79              		.cfi_offset 7, -4
  80 0002 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  41:.\motor.c     ****     return currently_driving;
  82              		.loc 1 41 0
  83 0004 034B     		ldr	r3, .L7
  84 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  42:.\motor.c     **** }
  85              		.loc 1 42 0
  86 0008 1846     		mov	r0, r3
  87 000a BD46     		mov	sp, r7
  88              		@ sp needed
  89 000c 5DF8047B 		ldr	r7, [sp], #4
  90 0010 7047     		bx	lr
  91              	.L8:
  92 0012 00BF     		.align	2
  93              	.L7:
  94 0014 00000000 		.word	currently_driving
  95              		.cfi_endproc
  96              	.LFE64:
  97              		.size	isDriving, .-isDriving
  98              		.section	.text.clip,"ax",%progbits
  99              		.align	2
 100              		.global	clip
 101              		.thumb
 102              		.thumb_func
 103              		.type	clip, %function
 104              	clip:
 105              	.LFB65:
  43:.\motor.c     **** 
  44:.\motor.c     **** // From compass.c
  45:.\motor.c     **** extern int16 compass_heading;
  46:.\motor.c     **** // From mouse_b.c
  47:.\motor.c     **** extern volatile int32 loc_y_b;
  48:.\motor.c     **** // From navigation.c
  49:.\motor.c     **** extern volatile struct Position location;
  50:.\motor.c     **** extern int32 delta_y_distance; 
  51:.\motor.c     **** 
  52:.\motor.c     **** void rotate_left(int speed);
  53:.\motor.c     **** void rotate_right(int speed);
  54:.\motor.c     **** int16 abs2(int16 val);
  55:.\motor.c     **** 
  56:.\motor.c     **** 
  57:.\motor.c     **** uint8 clip(int lower, int var, int upper){
 106              		.loc 1 57 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 16
 109              		@ frame_needed = 1, uses_anonymous_args = 0
 110              		@ link register save eliminated.
 111 0000 80B4     		push	{r7}
 112              		.cfi_def_cfa_offset 4
 113              		.cfi_offset 7, -4
 114 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 4


 115              		.cfi_def_cfa_offset 24
 116 0004 00AF     		add	r7, sp, #0
 117              		.cfi_def_cfa_register 7
 118 0006 F860     		str	r0, [r7, #12]
 119 0008 B960     		str	r1, [r7, #8]
 120 000a 7A60     		str	r2, [r7, #4]
  58:.\motor.c     ****     if (var > upper){
 121              		.loc 1 58 0
 122 000c BA68     		ldr	r2, [r7, #8]
 123 000e 7B68     		ldr	r3, [r7, #4]
 124 0010 9A42     		cmp	r2, r3
 125 0012 02DD     		ble	.L10
  59:.\motor.c     ****         return upper;
 126              		.loc 1 59 0
 127 0014 7B68     		ldr	r3, [r7, #4]
 128 0016 DBB2     		uxtb	r3, r3
 129 0018 08E0     		b	.L11
 130              	.L10:
  60:.\motor.c     ****     } else if (var < lower) {
 131              		.loc 1 60 0
 132 001a BA68     		ldr	r2, [r7, #8]
 133 001c FB68     		ldr	r3, [r7, #12]
 134 001e 9A42     		cmp	r2, r3
 135 0020 02DA     		bge	.L12
  61:.\motor.c     ****         return lower;
 136              		.loc 1 61 0
 137 0022 FB68     		ldr	r3, [r7, #12]
 138 0024 DBB2     		uxtb	r3, r3
 139 0026 01E0     		b	.L11
 140              	.L12:
  62:.\motor.c     ****     } else {
  63:.\motor.c     ****         return var;
 141              		.loc 1 63 0
 142 0028 BB68     		ldr	r3, [r7, #8]
 143 002a DBB2     		uxtb	r3, r3
 144              	.L11:
  64:.\motor.c     ****     }
  65:.\motor.c     **** }
 145              		.loc 1 65 0
 146 002c 1846     		mov	r0, r3
 147 002e 1437     		adds	r7, r7, #20
 148 0030 BD46     		mov	sp, r7
 149              		@ sp needed
 150 0032 5DF8047B 		ldr	r7, [sp], #4
 151 0036 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE65:
 154              		.size	clip, .-clip
 155              		.section	.text.control_motors,"ax",%progbits
 156              		.align	2
 157              		.global	control_motors
 158              		.thumb
 159              		.thumb_func
 160              		.type	control_motors, %function
 161              	control_motors:
 162              	.LFB66:
  66:.\motor.c     **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 5


  67:.\motor.c     **** /** This function is to be called every time through the main loop 
  68:.\motor.c     ****  * It will 
  69:.\motor.c     ****  */
  70:.\motor.c     **** 
  71:.\motor.c     **** int control_motors(){
 163              		.loc 1 71 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 16
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167 0000 80B5     		push	{r7, lr}
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 84B0     		sub	sp, sp, #16
 172              		.cfi_def_cfa_offset 24
 173 0004 00AF     		add	r7, sp, #0
 174              		.cfi_def_cfa_register 7
  72:.\motor.c     ****     /* 
  73:.\motor.c     ****      * Step 1. Correct the heading 
  74:.\motor.c     ****      */
  75:.\motor.c     ****     update_position();
 175              		.loc 1 75 0
 176 0006 FFF7FEFF 		bl	update_position
  76:.\motor.c     ****     compass_read();
 177              		.loc 1 76 0
 178 000a FFF7FEFF 		bl	compass_read
  77:.\motor.c     ****     int motor_end_state = 0;
 179              		.loc 1 77 0
 180 000e 0023     		movs	r3, #0
 181 0010 FB60     		str	r3, [r7, #12]
  78:.\motor.c     ****     int heading_error = desired_heading - compass_heading;
 182              		.loc 1 78 0
 183 0012 744B     		ldr	r3, .L28
 184 0014 1B88     		ldrh	r3, [r3]
 185 0016 1AB2     		sxth	r2, r3
 186 0018 734B     		ldr	r3, .L28+4
 187 001a 1B88     		ldrh	r3, [r3]
 188 001c 1BB2     		sxth	r3, r3
 189 001e D31A     		subs	r3, r2, r3
 190 0020 BB60     		str	r3, [r7, #8]
  79:.\motor.c     ****     //If the error is greater than 180, there is a shorter way around the unit 
  80:.\motor.c     ****     //this correc tthat
  81:.\motor.c     ****     if (abs(heading_error) > 180){ 
 191              		.loc 1 81 0
 192 0022 BB68     		ldr	r3, [r7, #8]
 193 0024 002B     		cmp	r3, #0
 194 0026 B8BF     		it	lt
 195 0028 5B42     		rsblt	r3, r3, #0
 196 002a B42B     		cmp	r3, #180
 197 002c 09DD     		ble	.L14
  82:.\motor.c     ****         heading_error = -(desired_heading - (360 - compass_heading));
 198              		.loc 1 82 0
 199 002e 6E4B     		ldr	r3, .L28+4
 200 0030 1B88     		ldrh	r3, [r3]
 201 0032 1BB2     		sxth	r3, r3
 202 0034 C3F5B472 		rsb	r2, r3, #360
 203 0038 6A4B     		ldr	r3, .L28
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 6


 204 003a 1B88     		ldrh	r3, [r3]
 205 003c 1BB2     		sxth	r3, r3
 206 003e D31A     		subs	r3, r2, r3
 207 0040 BB60     		str	r3, [r7, #8]
 208              	.L14:
  83:.\motor.c     ****     }
  84:.\motor.c     ****     // We need to correct the heading if the error is greater than 
  85:.\motor.c     ****     if (abs(heading_error) > HEADING_ERROR_LIMIT){ 
 209              		.loc 1 85 0
 210 0042 BB68     		ldr	r3, [r7, #8]
 211 0044 002B     		cmp	r3, #0
 212 0046 B8BF     		it	lt
 213 0048 5B42     		rsblt	r3, r3, #0
 214 004a 052B     		cmp	r3, #5
 215 004c 30DD     		ble	.L15
  86:.\motor.c     ****         currently_rotating = 1;
 216              		.loc 1 86 0
 217 004e 674B     		ldr	r3, .L28+8
 218 0050 0122     		movs	r2, #1
 219 0052 1A70     		strb	r2, [r3]
  87:.\motor.c     ****         
  88:.\motor.c     ****         // the actual heading is greater than the desired heading
  89:.\motor.c     ****         if (heading_error < 0){ 
 220              		.loc 1 89 0
 221 0054 BB68     		ldr	r3, [r7, #8]
 222 0056 002B     		cmp	r3, #0
 223 0058 14DA     		bge	.L16
  90:.\motor.c     ****             rotate_left(clip(STALL_SPEED, abs(heading_error)*2, MAX_SPEED));
 224              		.loc 1 90 0
 225 005a BB68     		ldr	r3, [r7, #8]
 226 005c 002B     		cmp	r3, #0
 227 005e B8BF     		it	lt
 228 0060 5B42     		rsblt	r3, r3, #0
 229 0062 5B00     		lsls	r3, r3, #1
 230 0064 3C20     		movs	r0, #60
 231 0066 1946     		mov	r1, r3
 232 0068 9622     		movs	r2, #150
 233 006a FFF7FEFF 		bl	clip
 234 006e 0346     		mov	r3, r0
 235 0070 1846     		mov	r0, r3
 236 0072 FFF7FEFF 		bl	rotate_left
  91:.\motor.c     ****             WHITE_Write(1);
 237              		.loc 1 91 0
 238 0076 0120     		movs	r0, #1
 239 0078 FFF7FEFF 		bl	WHITE_Write
  92:.\motor.c     ****             ORANGE_Write(0);
 240              		.loc 1 92 0
 241 007c 0020     		movs	r0, #0
 242 007e FFF7FEFF 		bl	ORANGE_Write
 243 0082 13E0     		b	.L17
 244              	.L16:
  93:.\motor.c     ****         } else {
  94:.\motor.c     ****             rotate_right(clip(STALL_SPEED, abs(heading_error)*2, MAX_SPEED));
 245              		.loc 1 94 0
 246 0084 BB68     		ldr	r3, [r7, #8]
 247 0086 002B     		cmp	r3, #0
 248 0088 B8BF     		it	lt
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 7


 249 008a 5B42     		rsblt	r3, r3, #0
 250 008c 5B00     		lsls	r3, r3, #1
 251 008e 3C20     		movs	r0, #60
 252 0090 1946     		mov	r1, r3
 253 0092 9622     		movs	r2, #150
 254 0094 FFF7FEFF 		bl	clip
 255 0098 0346     		mov	r3, r0
 256 009a 1846     		mov	r0, r3
 257 009c FFF7FEFF 		bl	rotate_right
  95:.\motor.c     ****             WHITE_Write(0);
 258              		.loc 1 95 0
 259 00a0 0020     		movs	r0, #0
 260 00a2 FFF7FEFF 		bl	WHITE_Write
  96:.\motor.c     ****             ORANGE_Write(1);
 261              		.loc 1 96 0
 262 00a6 0120     		movs	r0, #1
 263 00a8 FFF7FEFF 		bl	ORANGE_Write
 264              	.L17:
  97:.\motor.c     ****         }
  98:.\motor.c     ****         return MEND_S_ROTATING;
 265              		.loc 1 98 0
 266 00ac 0123     		movs	r3, #1
 267 00ae 94E0     		b	.L18
 268              	.L15:
  99:.\motor.c     ****     }
 100:.\motor.c     ****     
 101:.\motor.c     ****     setCoast(MBOTH);
 269              		.loc 1 101 0
 270 00b0 0320     		movs	r0, #3
 271 00b2 FFF7FEFF 		bl	setCoast
 102:.\motor.c     ****     currently_rotating = 0;
 272              		.loc 1 102 0
 273 00b6 4D4B     		ldr	r3, .L28+8
 274 00b8 0022     		movs	r2, #0
 275 00ba 1A70     		strb	r2, [r3]
 103:.\motor.c     ****     
 104:.\motor.c     ****     int distance_error;
 105:.\motor.c     ****     
 106:.\motor.c     ****     switch (motor_state){
 276              		.loc 1 106 0
 277 00bc 4C4B     		ldr	r3, .L28+12
 278 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 279 00c0 022B     		cmp	r3, #2
 280 00c2 03D0     		beq	.L20
 281 00c4 032B     		cmp	r3, #3
 282 00c6 44D0     		beq	.L21
 283 00c8 002B     		cmp	r3, #0
 107:.\motor.c     ****         case MOTOR_S_STOPPED:
 108:.\motor.c     ****             break; //Do nothing
 284              		.loc 1 108 0
 285 00ca 85E0     		b	.L19
 286              	.L20:
 109:.\motor.c     ****         case MOTOR_S_FORWARD:
 110:.\motor.c     ****             currently_driving = 1;
 287              		.loc 1 110 0
 288 00cc 494B     		ldr	r3, .L28+16
 289 00ce 0122     		movs	r2, #1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 8


 290 00d0 1A70     		strb	r2, [r3]
 111:.\motor.c     ****             distance_error = desired_distance - delta_y_distance;
 291              		.loc 1 111 0
 292 00d2 494B     		ldr	r3, .L28+20
 293 00d4 1A68     		ldr	r2, [r3]
 294 00d6 494B     		ldr	r3, .L28+24
 295 00d8 1B68     		ldr	r3, [r3]
 296 00da D31A     		subs	r3, r2, r3
 297 00dc 7B60     		str	r3, [r7, #4]
 112:.\motor.c     ****             if (abs2(distance_error) > MOTOR_FORWARD_ERROR_LIMIT && distance_error > 0){
 298              		.loc 1 112 0
 299 00de 7B68     		ldr	r3, [r7, #4]
 300 00e0 9BB2     		uxth	r3, r3
 301 00e2 1BB2     		sxth	r3, r3
 302 00e4 1846     		mov	r0, r3
 303 00e6 FFF7FEFF 		bl	abs2
 304 00ea 0346     		mov	r3, r0
 305 00ec 642B     		cmp	r3, #100
 306 00ee 20DD     		ble	.L23
 307              		.loc 1 112 0 is_stmt 0 discriminator 1
 308 00f0 7B68     		ldr	r3, [r7, #4]
 309 00f2 002B     		cmp	r3, #0
 310 00f4 1DDD     		ble	.L23
 113:.\motor.c     ****                 // WHAT HAPPENS IF WE OVERSHOOT? WILL IT GET FASTER AND FASTER GOING AWAY FROM THE 
 114:.\motor.c     ****           //if (abs2(distance_error) > MOTOR_FORWARD_ERROR_LIMIT && distance_error > 1)     
 115:.\motor.c     ****                 setSpeed(MBOTH, clip(STALL_SPEED, abs(delta_y_distance - desired_distance)/2, 255))
 311              		.loc 1 115 0 is_stmt 1
 312 00f6 414B     		ldr	r3, .L28+24
 313 00f8 1A68     		ldr	r2, [r3]
 314 00fa 3F4B     		ldr	r3, .L28+20
 315 00fc 1B68     		ldr	r3, [r3]
 316 00fe D31A     		subs	r3, r2, r3
 317 0100 002B     		cmp	r3, #0
 318 0102 B8BF     		it	lt
 319 0104 5B42     		rsblt	r3, r3, #0
 320 0106 DA0F     		lsrs	r2, r3, #31
 321 0108 1344     		add	r3, r3, r2
 322 010a 5B10     		asrs	r3, r3, #1
 323 010c 3C20     		movs	r0, #60
 324 010e 1946     		mov	r1, r3
 325 0110 FF22     		movs	r2, #255
 326 0112 FFF7FEFF 		bl	clip
 327 0116 0346     		mov	r3, r0
 328 0118 0320     		movs	r0, #3
 329 011a 1946     		mov	r1, r3
 330 011c FFF7FEFF 		bl	setSpeed
 116:.\motor.c     ****                 setForward(MBOTH);
 331              		.loc 1 116 0
 332 0120 0320     		movs	r0, #3
 333 0122 FFF7FEFF 		bl	setForward
 117:.\motor.c     ****                 currently_rotating = 0;
 334              		.loc 1 117 0
 335 0126 314B     		ldr	r3, .L28+8
 336 0128 0022     		movs	r2, #0
 337 012a 1A70     		strb	r2, [r3]
 118:.\motor.c     ****                 motor_end_state = MEND_S_DRIVING;
 338              		.loc 1 118 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 9


 339 012c 0223     		movs	r3, #2
 340 012e FB60     		str	r3, [r7, #12]
 119:.\motor.c     ****             } else {
 120:.\motor.c     ****                 setSpeed(MBOTH, 0);
 121:.\motor.c     ****                 setCoast(MBOTH);
 122:.\motor.c     ****                 motor_state = MOTOR_S_STOPPED;
 123:.\motor.c     ****                 motor_end_state = MEND_S_STOPPED;
 124:.\motor.c     ****                 currently_driving = 0;
 125:.\motor.c     ****             }
 126:.\motor.c     ****             break;
 341              		.loc 1 126 0
 342 0130 52E0     		b	.L19
 343              	.L23:
 120:.\motor.c     ****                 setSpeed(MBOTH, 0);
 344              		.loc 1 120 0
 345 0132 0320     		movs	r0, #3
 346 0134 0021     		movs	r1, #0
 347 0136 FFF7FEFF 		bl	setSpeed
 121:.\motor.c     ****                 setCoast(MBOTH);
 348              		.loc 1 121 0
 349 013a 0320     		movs	r0, #3
 350 013c FFF7FEFF 		bl	setCoast
 122:.\motor.c     ****                 motor_state = MOTOR_S_STOPPED;
 351              		.loc 1 122 0
 352 0140 2B4B     		ldr	r3, .L28+12
 353 0142 0022     		movs	r2, #0
 354 0144 1A70     		strb	r2, [r3]
 123:.\motor.c     ****                 motor_end_state = MEND_S_STOPPED;
 355              		.loc 1 123 0
 356 0146 0023     		movs	r3, #0
 357 0148 FB60     		str	r3, [r7, #12]
 124:.\motor.c     ****                 currently_driving = 0;
 358              		.loc 1 124 0
 359 014a 2A4B     		ldr	r3, .L28+16
 360 014c 0022     		movs	r2, #0
 361 014e 1A70     		strb	r2, [r3]
 362              		.loc 1 126 0
 363 0150 42E0     		b	.L19
 364              	.L21:
 127:.\motor.c     ****         case MOTOR_S_BACKWARD: 
 128:.\motor.c     ****             currently_driving = 1;
 365              		.loc 1 128 0
 366 0152 284B     		ldr	r3, .L28+16
 367 0154 0122     		movs	r2, #1
 368 0156 1A70     		strb	r2, [r3]
 129:.\motor.c     ****             distance_error = desired_distance - delta_y_distance;
 369              		.loc 1 129 0
 370 0158 274B     		ldr	r3, .L28+20
 371 015a 1A68     		ldr	r2, [r3]
 372 015c 274B     		ldr	r3, .L28+24
 373 015e 1B68     		ldr	r3, [r3]
 374 0160 D31A     		subs	r3, r2, r3
 375 0162 7B60     		str	r3, [r7, #4]
 130:.\motor.c     ****             if (abs2(distance_error) > MOTOR_FORWARD_ERROR_LIMIT && distance_error < 0){
 376              		.loc 1 130 0
 377 0164 7B68     		ldr	r3, [r7, #4]
 378 0166 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 10


 379 0168 1BB2     		sxth	r3, r3
 380 016a 1846     		mov	r0, r3
 381 016c FFF7FEFF 		bl	abs2
 382 0170 0346     		mov	r3, r0
 383 0172 642B     		cmp	r3, #100
 384 0174 20DD     		ble	.L25
 385              		.loc 1 130 0 is_stmt 0 discriminator 1
 386 0176 7B68     		ldr	r3, [r7, #4]
 387 0178 002B     		cmp	r3, #0
 388 017a 1DDA     		bge	.L25
 131:.\motor.c     ****                 // WHAT HAPPENS IF OVERSHOOT?
 132:.\motor.c     ****                 setSpeed(MBOTH, clip(STALL_SPEED, abs(delta_y_distance - desired_distance)/2, 255))
 389              		.loc 1 132 0 is_stmt 1
 390 017c 1F4B     		ldr	r3, .L28+24
 391 017e 1A68     		ldr	r2, [r3]
 392 0180 1D4B     		ldr	r3, .L28+20
 393 0182 1B68     		ldr	r3, [r3]
 394 0184 D31A     		subs	r3, r2, r3
 395 0186 002B     		cmp	r3, #0
 396 0188 B8BF     		it	lt
 397 018a 5B42     		rsblt	r3, r3, #0
 398 018c DA0F     		lsrs	r2, r3, #31
 399 018e 1344     		add	r3, r3, r2
 400 0190 5B10     		asrs	r3, r3, #1
 401 0192 3C20     		movs	r0, #60
 402 0194 1946     		mov	r1, r3
 403 0196 FF22     		movs	r2, #255
 404 0198 FFF7FEFF 		bl	clip
 405 019c 0346     		mov	r3, r0
 406 019e 0320     		movs	r0, #3
 407 01a0 1946     		mov	r1, r3
 408 01a2 FFF7FEFF 		bl	setSpeed
 133:.\motor.c     ****                 setReverse(MBOTH);
 409              		.loc 1 133 0
 410 01a6 0320     		movs	r0, #3
 411 01a8 FFF7FEFF 		bl	setReverse
 134:.\motor.c     ****                 currently_rotating = 0;
 412              		.loc 1 134 0
 413 01ac 0F4B     		ldr	r3, .L28+8
 414 01ae 0022     		movs	r2, #0
 415 01b0 1A70     		strb	r2, [r3]
 135:.\motor.c     ****                 motor_end_state = MEND_S_DRIVING;
 416              		.loc 1 135 0
 417 01b2 0223     		movs	r3, #2
 418 01b4 FB60     		str	r3, [r7, #12]
 136:.\motor.c     ****             } else {
 137:.\motor.c     ****                 setSpeed(MBOTH, 0);
 138:.\motor.c     ****                 setCoast(MBOTH);
 139:.\motor.c     ****                 currently_driving = 0;
 140:.\motor.c     ****                 motor_state = MOTOR_S_STOPPED;
 141:.\motor.c     ****                 motor_end_state = MEND_S_STOPPED;
 142:.\motor.c     ****             }
 143:.\motor.c     ****             break;
 419              		.loc 1 143 0
 420 01b6 0EE0     		b	.L27
 421              	.L25:
 137:.\motor.c     ****                 setSpeed(MBOTH, 0);
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 11


 422              		.loc 1 137 0
 423 01b8 0320     		movs	r0, #3
 424 01ba 0021     		movs	r1, #0
 425 01bc FFF7FEFF 		bl	setSpeed
 138:.\motor.c     ****                 setCoast(MBOTH);
 426              		.loc 1 138 0
 427 01c0 0320     		movs	r0, #3
 428 01c2 FFF7FEFF 		bl	setCoast
 139:.\motor.c     ****                 currently_driving = 0;
 429              		.loc 1 139 0
 430 01c6 0B4B     		ldr	r3, .L28+16
 431 01c8 0022     		movs	r2, #0
 432 01ca 1A70     		strb	r2, [r3]
 140:.\motor.c     ****                 motor_state = MOTOR_S_STOPPED;
 433              		.loc 1 140 0
 434 01cc 084B     		ldr	r3, .L28+12
 435 01ce 0022     		movs	r2, #0
 436 01d0 1A70     		strb	r2, [r3]
 141:.\motor.c     ****                 motor_end_state = MEND_S_STOPPED;
 437              		.loc 1 141 0
 438 01d2 0023     		movs	r3, #0
 439 01d4 FB60     		str	r3, [r7, #12]
 440              	.L27:
 441              		.loc 1 143 0
 442 01d6 00BF     		nop
 443              	.L19:
 144:.\motor.c     ****     }
 145:.\motor.c     ****     return motor_end_state;
 444              		.loc 1 145 0
 445 01d8 FB68     		ldr	r3, [r7, #12]
 446              	.L18:
 146:.\motor.c     **** }
 447              		.loc 1 146 0
 448 01da 1846     		mov	r0, r3
 449 01dc 1037     		adds	r7, r7, #16
 450 01de BD46     		mov	sp, r7
 451              		@ sp needed
 452 01e0 80BD     		pop	{r7, pc}
 453              	.L29:
 454 01e2 00BF     		.align	2
 455              	.L28:
 456 01e4 00000000 		.word	desired_heading
 457 01e8 00000000 		.word	compass_heading
 458 01ec 00000000 		.word	currently_rotating
 459 01f0 00000000 		.word	motor_state
 460 01f4 00000000 		.word	currently_driving
 461 01f8 00000000 		.word	desired_distance
 462 01fc 00000000 		.word	delta_y_distance
 463              		.cfi_endproc
 464              	.LFE66:
 465              		.size	control_motors, .-control_motors
 466              		.section	.text.stop_driving,"ax",%progbits
 467              		.align	2
 468              		.global	stop_driving
 469              		.thumb
 470              		.thumb_func
 471              		.type	stop_driving, %function
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 12


 472              	stop_driving:
 473              	.LFB67:
 147:.\motor.c     **** 
 148:.\motor.c     **** void stop_driving(){
 474              		.loc 1 148 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 1, uses_anonymous_args = 0
 478              		@ link register save eliminated.
 479 0000 80B4     		push	{r7}
 480              		.cfi_def_cfa_offset 4
 481              		.cfi_offset 7, -4
 482 0002 00AF     		add	r7, sp, #0
 483              		.cfi_def_cfa_register 7
 149:.\motor.c     ****     delta_y_distance = desired_distance;
 484              		.loc 1 149 0
 485 0004 034B     		ldr	r3, .L31
 486 0006 1A68     		ldr	r2, [r3]
 487 0008 034B     		ldr	r3, .L31+4
 488 000a 1A60     		str	r2, [r3]
 150:.\motor.c     **** }
 489              		.loc 1 150 0
 490 000c BD46     		mov	sp, r7
 491              		@ sp needed
 492 000e 5DF8047B 		ldr	r7, [sp], #4
 493 0012 7047     		bx	lr
 494              	.L32:
 495              		.align	2
 496              	.L31:
 497 0014 00000000 		.word	desired_distance
 498 0018 00000000 		.word	delta_y_distance
 499              		.cfi_endproc
 500              	.LFE67:
 501              		.size	stop_driving, .-stop_driving
 502              		.global	__aeabi_i2d
 503              		.global	__aeabi_dmul
 504              		.global	__aeabi_ddiv
 505              		.global	__aeabi_dadd
 506              		.global	__aeabi_d2iz
 507              		.section	.text.goto_position,"ax",%progbits
 508              		.align	2
 509              		.global	goto_position
 510              		.thumb
 511              		.thumb_func
 512              		.type	goto_position, %function
 513              	goto_position:
 514              	.LFB68:
 151:.\motor.c     **** 
 152:.\motor.c     **** /*
 153:.\motor.c     ****  * Makes the robot drive from current location to the specified x, y position
 154:.\motor.c     ****  */
 155:.\motor.c     **** void goto_position(int32 x, int32 y){
 515              		.loc 1 155 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 24
 518              		@ frame_needed = 1, uses_anonymous_args = 0
 519 0000 B0B5     		push	{r4, r5, r7, lr}
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 13


 520              		.cfi_def_cfa_offset 16
 521              		.cfi_offset 4, -16
 522              		.cfi_offset 5, -12
 523              		.cfi_offset 7, -8
 524              		.cfi_offset 14, -4
 525 0002 86B0     		sub	sp, sp, #24
 526              		.cfi_def_cfa_offset 40
 527 0004 00AF     		add	r7, sp, #0
 528              		.cfi_def_cfa_register 7
 529 0006 7860     		str	r0, [r7, #4]
 530 0008 3960     		str	r1, [r7]
 156:.\motor.c     ****     start_x = location.x;
 531              		.loc 1 156 0
 532 000a 394B     		ldr	r3, .L34+8
 533 000c 1A68     		ldr	r2, [r3]
 534 000e 394B     		ldr	r3, .L34+12
 535 0010 1A60     		str	r2, [r3]
 157:.\motor.c     ****     start_y = location.y;
 536              		.loc 1 157 0
 537 0012 374B     		ldr	r3, .L34+8
 538 0014 5A68     		ldr	r2, [r3, #4]
 539 0016 384B     		ldr	r3, .L34+16
 540 0018 1A60     		str	r2, [r3]
 158:.\motor.c     ****     end_x = x;
 541              		.loc 1 158 0
 542 001a 384B     		ldr	r3, .L34+20
 543 001c 7A68     		ldr	r2, [r7, #4]
 544 001e 1A60     		str	r2, [r3]
 159:.\motor.c     ****     end_y = y;
 545              		.loc 1 159 0
 546 0020 374B     		ldr	r3, .L34+24
 547 0022 3A68     		ldr	r2, [r7]
 548 0024 1A60     		str	r2, [r3]
 160:.\motor.c     ****     //Calculate the angle of the line we need to run along
 161:.\motor.c     ****     int32 dx = end_x - start_x;
 549              		.loc 1 161 0
 550 0026 354B     		ldr	r3, .L34+20
 551 0028 1A68     		ldr	r2, [r3]
 552 002a 324B     		ldr	r3, .L34+12
 553 002c 1B68     		ldr	r3, [r3]
 554 002e D31A     		subs	r3, r2, r3
 555 0030 7B61     		str	r3, [r7, #20]
 162:.\motor.c     ****     int32 dy = end_y - start_y;
 556              		.loc 1 162 0
 557 0032 334B     		ldr	r3, .L34+24
 558 0034 1A68     		ldr	r2, [r3]
 559 0036 304B     		ldr	r3, .L34+16
 560 0038 1B68     		ldr	r3, [r3]
 561 003a D31A     		subs	r3, r2, r3
 562 003c 3B61     		str	r3, [r7, #16]
 163:.\motor.c     ****     setHeading(atan2((double) dy, (double) dx) * 180.0/M_PI + 180.0);
 563              		.loc 1 163 0
 564 003e 3869     		ldr	r0, [r7, #16]
 565 0040 FFF7FEFF 		bl	__aeabi_i2d
 566 0044 0446     		mov	r4, r0
 567 0046 0D46     		mov	r5, r1
 568 0048 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 14


 569 004a FFF7FEFF 		bl	__aeabi_i2d
 570 004e 0246     		mov	r2, r0
 571 0050 0B46     		mov	r3, r1
 572 0052 2046     		mov	r0, r4
 573 0054 2946     		mov	r1, r5
 574 0056 FFF7FEFF 		bl	atan2
 575 005a 0246     		mov	r2, r0
 576 005c 0B46     		mov	r3, r1
 577 005e 1046     		mov	r0, r2
 578 0060 1946     		mov	r1, r3
 579 0062 4FF00002 		mov	r2, #0
 580 0066 274B     		ldr	r3, .L34+28
 581 0068 FFF7FEFF 		bl	__aeabi_dmul
 582 006c 0246     		mov	r2, r0
 583 006e 0B46     		mov	r3, r1
 584 0070 1046     		mov	r0, r2
 585 0072 1946     		mov	r1, r3
 586 0074 1CA3     		adr	r3, .L34
 587 0076 D3E90023 		ldrd	r2, [r3]
 588 007a FFF7FEFF 		bl	__aeabi_ddiv
 589 007e 0246     		mov	r2, r0
 590 0080 0B46     		mov	r3, r1
 591 0082 1046     		mov	r0, r2
 592 0084 1946     		mov	r1, r3
 593 0086 4FF00002 		mov	r2, #0
 594 008a 1E4B     		ldr	r3, .L34+28
 595 008c FFF7FEFF 		bl	__aeabi_dadd
 596 0090 0246     		mov	r2, r0
 597 0092 0B46     		mov	r3, r1
 598 0094 1046     		mov	r0, r2
 599 0096 1946     		mov	r1, r3
 600 0098 FFF7FEFF 		bl	__aeabi_d2iz
 601 009c 0346     		mov	r3, r0
 602 009e 9BB2     		uxth	r3, r3
 603 00a0 1BB2     		sxth	r3, r3
 604 00a2 1846     		mov	r0, r3
 605 00a4 FFF7FEFF 		bl	setHeading
 164:.\motor.c     ****     int32 d = sqrt(dx*dx + dy*dy);
 606              		.loc 1 164 0
 607 00a8 7B69     		ldr	r3, [r7, #20]
 608 00aa 7A69     		ldr	r2, [r7, #20]
 609 00ac 02FB03F2 		mul	r2, r2, r3
 610 00b0 3B69     		ldr	r3, [r7, #16]
 611 00b2 3969     		ldr	r1, [r7, #16]
 612 00b4 01FB03F3 		mul	r3, r1, r3
 613 00b8 1344     		add	r3, r3, r2
 614 00ba 1846     		mov	r0, r3
 615 00bc FFF7FEFF 		bl	__aeabi_i2d
 616 00c0 0246     		mov	r2, r0
 617 00c2 0B46     		mov	r3, r1
 618 00c4 1046     		mov	r0, r2
 619 00c6 1946     		mov	r1, r3
 620 00c8 FFF7FEFF 		bl	sqrt
 621 00cc 0246     		mov	r2, r0
 622 00ce 0B46     		mov	r3, r1
 623 00d0 1046     		mov	r0, r2
 624 00d2 1946     		mov	r1, r3
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 15


 625 00d4 FFF7FEFF 		bl	__aeabi_d2iz
 626 00d8 0346     		mov	r3, r0
 627 00da FB60     		str	r3, [r7, #12]
 165:.\motor.c     ****     go_forward(d);
 628              		.loc 1 165 0
 629 00dc F868     		ldr	r0, [r7, #12]
 630 00de FFF7FEFF 		bl	go_forward
 166:.\motor.c     **** }
 631              		.loc 1 166 0
 632 00e2 1837     		adds	r7, r7, #24
 633 00e4 BD46     		mov	sp, r7
 634              		@ sp needed
 635 00e6 B0BD     		pop	{r4, r5, r7, pc}
 636              	.L35:
 637              		.align	3
 638              	.L34:
 639 00e8 182D4454 		.word	1413754136
 640 00ec FB210940 		.word	1074340347
 641 00f0 00000000 		.word	location
 642 00f4 00000000 		.word	start_x
 643 00f8 00000000 		.word	start_y
 644 00fc 00000000 		.word	end_x
 645 0100 00000000 		.word	end_y
 646 0104 00806640 		.word	1080459264
 647              		.cfi_endproc
 648              	.LFE68:
 649              		.size	goto_position, .-goto_position
 650              		.section	.text.go_forward,"ax",%progbits
 651              		.align	2
 652              		.global	go_forward
 653              		.thumb
 654              		.thumb_func
 655              		.type	go_forward, %function
 656              	go_forward:
 657              	.LFB69:
 167:.\motor.c     **** 
 168:.\motor.c     **** 
 169:.\motor.c     **** /* 
 170:.\motor.c     ****  * Makes the robot drive forward *distance* centimeters
 171:.\motor.c     ****  */
 172:.\motor.c     **** void go_forward(int32 distance){
 658              		.loc 1 172 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 8
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662 0000 80B5     		push	{r7, lr}
 663              		.cfi_def_cfa_offset 8
 664              		.cfi_offset 7, -8
 665              		.cfi_offset 14, -4
 666 0002 82B0     		sub	sp, sp, #8
 667              		.cfi_def_cfa_offset 16
 668 0004 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
 670 0006 7860     		str	r0, [r7, #4]
 173:.\motor.c     ****     reset_delta_y_distance();
 671              		.loc 1 173 0
 672 0008 FFF7FEFF 		bl	reset_delta_y_distance
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 16


 174:.\motor.c     ****     desired_distance = distance;
 673              		.loc 1 174 0
 674 000c 044B     		ldr	r3, .L37
 675 000e 7A68     		ldr	r2, [r7, #4]
 676 0010 1A60     		str	r2, [r3]
 175:.\motor.c     ****     motor_state = MOTOR_S_FORWARD;
 677              		.loc 1 175 0
 678 0012 044B     		ldr	r3, .L37+4
 679 0014 0222     		movs	r2, #2
 680 0016 1A70     		strb	r2, [r3]
 176:.\motor.c     **** }
 681              		.loc 1 176 0
 682 0018 0837     		adds	r7, r7, #8
 683 001a BD46     		mov	sp, r7
 684              		@ sp needed
 685 001c 80BD     		pop	{r7, pc}
 686              	.L38:
 687 001e 00BF     		.align	2
 688              	.L37:
 689 0020 00000000 		.word	desired_distance
 690 0024 00000000 		.word	motor_state
 691              		.cfi_endproc
 692              	.LFE69:
 693              		.size	go_forward, .-go_forward
 694              		.section	.text.go_backward,"ax",%progbits
 695              		.align	2
 696              		.global	go_backward
 697              		.thumb
 698              		.thumb_func
 699              		.type	go_backward, %function
 700              	go_backward:
 701              	.LFB70:
 177:.\motor.c     **** 
 178:.\motor.c     **** /*
 179:.\motor.c     ****  * Makes the robot drive backward *distance* centimeters
 180:.\motor.c     ****  */
 181:.\motor.c     **** void go_backward(int32 distance){
 702              		.loc 1 181 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 8
 705              		@ frame_needed = 1, uses_anonymous_args = 0
 706 0000 80B5     		push	{r7, lr}
 707              		.cfi_def_cfa_offset 8
 708              		.cfi_offset 7, -8
 709              		.cfi_offset 14, -4
 710 0002 82B0     		sub	sp, sp, #8
 711              		.cfi_def_cfa_offset 16
 712 0004 00AF     		add	r7, sp, #0
 713              		.cfi_def_cfa_register 7
 714 0006 7860     		str	r0, [r7, #4]
 182:.\motor.c     ****     reset_delta_y_distance();
 715              		.loc 1 182 0
 716 0008 FFF7FEFF 		bl	reset_delta_y_distance
 183:.\motor.c     ****     desired_distance = distance;
 717              		.loc 1 183 0
 718 000c 044B     		ldr	r3, .L40
 719 000e 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 17


 720 0010 1A60     		str	r2, [r3]
 184:.\motor.c     ****     motor_state = MOTOR_S_BACKWARD;
 721              		.loc 1 184 0
 722 0012 044B     		ldr	r3, .L40+4
 723 0014 0322     		movs	r2, #3
 724 0016 1A70     		strb	r2, [r3]
 185:.\motor.c     **** }
 725              		.loc 1 185 0
 726 0018 0837     		adds	r7, r7, #8
 727 001a BD46     		mov	sp, r7
 728              		@ sp needed
 729 001c 80BD     		pop	{r7, pc}
 730              	.L41:
 731 001e 00BF     		.align	2
 732              	.L40:
 733 0020 00000000 		.word	desired_distance
 734 0024 00000000 		.word	motor_state
 735              		.cfi_endproc
 736              	.LFE70:
 737              		.size	go_backward, .-go_backward
 738              		.section	.text.rotate_degrees,"ax",%progbits
 739              		.align	2
 740              		.global	rotate_degrees
 741              		.thumb
 742              		.thumb_func
 743              		.type	rotate_degrees, %function
 744              	rotate_degrees:
 745              	.LFB71:
 186:.\motor.c     **** 
 187:.\motor.c     **** /*
 188:.\motor.c     ****  * Makes the robot rotate *angle* degrees.
 189:.\motor.c     ****  * angle > 0 rotates right, angle < 0 rotates left
 190:.\motor.c     ****  */
 191:.\motor.c     **** void rotate_degrees(int16 angle){
 746              		.loc 1 191 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 8
 749              		@ frame_needed = 1, uses_anonymous_args = 0
 750              		@ link register save eliminated.
 751 0000 80B4     		push	{r7}
 752              		.cfi_def_cfa_offset 4
 753              		.cfi_offset 7, -4
 754 0002 83B0     		sub	sp, sp, #12
 755              		.cfi_def_cfa_offset 16
 756 0004 00AF     		add	r7, sp, #0
 757              		.cfi_def_cfa_register 7
 758 0006 0346     		mov	r3, r0
 759 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 192:.\motor.c     ****     desired_heading += angle;
 760              		.loc 1 192 0
 761 000a 164B     		ldr	r3, .L45
 762 000c 1B88     		ldrh	r3, [r3]
 763 000e 9AB2     		uxth	r2, r3
 764 0010 FB88     		ldrh	r3, [r7, #6]
 765 0012 1344     		add	r3, r3, r2
 766 0014 9BB2     		uxth	r3, r3
 767 0016 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 18


 768 0018 124B     		ldr	r3, .L45
 769 001a 1A80     		strh	r2, [r3]	@ movhi
 193:.\motor.c     ****     if (desired_heading > 360){
 770              		.loc 1 193 0
 771 001c 114B     		ldr	r3, .L45
 772 001e 1B88     		ldrh	r3, [r3]
 773 0020 1BB2     		sxth	r3, r3
 774 0022 B3F5B47F 		cmp	r3, #360
 775 0026 09DD     		ble	.L43
 194:.\motor.c     ****         desired_heading -= 360;
 776              		.loc 1 194 0
 777 0028 0E4B     		ldr	r3, .L45
 778 002a 1B88     		ldrh	r3, [r3]
 779 002c 9BB2     		uxth	r3, r3
 780 002e A3F5B473 		sub	r3, r3, #360
 781 0032 9BB2     		uxth	r3, r3
 782 0034 9AB2     		uxth	r2, r3
 783 0036 0B4B     		ldr	r3, .L45
 784 0038 1A80     		strh	r2, [r3]	@ movhi
 785 003a 0DE0     		b	.L42
 786              	.L43:
 195:.\motor.c     ****     } else if (desired_heading < 0){
 787              		.loc 1 195 0
 788 003c 094B     		ldr	r3, .L45
 789 003e 1B88     		ldrh	r3, [r3]
 790 0040 1BB2     		sxth	r3, r3
 791 0042 002B     		cmp	r3, #0
 792 0044 08DA     		bge	.L42
 196:.\motor.c     ****         desired_heading += 360;
 793              		.loc 1 196 0
 794 0046 074B     		ldr	r3, .L45
 795 0048 1B88     		ldrh	r3, [r3]
 796 004a 9BB2     		uxth	r3, r3
 797 004c 03F5B473 		add	r3, r3, #360
 798 0050 9BB2     		uxth	r3, r3
 799 0052 9AB2     		uxth	r2, r3
 800 0054 034B     		ldr	r3, .L45
 801 0056 1A80     		strh	r2, [r3]	@ movhi
 802              	.L42:
 197:.\motor.c     ****     }
 198:.\motor.c     **** }
 803              		.loc 1 198 0
 804 0058 0C37     		adds	r7, r7, #12
 805 005a BD46     		mov	sp, r7
 806              		@ sp needed
 807 005c 5DF8047B 		ldr	r7, [sp], #4
 808 0060 7047     		bx	lr
 809              	.L46:
 810 0062 00BF     		.align	2
 811              	.L45:
 812 0064 00000000 		.word	desired_heading
 813              		.cfi_endproc
 814              	.LFE71:
 815              		.size	rotate_degrees, .-rotate_degrees
 816              		.section	.text.setHeading,"ax",%progbits
 817              		.align	2
 818              		.global	setHeading
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 19


 819              		.thumb
 820              		.thumb_func
 821              		.type	setHeading, %function
 822              	setHeading:
 823              	.LFB72:
 199:.\motor.c     **** 
 200:.\motor.c     **** /* 
 201:.\motor.c     ****  * Sets the robots heading to *new_heading*
 202:.\motor.c     ****  */
 203:.\motor.c     **** void setHeading(int16 new_heading){
 824              		.loc 1 203 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 8
 827              		@ frame_needed = 1, uses_anonymous_args = 0
 828              		@ link register save eliminated.
 829 0000 80B4     		push	{r7}
 830              		.cfi_def_cfa_offset 4
 831              		.cfi_offset 7, -4
 832 0002 83B0     		sub	sp, sp, #12
 833              		.cfi_def_cfa_offset 16
 834 0004 00AF     		add	r7, sp, #0
 835              		.cfi_def_cfa_register 7
 836 0006 0346     		mov	r3, r0
 837 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 204:.\motor.c     ****     desired_heading = new_heading;
 838              		.loc 1 204 0
 839 000a 044B     		ldr	r3, .L48
 840 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 841 000e 1A80     		strh	r2, [r3]	@ movhi
 205:.\motor.c     **** }
 842              		.loc 1 205 0
 843 0010 0C37     		adds	r7, r7, #12
 844 0012 BD46     		mov	sp, r7
 845              		@ sp needed
 846 0014 5DF8047B 		ldr	r7, [sp], #4
 847 0018 7047     		bx	lr
 848              	.L49:
 849 001a 00BF     		.align	2
 850              	.L48:
 851 001c 00000000 		.word	desired_heading
 852              		.cfi_endproc
 853              	.LFE72:
 854              		.size	setHeading, .-setHeading
 855              		.section	.text.rotate_left,"ax",%progbits
 856              		.align	2
 857              		.global	rotate_left
 858              		.thumb
 859              		.thumb_func
 860              		.type	rotate_left, %function
 861              	rotate_left:
 862              	.LFB73:
 206:.\motor.c     **** 
 207:.\motor.c     **** 
 208:.\motor.c     **** /* 
 209:.\motor.c     ****  * Sets the motors to rotate the robot left
 210:.\motor.c     ****  */
 211:.\motor.c     **** void rotate_left(int speed){
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 20


 863              		.loc 1 211 0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 8
 866              		@ frame_needed = 1, uses_anonymous_args = 0
 867 0000 80B5     		push	{r7, lr}
 868              		.cfi_def_cfa_offset 8
 869              		.cfi_offset 7, -8
 870              		.cfi_offset 14, -4
 871 0002 82B0     		sub	sp, sp, #8
 872              		.cfi_def_cfa_offset 16
 873 0004 00AF     		add	r7, sp, #0
 874              		.cfi_def_cfa_register 7
 875 0006 7860     		str	r0, [r7, #4]
 212:.\motor.c     ****     setForward(MRIGHT);
 876              		.loc 1 212 0
 877 0008 0220     		movs	r0, #2
 878 000a FFF7FEFF 		bl	setForward
 213:.\motor.c     ****     setReverse(MLEFT);
 879              		.loc 1 213 0
 880 000e 0120     		movs	r0, #1
 881 0010 FFF7FEFF 		bl	setReverse
 214:.\motor.c     ****     setSpeed(MBOTH, speed);
 882              		.loc 1 214 0
 883 0014 7B68     		ldr	r3, [r7, #4]
 884 0016 DBB2     		uxtb	r3, r3
 885 0018 0320     		movs	r0, #3
 886 001a 1946     		mov	r1, r3
 887 001c FFF7FEFF 		bl	setSpeed
 215:.\motor.c     **** }
 888              		.loc 1 215 0
 889 0020 0837     		adds	r7, r7, #8
 890 0022 BD46     		mov	sp, r7
 891              		@ sp needed
 892 0024 80BD     		pop	{r7, pc}
 893              		.cfi_endproc
 894              	.LFE73:
 895              		.size	rotate_left, .-rotate_left
 896 0026 00BF     		.section	.text.rotate_right,"ax",%progbits
 897              		.align	2
 898              		.global	rotate_right
 899              		.thumb
 900              		.thumb_func
 901              		.type	rotate_right, %function
 902              	rotate_right:
 903              	.LFB74:
 216:.\motor.c     **** 
 217:.\motor.c     **** /*
 218:.\motor.c     ****  * Sets the motors to rotate the robot right at *speed*
 219:.\motor.c     ****  */
 220:.\motor.c     **** void rotate_right(int speed){
 904              		.loc 1 220 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 8
 907              		@ frame_needed = 1, uses_anonymous_args = 0
 908 0000 80B5     		push	{r7, lr}
 909              		.cfi_def_cfa_offset 8
 910              		.cfi_offset 7, -8
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 21


 911              		.cfi_offset 14, -4
 912 0002 82B0     		sub	sp, sp, #8
 913              		.cfi_def_cfa_offset 16
 914 0004 00AF     		add	r7, sp, #0
 915              		.cfi_def_cfa_register 7
 916 0006 7860     		str	r0, [r7, #4]
 221:.\motor.c     ****     setForward(MLEFT);
 917              		.loc 1 221 0
 918 0008 0120     		movs	r0, #1
 919 000a FFF7FEFF 		bl	setForward
 222:.\motor.c     ****     setReverse(MRIGHT);
 920              		.loc 1 222 0
 921 000e 0220     		movs	r0, #2
 922 0010 FFF7FEFF 		bl	setReverse
 223:.\motor.c     ****     setSpeed(MBOTH, speed);
 923              		.loc 1 223 0
 924 0014 7B68     		ldr	r3, [r7, #4]
 925 0016 DBB2     		uxtb	r3, r3
 926 0018 0320     		movs	r0, #3
 927 001a 1946     		mov	r1, r3
 928 001c FFF7FEFF 		bl	setSpeed
 224:.\motor.c     **** }
 929              		.loc 1 224 0
 930 0020 0837     		adds	r7, r7, #8
 931 0022 BD46     		mov	sp, r7
 932              		@ sp needed
 933 0024 80BD     		pop	{r7, pc}
 934              		.cfi_endproc
 935              	.LFE74:
 936              		.size	rotate_right, .-rotate_right
 937 0026 00BF     		.section	.text.start_motors,"ax",%progbits
 938              		.align	2
 939              		.global	start_motors
 940              		.thumb
 941              		.thumb_func
 942              		.type	start_motors, %function
 943              	start_motors:
 944              	.LFB75:
 225:.\motor.c     **** 
 226:.\motor.c     **** 
 227:.\motor.c     **** /*
 228:.\motor.c     ****  * Initializes the motor PWM modules and sets the motors to stopped
 229:.\motor.c     ****  */
 230:.\motor.c     **** void start_motors(){
 945              		.loc 1 230 0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 1, uses_anonymous_args = 0
 949 0000 80B5     		push	{r7, lr}
 950              		.cfi_def_cfa_offset 8
 951              		.cfi_offset 7, -8
 952              		.cfi_offset 14, -4
 953 0002 00AF     		add	r7, sp, #0
 954              		.cfi_def_cfa_register 7
 231:.\motor.c     ****     MOTOR_L_Start();
 955              		.loc 1 231 0
 956 0004 FFF7FEFF 		bl	MOTOR_L_Start
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 22


 232:.\motor.c     ****     MLIN1_Write(0);
 957              		.loc 1 232 0
 958 0008 0020     		movs	r0, #0
 959 000a FFF7FEFF 		bl	MLIN1_Write
 233:.\motor.c     ****     MLIN2_Write(0);
 960              		.loc 1 233 0
 961 000e 0020     		movs	r0, #0
 962 0010 FFF7FEFF 		bl	MLIN2_Write
 234:.\motor.c     ****     MOTOR_L_WriteCompare(0);
 963              		.loc 1 234 0
 964 0014 0020     		movs	r0, #0
 965 0016 FFF7FEFF 		bl	MOTOR_L_WriteCompare
 235:.\motor.c     ****        
 236:.\motor.c     ****     MOTOR_R_Start();
 966              		.loc 1 236 0
 967 001a FFF7FEFF 		bl	MOTOR_R_Start
 237:.\motor.c     ****     MRIN1_Write(0);
 968              		.loc 1 237 0
 969 001e 0020     		movs	r0, #0
 970 0020 FFF7FEFF 		bl	MRIN1_Write
 238:.\motor.c     ****     MRIN2_Write(0);
 971              		.loc 1 238 0
 972 0024 0020     		movs	r0, #0
 973 0026 FFF7FEFF 		bl	MRIN2_Write
 239:.\motor.c     ****     MOTOR_R_WriteCompare(0);
 974              		.loc 1 239 0
 975 002a 0020     		movs	r0, #0
 976 002c FFF7FEFF 		bl	MOTOR_R_WriteCompare
 240:.\motor.c     **** }
 977              		.loc 1 240 0
 978 0030 80BD     		pop	{r7, pc}
 979              		.cfi_endproc
 980              	.LFE75:
 981              		.size	start_motors, .-start_motors
 982 0032 00BF     		.section	.text.setSpeed,"ax",%progbits
 983              		.align	2
 984              		.global	setSpeed
 985              		.thumb
 986              		.thumb_func
 987              		.type	setSpeed, %function
 988              	setSpeed:
 989              	.LFB76:
 241:.\motor.c     **** 
 242:.\motor.c     **** 
 243:.\motor.c     **** /*
 244:.\motor.c     ****  * Set *motor* speed to *speed*
 245:.\motor.c     ****  * Speed between 0 and 255. Note that the motors won't start to actually push
 246:.\motor.c     ****  * the robot forward til around 100
 247:.\motor.c     ****  */ 
 248:.\motor.c     **** void setSpeed(uint8 motor, uint8 speed){
 990              		.loc 1 248 0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 8
 993              		@ frame_needed = 1, uses_anonymous_args = 0
 994 0000 80B5     		push	{r7, lr}
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 7, -8
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 23


 997              		.cfi_offset 14, -4
 998 0002 82B0     		sub	sp, sp, #8
 999              		.cfi_def_cfa_offset 16
 1000 0004 00AF     		add	r7, sp, #0
 1001              		.cfi_def_cfa_register 7
 1002 0006 0246     		mov	r2, r0
 1003 0008 0B46     		mov	r3, r1
 1004 000a FA71     		strb	r2, [r7, #7]
 1005 000c BB71     		strb	r3, [r7, #6]
 249:.\motor.c     ****     /* Set bit 1 of motor to select motor 1 
 250:.\motor.c     ****      * Set bit 2 of motor to select motor 2
 251:.\motor.c     ****      */
 252:.\motor.c     ****     if (motor & MLEFT){ //Slow down the left motor because it tends to be faster
 1006              		.loc 1 252 0
 1007 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1008 0010 03F00103 		and	r3, r3, #1
 1009 0014 002B     		cmp	r3, #0
 1010 0016 03D0     		beq	.L54
 253:.\motor.c     ****         MOTOR_L_WriteCompare(speed - LEFT_MOTOR_SPEED_CORRECTION);
 1011              		.loc 1 253 0
 1012 0018 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1013 001a 1846     		mov	r0, r3
 1014 001c FFF7FEFF 		bl	MOTOR_L_WriteCompare
 1015              	.L54:
 254:.\motor.c     ****     }
 255:.\motor.c     ****     
 256:.\motor.c     ****     if (motor & MRIGHT){
 1016              		.loc 1 256 0
 1017 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1018 0022 03F00203 		and	r3, r3, #2
 1019 0026 002B     		cmp	r3, #0
 1020 0028 03D0     		beq	.L53
 257:.\motor.c     ****         MOTOR_R_WriteCompare(speed);
 1021              		.loc 1 257 0
 1022 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1023 002c 1846     		mov	r0, r3
 1024 002e FFF7FEFF 		bl	MOTOR_R_WriteCompare
 1025              	.L53:
 258:.\motor.c     ****     }
 259:.\motor.c     **** }
 1026              		.loc 1 259 0
 1027 0032 0837     		adds	r7, r7, #8
 1028 0034 BD46     		mov	sp, r7
 1029              		@ sp needed
 1030 0036 80BD     		pop	{r7, pc}
 1031              		.cfi_endproc
 1032              	.LFE76:
 1033              		.size	setSpeed, .-setSpeed
 1034              		.section	.text.setCoast,"ax",%progbits
 1035              		.align	2
 1036              		.global	setCoast
 1037              		.thumb
 1038              		.thumb_func
 1039              		.type	setCoast, %function
 1040              	setCoast:
 1041              	.LFB77:
 260:.\motor.c     **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 24


 261:.\motor.c     **** 
 262:.\motor.c     **** /*
 263:.\motor.c     ****  * Set *motor* to coast
 264:.\motor.c     ****  */ 
 265:.\motor.c     **** void setCoast(uint8 motor){
 1042              		.loc 1 265 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 8
 1045              		@ frame_needed = 1, uses_anonymous_args = 0
 1046 0000 80B5     		push	{r7, lr}
 1047              		.cfi_def_cfa_offset 8
 1048              		.cfi_offset 7, -8
 1049              		.cfi_offset 14, -4
 1050 0002 82B0     		sub	sp, sp, #8
 1051              		.cfi_def_cfa_offset 16
 1052 0004 00AF     		add	r7, sp, #0
 1053              		.cfi_def_cfa_register 7
 1054 0006 0346     		mov	r3, r0
 1055 0008 FB71     		strb	r3, [r7, #7]
 266:.\motor.c     ****         if (motor & MLEFT){
 1056              		.loc 1 266 0
 1057 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1058 000c 03F00103 		and	r3, r3, #1
 1059 0010 002B     		cmp	r3, #0
 1060 0012 05D0     		beq	.L57
 267:.\motor.c     ****         MLIN1_Write(0);
 1061              		.loc 1 267 0
 1062 0014 0020     		movs	r0, #0
 1063 0016 FFF7FEFF 		bl	MLIN1_Write
 268:.\motor.c     ****         MLIN2_Write(0);
 1064              		.loc 1 268 0
 1065 001a 0020     		movs	r0, #0
 1066 001c FFF7FEFF 		bl	MLIN2_Write
 1067              	.L57:
 269:.\motor.c     ****     }
 270:.\motor.c     ****     
 271:.\motor.c     ****     if (motor & MRIGHT){
 1068              		.loc 1 271 0
 1069 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1070 0022 03F00203 		and	r3, r3, #2
 1071 0026 002B     		cmp	r3, #0
 1072 0028 05D0     		beq	.L56
 272:.\motor.c     ****         MRIN1_Write(0);
 1073              		.loc 1 272 0
 1074 002a 0020     		movs	r0, #0
 1075 002c FFF7FEFF 		bl	MRIN1_Write
 273:.\motor.c     ****         MRIN2_Write(0);
 1076              		.loc 1 273 0
 1077 0030 0020     		movs	r0, #0
 1078 0032 FFF7FEFF 		bl	MRIN2_Write
 1079              	.L56:
 274:.\motor.c     ****     }
 275:.\motor.c     **** }
 1080              		.loc 1 275 0
 1081 0036 0837     		adds	r7, r7, #8
 1082 0038 BD46     		mov	sp, r7
 1083              		@ sp needed
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 25


 1084 003a 80BD     		pop	{r7, pc}
 1085              		.cfi_endproc
 1086              	.LFE77:
 1087              		.size	setCoast, .-setCoast
 1088              		.section	.text.setForward,"ax",%progbits
 1089              		.align	2
 1090              		.global	setForward
 1091              		.thumb
 1092              		.thumb_func
 1093              		.type	setForward, %function
 1094              	setForward:
 1095              	.LFB78:
 276:.\motor.c     **** 
 277:.\motor.c     **** 
 278:.\motor.c     **** /*
 279:.\motor.c     ****  * Set *motor* to forward drive
 280:.\motor.c     ****  */ 
 281:.\motor.c     **** void setForward(uint8 motor){
 1096              		.loc 1 281 0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 8
 1099              		@ frame_needed = 1, uses_anonymous_args = 0
 1100 0000 80B5     		push	{r7, lr}
 1101              		.cfi_def_cfa_offset 8
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 14, -4
 1104 0002 82B0     		sub	sp, sp, #8
 1105              		.cfi_def_cfa_offset 16
 1106 0004 00AF     		add	r7, sp, #0
 1107              		.cfi_def_cfa_register 7
 1108 0006 0346     		mov	r3, r0
 1109 0008 FB71     		strb	r3, [r7, #7]
 282:.\motor.c     ****     if (motor & MLEFT){
 1110              		.loc 1 282 0
 1111 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1112 000c 03F00103 		and	r3, r3, #1
 1113 0010 002B     		cmp	r3, #0
 1114 0012 05D0     		beq	.L60
 283:.\motor.c     ****         MLIN1_Write(1);
 1115              		.loc 1 283 0
 1116 0014 0120     		movs	r0, #1
 1117 0016 FFF7FEFF 		bl	MLIN1_Write
 284:.\motor.c     ****         MLIN2_Write(0);
 1118              		.loc 1 284 0
 1119 001a 0020     		movs	r0, #0
 1120 001c FFF7FEFF 		bl	MLIN2_Write
 1121              	.L60:
 285:.\motor.c     ****     }
 286:.\motor.c     ****     
 287:.\motor.c     ****     if (motor & MRIGHT){
 1122              		.loc 1 287 0
 1123 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1124 0022 03F00203 		and	r3, r3, #2
 1125 0026 002B     		cmp	r3, #0
 1126 0028 05D0     		beq	.L59
 288:.\motor.c     ****         MRIN1_Write(1);
 1127              		.loc 1 288 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 26


 1128 002a 0120     		movs	r0, #1
 1129 002c FFF7FEFF 		bl	MRIN1_Write
 289:.\motor.c     ****         MRIN2_Write(0);
 1130              		.loc 1 289 0
 1131 0030 0020     		movs	r0, #0
 1132 0032 FFF7FEFF 		bl	MRIN2_Write
 1133              	.L59:
 290:.\motor.c     ****     }
 291:.\motor.c     **** }
 1134              		.loc 1 291 0
 1135 0036 0837     		adds	r7, r7, #8
 1136 0038 BD46     		mov	sp, r7
 1137              		@ sp needed
 1138 003a 80BD     		pop	{r7, pc}
 1139              		.cfi_endproc
 1140              	.LFE78:
 1141              		.size	setForward, .-setForward
 1142              		.section	.text.setReverse,"ax",%progbits
 1143              		.align	2
 1144              		.global	setReverse
 1145              		.thumb
 1146              		.thumb_func
 1147              		.type	setReverse, %function
 1148              	setReverse:
 1149              	.LFB79:
 292:.\motor.c     **** 
 293:.\motor.c     **** /*
 294:.\motor.c     ****  * Set *motor* to reverse drive
 295:.\motor.c     ****  */ 
 296:.\motor.c     **** void setReverse(uint8 motor){
 1150              		.loc 1 296 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 8
 1153              		@ frame_needed = 1, uses_anonymous_args = 0
 1154 0000 80B5     		push	{r7, lr}
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 7, -8
 1157              		.cfi_offset 14, -4
 1158 0002 82B0     		sub	sp, sp, #8
 1159              		.cfi_def_cfa_offset 16
 1160 0004 00AF     		add	r7, sp, #0
 1161              		.cfi_def_cfa_register 7
 1162 0006 0346     		mov	r3, r0
 1163 0008 FB71     		strb	r3, [r7, #7]
 297:.\motor.c     ****     if (motor & MLEFT){
 1164              		.loc 1 297 0
 1165 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1166 000c 03F00103 		and	r3, r3, #1
 1167 0010 002B     		cmp	r3, #0
 1168 0012 05D0     		beq	.L63
 298:.\motor.c     ****         MLIN1_Write(0);
 1169              		.loc 1 298 0
 1170 0014 0020     		movs	r0, #0
 1171 0016 FFF7FEFF 		bl	MLIN1_Write
 299:.\motor.c     ****         MLIN2_Write(1);
 1172              		.loc 1 299 0
 1173 001a 0120     		movs	r0, #1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 27


 1174 001c FFF7FEFF 		bl	MLIN2_Write
 1175              	.L63:
 300:.\motor.c     ****     }
 301:.\motor.c     ****     
 302:.\motor.c     ****     if (motor & MRIGHT){
 1176              		.loc 1 302 0
 1177 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1178 0022 03F00203 		and	r3, r3, #2
 1179 0026 002B     		cmp	r3, #0
 1180 0028 05D0     		beq	.L62
 303:.\motor.c     ****         MRIN1_Write(0);
 1181              		.loc 1 303 0
 1182 002a 0020     		movs	r0, #0
 1183 002c FFF7FEFF 		bl	MRIN1_Write
 304:.\motor.c     ****         MRIN2_Write(1);
 1184              		.loc 1 304 0
 1185 0030 0120     		movs	r0, #1
 1186 0032 FFF7FEFF 		bl	MRIN2_Write
 1187              	.L62:
 305:.\motor.c     ****     }
 306:.\motor.c     **** }
 1188              		.loc 1 306 0
 1189 0036 0837     		adds	r7, r7, #8
 1190 0038 BD46     		mov	sp, r7
 1191              		@ sp needed
 1192 003a 80BD     		pop	{r7, pc}
 1193              		.cfi_endproc
 1194              	.LFE79:
 1195              		.size	setReverse, .-setReverse
 1196              		.section	.text.abs2,"ax",%progbits
 1197              		.align	2
 1198              		.global	abs2
 1199              		.thumb
 1200              		.thumb_func
 1201              		.type	abs2, %function
 1202              	abs2:
 1203              	.LFB80:
 307:.\motor.c     **** 
 308:.\motor.c     **** int16 abs2(int16 val)
 309:.\motor.c     **** {
 1204              		.loc 1 309 0
 1205              		.cfi_startproc
 1206              		@ args = 0, pretend = 0, frame = 8
 1207              		@ frame_needed = 1, uses_anonymous_args = 0
 1208              		@ link register save eliminated.
 1209 0000 80B4     		push	{r7}
 1210              		.cfi_def_cfa_offset 4
 1211              		.cfi_offset 7, -4
 1212 0002 83B0     		sub	sp, sp, #12
 1213              		.cfi_def_cfa_offset 16
 1214 0004 00AF     		add	r7, sp, #0
 1215              		.cfi_def_cfa_register 7
 1216 0006 0346     		mov	r3, r0
 1217 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 310:.\motor.c     ****     return (val > 0) ? val : -val;
 1218              		.loc 1 310 0
 1219 000a B7F90630 		ldrsh	r3, [r7, #6]
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 28


 1220 000e 002B     		cmp	r3, #0
 1221 0010 B8BF     		it	lt
 1222 0012 5B42     		rsblt	r3, r3, #0
 1223 0014 9BB2     		uxth	r3, r3
 1224 0016 1BB2     		sxth	r3, r3
 311:.\motor.c     **** }
 1225              		.loc 1 311 0
 1226 0018 1846     		mov	r0, r3
 1227 001a 0C37     		adds	r7, r7, #12
 1228 001c BD46     		mov	sp, r7
 1229              		@ sp needed
 1230 001e 5DF8047B 		ldr	r7, [sp], #4
 1231 0022 7047     		bx	lr
 1232              		.cfi_endproc
 1233              	.LFE80:
 1234              		.size	abs2, .-abs2
 1235              		.text
 1236              	.Letext0:
 1237              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 1238              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 1239              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1240              		.file 5 "./navigation.h"
 1241              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1242              		.file 7 "Generated_Source\\PSoC5/Camera.h"
 1243              		.file 8 "<built-in>"
 1244              		.section	.debug_info,"",%progbits
 1245              	.Ldebug_info0:
 1246 0000 DC040000 		.4byte	0x4dc
 1247 0004 0400     		.2byte	0x4
 1248 0006 00000000 		.4byte	.Ldebug_abbrev0
 1249 000a 04       		.byte	0x4
 1250 000b 01       		.uleb128 0x1
 1251 000c 71000000 		.4byte	.LASF61
 1252 0010 01       		.byte	0x1
 1253 0011 00000000 		.4byte	.LASF62
 1254 0015 35030000 		.4byte	.LASF63
 1255 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1256 001d 00000000 		.4byte	0
 1257 0021 00000000 		.4byte	.Ldebug_line0
 1258 0025 02       		.uleb128 0x2
 1259 0026 04       		.byte	0x4
 1260 0027 05       		.byte	0x5
 1261 0028 696E7400 		.ascii	"int\000"
 1262 002c 03       		.uleb128 0x3
 1263 002d 04       		.byte	0x4
 1264 002e 07       		.byte	0x7
 1265 002f FC010000 		.4byte	.LASF0
 1266 0033 03       		.uleb128 0x3
 1267 0034 01       		.byte	0x1
 1268 0035 06       		.byte	0x6
 1269 0036 22010000 		.4byte	.LASF1
 1270 003a 03       		.uleb128 0x3
 1271 003b 01       		.byte	0x1
 1272 003c 08       		.byte	0x8
 1273 003d BB010000 		.4byte	.LASF2
 1274 0041 03       		.uleb128 0x3
 1275 0042 02       		.byte	0x2
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 29


 1276 0043 05       		.byte	0x5
 1277 0044 3C000000 		.4byte	.LASF3
 1278 0048 03       		.uleb128 0x3
 1279 0049 02       		.byte	0x2
 1280 004a 07       		.byte	0x7
 1281 004b 1E020000 		.4byte	.LASF4
 1282 004f 04       		.uleb128 0x4
 1283 0050 D1020000 		.4byte	.LASF14
 1284 0054 02       		.byte	0x2
 1285 0055 37       		.byte	0x37
 1286 0056 5A000000 		.4byte	0x5a
 1287 005a 03       		.uleb128 0x3
 1288 005b 04       		.byte	0x4
 1289 005c 05       		.byte	0x5
 1290 005d 3F020000 		.4byte	.LASF5
 1291 0061 03       		.uleb128 0x3
 1292 0062 04       		.byte	0x4
 1293 0063 07       		.byte	0x7
 1294 0064 86020000 		.4byte	.LASF6
 1295 0068 03       		.uleb128 0x3
 1296 0069 08       		.byte	0x8
 1297 006a 05       		.byte	0x5
 1298 006b 58010000 		.4byte	.LASF7
 1299 006f 03       		.uleb128 0x3
 1300 0070 08       		.byte	0x8
 1301 0071 07       		.byte	0x7
 1302 0072 D8010000 		.4byte	.LASF8
 1303 0076 03       		.uleb128 0x3
 1304 0077 04       		.byte	0x4
 1305 0078 07       		.byte	0x7
 1306 0079 57000000 		.4byte	.LASF9
 1307 007d 03       		.uleb128 0x3
 1308 007e 01       		.byte	0x1
 1309 007f 08       		.byte	0x8
 1310 0080 31020000 		.4byte	.LASF10
 1311 0084 03       		.uleb128 0x3
 1312 0085 08       		.byte	0x8
 1313 0086 04       		.byte	0x4
 1314 0087 1B030000 		.4byte	.LASF11
 1315 008b 03       		.uleb128 0x3
 1316 008c 04       		.byte	0x4
 1317 008d 04       		.byte	0x4
 1318 008e 41010000 		.4byte	.LASF12
 1319 0092 03       		.uleb128 0x3
 1320 0093 08       		.byte	0x8
 1321 0094 04       		.byte	0x4
 1322 0095 AF010000 		.4byte	.LASF13
 1323 0099 04       		.uleb128 0x4
 1324 009a 58020000 		.4byte	.LASF15
 1325 009e 03       		.byte	0x3
 1326 009f 41       		.byte	0x41
 1327 00a0 4F000000 		.4byte	0x4f
 1328 00a4 04       		.uleb128 0x4
 1329 00a5 10010000 		.4byte	.LASF16
 1330 00a9 04       		.byte	0x4
 1331 00aa B3       		.byte	0xb3
 1332 00ab 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 30


 1333 00af 04       		.uleb128 0x4
 1334 00b0 FE000000 		.4byte	.LASF17
 1335 00b4 04       		.byte	0x4
 1336 00b5 B7       		.byte	0xb7
 1337 00b6 41000000 		.4byte	0x41
 1338 00ba 04       		.uleb128 0x4
 1339 00bb A5020000 		.4byte	.LASF18
 1340 00bf 04       		.byte	0x4
 1341 00c0 B8       		.byte	0xb8
 1342 00c1 5A000000 		.4byte	0x5a
 1343 00c5 05       		.uleb128 0x5
 1344 00c6 12030000 		.4byte	.LASF64
 1345 00ca 0C       		.byte	0xc
 1346 00cb 05       		.byte	0x5
 1347 00cc 0F       		.byte	0xf
 1348 00cd F2000000 		.4byte	0xf2
 1349 00d1 06       		.uleb128 0x6
 1350 00d2 7800     		.ascii	"x\000"
 1351 00d4 05       		.byte	0x5
 1352 00d5 10       		.byte	0x10
 1353 00d6 BA000000 		.4byte	0xba
 1354 00da 00       		.byte	0
 1355 00db 06       		.uleb128 0x6
 1356 00dc 7900     		.ascii	"y\000"
 1357 00de 05       		.byte	0x5
 1358 00df 11       		.byte	0x11
 1359 00e0 BA000000 		.4byte	0xba
 1360 00e4 04       		.byte	0x4
 1361 00e5 07       		.uleb128 0x7
 1362 00e6 0C030000 		.4byte	.LASF19
 1363 00ea 05       		.byte	0x5
 1364 00eb 12       		.byte	0x12
 1365 00ec AF000000 		.4byte	0xaf
 1366 00f0 08       		.byte	0x8
 1367 00f1 00       		.byte	0
 1368 00f2 08       		.uleb128 0x8
 1369 00f3 66010000 		.4byte	.LASF20
 1370 00f7 01       		.byte	0x1
 1371 00f8 24       		.byte	0x24
 1372 00f9 A4000000 		.4byte	0xa4
 1373 00fd 00000000 		.4byte	.LFB63
 1374 0101 18000000 		.4byte	.LFE63-.LFB63
 1375 0105 01       		.uleb128 0x1
 1376 0106 9C       		.byte	0x9c
 1377 0107 08       		.uleb128 0x8
 1378 0108 9C030000 		.4byte	.LASF21
 1379 010c 01       		.byte	0x1
 1380 010d 28       		.byte	0x28
 1381 010e A4000000 		.4byte	0xa4
 1382 0112 00000000 		.4byte	.LFB64
 1383 0116 18000000 		.4byte	.LFE64-.LFB64
 1384 011a 01       		.uleb128 0x1
 1385 011b 9C       		.byte	0x9c
 1386 011c 09       		.uleb128 0x9
 1387 011d 3C010000 		.4byte	.LASF44
 1388 0121 01       		.byte	0x1
 1389 0122 39       		.byte	0x39
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 31


 1390 0123 A4000000 		.4byte	0xa4
 1391 0127 00000000 		.4byte	.LFB65
 1392 012b 38000000 		.4byte	.LFE65-.LFB65
 1393 012f 01       		.uleb128 0x1
 1394 0130 9C       		.byte	0x9c
 1395 0131 60010000 		.4byte	0x160
 1396 0135 0A       		.uleb128 0xa
 1397 0136 52010000 		.4byte	.LASF22
 1398 013a 01       		.byte	0x1
 1399 013b 39       		.byte	0x39
 1400 013c 25000000 		.4byte	0x25
 1401 0140 02       		.uleb128 0x2
 1402 0141 91       		.byte	0x91
 1403 0142 74       		.sleb128 -12
 1404 0143 0B       		.uleb128 0xb
 1405 0144 76617200 		.ascii	"var\000"
 1406 0148 01       		.byte	0x1
 1407 0149 39       		.byte	0x39
 1408 014a 25000000 		.4byte	0x25
 1409 014e 02       		.uleb128 0x2
 1410 014f 91       		.byte	0x91
 1411 0150 70       		.sleb128 -16
 1412 0151 0A       		.uleb128 0xa
 1413 0152 13000000 		.4byte	.LASF23
 1414 0156 01       		.byte	0x1
 1415 0157 39       		.byte	0x39
 1416 0158 25000000 		.4byte	0x25
 1417 015c 02       		.uleb128 0x2
 1418 015d 91       		.byte	0x91
 1419 015e 6C       		.sleb128 -20
 1420 015f 00       		.byte	0
 1421 0160 0C       		.uleb128 0xc
 1422 0161 09020000 		.4byte	.LASF27
 1423 0165 01       		.byte	0x1
 1424 0166 47       		.byte	0x47
 1425 0167 25000000 		.4byte	0x25
 1426 016b 00000000 		.4byte	.LFB66
 1427 016f 00020000 		.4byte	.LFE66-.LFB66
 1428 0173 01       		.uleb128 0x1
 1429 0174 9C       		.byte	0x9c
 1430 0175 B5010000 		.4byte	0x1b5
 1431 0179 0D       		.uleb128 0xd
 1432 017a FC020000 		.4byte	.LASF24
 1433 017e 01       		.byte	0x1
 1434 017f 4D       		.byte	0x4d
 1435 0180 25000000 		.4byte	0x25
 1436 0184 02       		.uleb128 0x2
 1437 0185 91       		.byte	0x91
 1438 0186 74       		.sleb128 -12
 1439 0187 0D       		.uleb128 0xd
 1440 0188 2E010000 		.4byte	.LASF25
 1441 018c 01       		.byte	0x1
 1442 018d 4E       		.byte	0x4e
 1443 018e 25000000 		.4byte	0x25
 1444 0192 02       		.uleb128 0x2
 1445 0193 91       		.byte	0x91
 1446 0194 70       		.sleb128 -16
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 32


 1447 0195 0E       		.uleb128 0xe
 1448 0196 61627300 		.ascii	"abs\000"
 1449 019a 08       		.byte	0x8
 1450 019b 00       		.byte	0
 1451 019c 25000000 		.4byte	0x25
 1452 01a0 A6010000 		.4byte	0x1a6
 1453 01a4 0F       		.uleb128 0xf
 1454 01a5 00       		.byte	0
 1455 01a6 0D       		.uleb128 0xd
 1456 01a7 77020000 		.4byte	.LASF26
 1457 01ab 01       		.byte	0x1
 1458 01ac 68       		.byte	0x68
 1459 01ad 25000000 		.4byte	0x25
 1460 01b1 02       		.uleb128 0x2
 1461 01b2 91       		.byte	0x91
 1462 01b3 6C       		.sleb128 -20
 1463 01b4 00       		.byte	0
 1464 01b5 10       		.uleb128 0x10
 1465 01b6 AB020000 		.4byte	.LASF65
 1466 01ba 01       		.byte	0x1
 1467 01bb 94       		.byte	0x94
 1468 01bc 00000000 		.4byte	.LFB67
 1469 01c0 1C000000 		.4byte	.LFE67-.LFB67
 1470 01c4 01       		.uleb128 0x1
 1471 01c5 9C       		.byte	0x9c
 1472 01c6 11       		.uleb128 0x11
 1473 01c7 A1010000 		.4byte	.LASF28
 1474 01cb 01       		.byte	0x1
 1475 01cc 9B       		.byte	0x9b
 1476 01cd 00000000 		.4byte	.LFB68
 1477 01d1 08010000 		.4byte	.LFE68-.LFB68
 1478 01d5 01       		.uleb128 0x1
 1479 01d6 9C       		.byte	0x9c
 1480 01d7 1A020000 		.4byte	0x21a
 1481 01db 0B       		.uleb128 0xb
 1482 01dc 7800     		.ascii	"x\000"
 1483 01de 01       		.byte	0x1
 1484 01df 9B       		.byte	0x9b
 1485 01e0 BA000000 		.4byte	0xba
 1486 01e4 02       		.uleb128 0x2
 1487 01e5 91       		.byte	0x91
 1488 01e6 5C       		.sleb128 -36
 1489 01e7 0B       		.uleb128 0xb
 1490 01e8 7900     		.ascii	"y\000"
 1491 01ea 01       		.byte	0x1
 1492 01eb 9B       		.byte	0x9b
 1493 01ec BA000000 		.4byte	0xba
 1494 01f0 02       		.uleb128 0x2
 1495 01f1 91       		.byte	0x91
 1496 01f2 58       		.sleb128 -40
 1497 01f3 12       		.uleb128 0x12
 1498 01f4 647800   		.ascii	"dx\000"
 1499 01f7 01       		.byte	0x1
 1500 01f8 A1       		.byte	0xa1
 1501 01f9 BA000000 		.4byte	0xba
 1502 01fd 02       		.uleb128 0x2
 1503 01fe 91       		.byte	0x91
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 33


 1504 01ff 6C       		.sleb128 -20
 1505 0200 12       		.uleb128 0x12
 1506 0201 647900   		.ascii	"dy\000"
 1507 0204 01       		.byte	0x1
 1508 0205 A2       		.byte	0xa2
 1509 0206 BA000000 		.4byte	0xba
 1510 020a 02       		.uleb128 0x2
 1511 020b 91       		.byte	0x91
 1512 020c 68       		.sleb128 -24
 1513 020d 12       		.uleb128 0x12
 1514 020e 6400     		.ascii	"d\000"
 1515 0210 01       		.byte	0x1
 1516 0211 A4       		.byte	0xa4
 1517 0212 BA000000 		.4byte	0xba
 1518 0216 02       		.uleb128 0x2
 1519 0217 91       		.byte	0x91
 1520 0218 64       		.sleb128 -28
 1521 0219 00       		.byte	0
 1522 021a 11       		.uleb128 0x11
 1523 021b F3000000 		.4byte	.LASF29
 1524 021f 01       		.byte	0x1
 1525 0220 AC       		.byte	0xac
 1526 0221 00000000 		.4byte	.LFB69
 1527 0225 28000000 		.4byte	.LFE69-.LFB69
 1528 0229 01       		.uleb128 0x1
 1529 022a 9C       		.byte	0x9c
 1530 022b 3E020000 		.4byte	0x23e
 1531 022f 0A       		.uleb128 0xa
 1532 0230 36020000 		.4byte	.LASF30
 1533 0234 01       		.byte	0x1
 1534 0235 AC       		.byte	0xac
 1535 0236 BA000000 		.4byte	0xba
 1536 023a 02       		.uleb128 0x2
 1537 023b 91       		.byte	0x91
 1538 023c 74       		.sleb128 -12
 1539 023d 00       		.byte	0
 1540 023e 11       		.uleb128 0x11
 1541 023f B8020000 		.4byte	.LASF31
 1542 0243 01       		.byte	0x1
 1543 0244 B5       		.byte	0xb5
 1544 0245 00000000 		.4byte	.LFB70
 1545 0249 28000000 		.4byte	.LFE70-.LFB70
 1546 024d 01       		.uleb128 0x1
 1547 024e 9C       		.byte	0x9c
 1548 024f 62020000 		.4byte	0x262
 1549 0253 0A       		.uleb128 0xa
 1550 0254 36020000 		.4byte	.LASF30
 1551 0258 01       		.byte	0x1
 1552 0259 B5       		.byte	0xb5
 1553 025a BA000000 		.4byte	0xba
 1554 025e 02       		.uleb128 0x2
 1555 025f 91       		.byte	0x91
 1556 0260 74       		.sleb128 -12
 1557 0261 00       		.byte	0
 1558 0262 13       		.uleb128 0x13
 1559 0263 C9010000 		.4byte	.LASF32
 1560 0267 01       		.byte	0x1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 34


 1561 0268 BF       		.byte	0xbf
 1562 0269 00000000 		.4byte	.LFB71
 1563 026d 68000000 		.4byte	.LFE71-.LFB71
 1564 0271 01       		.uleb128 0x1
 1565 0272 9C       		.byte	0x9c
 1566 0273 86020000 		.4byte	0x286
 1567 0277 0A       		.uleb128 0xa
 1568 0278 0C030000 		.4byte	.LASF19
 1569 027c 01       		.byte	0x1
 1570 027d BF       		.byte	0xbf
 1571 027e AF000000 		.4byte	0xaf
 1572 0282 02       		.uleb128 0x2
 1573 0283 91       		.byte	0x91
 1574 0284 76       		.sleb128 -10
 1575 0285 00       		.byte	0
 1576 0286 13       		.uleb128 0x13
 1577 0287 E4020000 		.4byte	.LASF33
 1578 028b 01       		.byte	0x1
 1579 028c CB       		.byte	0xcb
 1580 028d 00000000 		.4byte	.LFB72
 1581 0291 20000000 		.4byte	.LFE72-.LFB72
 1582 0295 01       		.uleb128 0x1
 1583 0296 9C       		.byte	0x9c
 1584 0297 AA020000 		.4byte	0x2aa
 1585 029b 0A       		.uleb128 0xa
 1586 029c 90030000 		.4byte	.LASF34
 1587 02a0 01       		.byte	0x1
 1588 02a1 CB       		.byte	0xcb
 1589 02a2 AF000000 		.4byte	0xaf
 1590 02a6 02       		.uleb128 0x2
 1591 02a7 91       		.byte	0x91
 1592 02a8 76       		.sleb128 -10
 1593 02a9 00       		.byte	0
 1594 02aa 11       		.uleb128 0x11
 1595 02ab 16010000 		.4byte	.LASF35
 1596 02af 01       		.byte	0x1
 1597 02b0 D3       		.byte	0xd3
 1598 02b1 00000000 		.4byte	.LFB73
 1599 02b5 26000000 		.4byte	.LFE73-.LFB73
 1600 02b9 01       		.uleb128 0x1
 1601 02ba 9C       		.byte	0x9c
 1602 02bb CE020000 		.4byte	0x2ce
 1603 02bf 0A       		.uleb128 0xa
 1604 02c0 18020000 		.4byte	.LASF36
 1605 02c4 01       		.byte	0x1
 1606 02c5 D3       		.byte	0xd3
 1607 02c6 25000000 		.4byte	0x25
 1608 02ca 02       		.uleb128 0x2
 1609 02cb 91       		.byte	0x91
 1610 02cc 74       		.sleb128 -12
 1611 02cd 00       		.byte	0
 1612 02ce 11       		.uleb128 0x11
 1613 02cf EF010000 		.4byte	.LASF37
 1614 02d3 01       		.byte	0x1
 1615 02d4 DC       		.byte	0xdc
 1616 02d5 00000000 		.4byte	.LFB74
 1617 02d9 26000000 		.4byte	.LFE74-.LFB74
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 35


 1618 02dd 01       		.uleb128 0x1
 1619 02de 9C       		.byte	0x9c
 1620 02df F2020000 		.4byte	0x2f2
 1621 02e3 0A       		.uleb128 0xa
 1622 02e4 18020000 		.4byte	.LASF36
 1623 02e8 01       		.byte	0x1
 1624 02e9 DC       		.byte	0xdc
 1625 02ea 25000000 		.4byte	0x25
 1626 02ee 02       		.uleb128 0x2
 1627 02ef 91       		.byte	0x91
 1628 02f0 74       		.sleb128 -12
 1629 02f1 00       		.byte	0
 1630 02f2 14       		.uleb128 0x14
 1631 02f3 98020000 		.4byte	.LASF38
 1632 02f7 01       		.byte	0x1
 1633 02f8 E6       		.byte	0xe6
 1634 02f9 00000000 		.4byte	.LFB75
 1635 02fd 32000000 		.4byte	.LFE75-.LFB75
 1636 0301 01       		.uleb128 0x1
 1637 0302 9C       		.byte	0x9c
 1638 0303 11       		.uleb128 0x11
 1639 0304 0A000000 		.4byte	.LASF39
 1640 0308 01       		.byte	0x1
 1641 0309 F8       		.byte	0xf8
 1642 030a 00000000 		.4byte	.LFB76
 1643 030e 38000000 		.4byte	.LFE76-.LFB76
 1644 0312 01       		.uleb128 0x1
 1645 0313 9C       		.byte	0x9c
 1646 0314 35030000 		.4byte	0x335
 1647 0318 0A       		.uleb128 0xa
 1648 0319 71020000 		.4byte	.LASF40
 1649 031d 01       		.byte	0x1
 1650 031e F8       		.byte	0xf8
 1651 031f A4000000 		.4byte	0xa4
 1652 0323 02       		.uleb128 0x2
 1653 0324 91       		.byte	0x91
 1654 0325 77       		.sleb128 -9
 1655 0326 0A       		.uleb128 0xa
 1656 0327 18020000 		.4byte	.LASF36
 1657 032b 01       		.byte	0x1
 1658 032c F8       		.byte	0xf8
 1659 032d A4000000 		.4byte	0xa4
 1660 0331 02       		.uleb128 0x2
 1661 0332 91       		.byte	0x91
 1662 0333 76       		.sleb128 -10
 1663 0334 00       		.byte	0
 1664 0335 15       		.uleb128 0x15
 1665 0336 88010000 		.4byte	.LASF41
 1666 033a 01       		.byte	0x1
 1667 033b 0901     		.2byte	0x109
 1668 033d 00000000 		.4byte	.LFB77
 1669 0341 3C000000 		.4byte	.LFE77-.LFB77
 1670 0345 01       		.uleb128 0x1
 1671 0346 9C       		.byte	0x9c
 1672 0347 5B030000 		.4byte	0x35b
 1673 034b 16       		.uleb128 0x16
 1674 034c 71020000 		.4byte	.LASF40
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 36


 1675 0350 01       		.byte	0x1
 1676 0351 0901     		.2byte	0x109
 1677 0353 A4000000 		.4byte	0xa4
 1678 0357 02       		.uleb128 0x2
 1679 0358 91       		.byte	0x91
 1680 0359 77       		.sleb128 -9
 1681 035a 00       		.byte	0
 1682 035b 15       		.uleb128 0x15
 1683 035c 47010000 		.4byte	.LASF42
 1684 0360 01       		.byte	0x1
 1685 0361 1901     		.2byte	0x119
 1686 0363 00000000 		.4byte	.LFB78
 1687 0367 3C000000 		.4byte	.LFE78-.LFB78
 1688 036b 01       		.uleb128 0x1
 1689 036c 9C       		.byte	0x9c
 1690 036d 81030000 		.4byte	0x381
 1691 0371 16       		.uleb128 0x16
 1692 0372 71020000 		.4byte	.LASF40
 1693 0376 01       		.byte	0x1
 1694 0377 1901     		.2byte	0x119
 1695 0379 A4000000 		.4byte	0xa4
 1696 037d 02       		.uleb128 0x2
 1697 037e 91       		.byte	0x91
 1698 037f 77       		.sleb128 -9
 1699 0380 00       		.byte	0
 1700 0381 15       		.uleb128 0x15
 1701 0382 60020000 		.4byte	.LASF43
 1702 0386 01       		.byte	0x1
 1703 0387 2801     		.2byte	0x128
 1704 0389 00000000 		.4byte	.LFB79
 1705 038d 3C000000 		.4byte	.LFE79-.LFB79
 1706 0391 01       		.uleb128 0x1
 1707 0392 9C       		.byte	0x9c
 1708 0393 A7030000 		.4byte	0x3a7
 1709 0397 16       		.uleb128 0x16
 1710 0398 71020000 		.4byte	.LASF40
 1711 039c 01       		.byte	0x1
 1712 039d 2801     		.2byte	0x128
 1713 039f A4000000 		.4byte	0xa4
 1714 03a3 02       		.uleb128 0x2
 1715 03a4 91       		.byte	0x91
 1716 03a5 77       		.sleb128 -9
 1717 03a6 00       		.byte	0
 1718 03a7 17       		.uleb128 0x17
 1719 03a8 71010000 		.4byte	.LASF45
 1720 03ac 01       		.byte	0x1
 1721 03ad 3401     		.2byte	0x134
 1722 03af AF000000 		.4byte	0xaf
 1723 03b3 00000000 		.4byte	.LFB80
 1724 03b7 24000000 		.4byte	.LFE80-.LFB80
 1725 03bb 01       		.uleb128 0x1
 1726 03bc 9C       		.byte	0x9c
 1727 03bd D1030000 		.4byte	0x3d1
 1728 03c1 18       		.uleb128 0x18
 1729 03c2 76616C00 		.ascii	"val\000"
 1730 03c6 01       		.byte	0x1
 1731 03c7 3401     		.2byte	0x134
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 37


 1732 03c9 AF000000 		.4byte	0xaf
 1733 03cd 02       		.uleb128 0x2
 1734 03ce 91       		.byte	0x91
 1735 03cf 76       		.sleb128 -10
 1736 03d0 00       		.byte	0
 1737 03d1 19       		.uleb128 0x19
 1738 03d2 C4020000 		.4byte	.LASF46
 1739 03d6 06       		.byte	0x6
 1740 03d7 2A06     		.2byte	0x62a
 1741 03d9 DD030000 		.4byte	0x3dd
 1742 03dd 1A       		.uleb128 0x1a
 1743 03de 99000000 		.4byte	0x99
 1744 03e2 1B       		.uleb128 0x1b
 1745 03e3 A4000000 		.4byte	0xa4
 1746 03e7 FE030000 		.4byte	0x3fe
 1747 03eb 1C       		.uleb128 0x1c
 1748 03ec 76000000 		.4byte	0x76
 1749 03f0 8F       		.byte	0x8f
 1750 03f1 1C       		.uleb128 0x1c
 1751 03f2 76000000 		.4byte	0x76
 1752 03f6 57       		.byte	0x57
 1753 03f7 1C       		.uleb128 0x1c
 1754 03f8 76000000 		.4byte	0x76
 1755 03fc 03       		.byte	0x3
 1756 03fd 00       		.byte	0
 1757 03fe 1D       		.uleb128 0x1d
 1758 03ff 22030000 		.4byte	.LASF47
 1759 0403 07       		.byte	0x7
 1760 0404 08       		.byte	0x8
 1761 0405 E2030000 		.4byte	0x3e2
 1762 0409 05       		.uleb128 0x5
 1763 040a 03       		.byte	0x3
 1764 040b 00000000 		.4byte	Camera_framebuffer
 1765 040f 1D       		.uleb128 0x1d
 1766 0410 46000000 		.4byte	.LASF48
 1767 0414 01       		.byte	0x1
 1768 0415 16       		.byte	0x16
 1769 0416 BA000000 		.4byte	0xba
 1770 041a 05       		.uleb128 0x5
 1771 041b 03       		.byte	0x3
 1772 041c 00000000 		.4byte	desired_distance
 1773 0420 1D       		.uleb128 0x1d
 1774 0421 91010000 		.4byte	.LASF49
 1775 0425 01       		.byte	0x1
 1776 0426 17       		.byte	0x17
 1777 0427 AF000000 		.4byte	0xaf
 1778 042b 05       		.uleb128 0x5
 1779 042c 03       		.byte	0x3
 1780 042d 00000000 		.4byte	desired_heading
 1781 0431 1D       		.uleb128 0x1d
 1782 0432 2C000000 		.4byte	.LASF50
 1783 0436 01       		.byte	0x1
 1784 0437 1A       		.byte	0x1a
 1785 0438 BA000000 		.4byte	0xba
 1786 043c 05       		.uleb128 0x5
 1787 043d 03       		.byte	0x3
 1788 043e 00000000 		.4byte	start_x
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 38


 1789 0442 1D       		.uleb128 0x1d
 1790 0443 34000000 		.4byte	.LASF51
 1791 0447 01       		.byte	0x1
 1792 0448 1B       		.byte	0x1b
 1793 0449 BA000000 		.4byte	0xba
 1794 044d 05       		.uleb128 0x5
 1795 044e 03       		.byte	0x3
 1796 044f 00000000 		.4byte	start_y
 1797 0453 1D       		.uleb128 0x1d
 1798 0454 ED000000 		.4byte	.LASF52
 1799 0458 01       		.byte	0x1
 1800 0459 1D       		.byte	0x1d
 1801 045a BA000000 		.4byte	0xba
 1802 045e 05       		.uleb128 0x5
 1803 045f 03       		.byte	0x3
 1804 0460 00000000 		.4byte	end_x
 1805 0464 1D       		.uleb128 0x1d
 1806 0465 6B020000 		.4byte	.LASF53
 1807 0469 01       		.byte	0x1
 1808 046a 1E       		.byte	0x1e
 1809 046b BA000000 		.4byte	0xba
 1810 046f 05       		.uleb128 0x5
 1811 0470 03       		.byte	0x3
 1812 0471 00000000 		.4byte	end_y
 1813 0475 1D       		.uleb128 0x1d
 1814 0476 04010000 		.4byte	.LASF54
 1815 047a 01       		.byte	0x1
 1816 047b 21       		.byte	0x21
 1817 047c A4000000 		.4byte	0xa4
 1818 0480 05       		.uleb128 0x5
 1819 0481 03       		.byte	0x3
 1820 0482 00000000 		.4byte	motor_state
 1821 0486 1D       		.uleb128 0x1d
 1822 0487 EF020000 		.4byte	.LASF55
 1823 048b 01       		.byte	0x1
 1824 048c 22       		.byte	0x22
 1825 048d A4000000 		.4byte	0xa4
 1826 0491 05       		.uleb128 0x5
 1827 0492 03       		.byte	0x3
 1828 0493 00000000 		.4byte	just_arrived
 1829 0497 1D       		.uleb128 0x1d
 1830 0498 19000000 		.4byte	.LASF56
 1831 049c 01       		.byte	0x1
 1832 049d 23       		.byte	0x23
 1833 049e A4000000 		.4byte	0xa4
 1834 04a2 05       		.uleb128 0x5
 1835 04a3 03       		.byte	0x3
 1836 04a4 00000000 		.4byte	currently_rotating
 1837 04a8 1D       		.uleb128 0x1d
 1838 04a9 76010000 		.4byte	.LASF57
 1839 04ad 01       		.byte	0x1
 1840 04ae 27       		.byte	0x27
 1841 04af A4000000 		.4byte	0xa4
 1842 04b3 05       		.uleb128 0x5
 1843 04b4 03       		.byte	0x3
 1844 04b5 00000000 		.4byte	currently_driving
 1845 04b9 1E       		.uleb128 0x1e
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 39


 1846 04ba 48020000 		.4byte	.LASF58
 1847 04be 01       		.byte	0x1
 1848 04bf 2D       		.byte	0x2d
 1849 04c0 AF000000 		.4byte	0xaf
 1850 04c4 1E       		.uleb128 0x1e
 1851 04c5 DB020000 		.4byte	.LASF59
 1852 04c9 01       		.byte	0x1
 1853 04ca 31       		.byte	0x31
 1854 04cb CF040000 		.4byte	0x4cf
 1855 04cf 1A       		.uleb128 0x1a
 1856 04d0 C5000000 		.4byte	0xc5
 1857 04d4 1E       		.uleb128 0x1e
 1858 04d5 60000000 		.4byte	.LASF60
 1859 04d9 01       		.byte	0x1
 1860 04da 32       		.byte	0x32
 1861 04db BA000000 		.4byte	0xba
 1862 04df 00       		.byte	0
 1863              		.section	.debug_abbrev,"",%progbits
 1864              	.Ldebug_abbrev0:
 1865 0000 01       		.uleb128 0x1
 1866 0001 11       		.uleb128 0x11
 1867 0002 01       		.byte	0x1
 1868 0003 25       		.uleb128 0x25
 1869 0004 0E       		.uleb128 0xe
 1870 0005 13       		.uleb128 0x13
 1871 0006 0B       		.uleb128 0xb
 1872 0007 03       		.uleb128 0x3
 1873 0008 0E       		.uleb128 0xe
 1874 0009 1B       		.uleb128 0x1b
 1875 000a 0E       		.uleb128 0xe
 1876 000b 55       		.uleb128 0x55
 1877 000c 17       		.uleb128 0x17
 1878 000d 11       		.uleb128 0x11
 1879 000e 01       		.uleb128 0x1
 1880 000f 10       		.uleb128 0x10
 1881 0010 17       		.uleb128 0x17
 1882 0011 00       		.byte	0
 1883 0012 00       		.byte	0
 1884 0013 02       		.uleb128 0x2
 1885 0014 24       		.uleb128 0x24
 1886 0015 00       		.byte	0
 1887 0016 0B       		.uleb128 0xb
 1888 0017 0B       		.uleb128 0xb
 1889 0018 3E       		.uleb128 0x3e
 1890 0019 0B       		.uleb128 0xb
 1891 001a 03       		.uleb128 0x3
 1892 001b 08       		.uleb128 0x8
 1893 001c 00       		.byte	0
 1894 001d 00       		.byte	0
 1895 001e 03       		.uleb128 0x3
 1896 001f 24       		.uleb128 0x24
 1897 0020 00       		.byte	0
 1898 0021 0B       		.uleb128 0xb
 1899 0022 0B       		.uleb128 0xb
 1900 0023 3E       		.uleb128 0x3e
 1901 0024 0B       		.uleb128 0xb
 1902 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 40


 1903 0026 0E       		.uleb128 0xe
 1904 0027 00       		.byte	0
 1905 0028 00       		.byte	0
 1906 0029 04       		.uleb128 0x4
 1907 002a 16       		.uleb128 0x16
 1908 002b 00       		.byte	0
 1909 002c 03       		.uleb128 0x3
 1910 002d 0E       		.uleb128 0xe
 1911 002e 3A       		.uleb128 0x3a
 1912 002f 0B       		.uleb128 0xb
 1913 0030 3B       		.uleb128 0x3b
 1914 0031 0B       		.uleb128 0xb
 1915 0032 49       		.uleb128 0x49
 1916 0033 13       		.uleb128 0x13
 1917 0034 00       		.byte	0
 1918 0035 00       		.byte	0
 1919 0036 05       		.uleb128 0x5
 1920 0037 13       		.uleb128 0x13
 1921 0038 01       		.byte	0x1
 1922 0039 03       		.uleb128 0x3
 1923 003a 0E       		.uleb128 0xe
 1924 003b 0B       		.uleb128 0xb
 1925 003c 0B       		.uleb128 0xb
 1926 003d 3A       		.uleb128 0x3a
 1927 003e 0B       		.uleb128 0xb
 1928 003f 3B       		.uleb128 0x3b
 1929 0040 0B       		.uleb128 0xb
 1930 0041 01       		.uleb128 0x1
 1931 0042 13       		.uleb128 0x13
 1932 0043 00       		.byte	0
 1933 0044 00       		.byte	0
 1934 0045 06       		.uleb128 0x6
 1935 0046 0D       		.uleb128 0xd
 1936 0047 00       		.byte	0
 1937 0048 03       		.uleb128 0x3
 1938 0049 08       		.uleb128 0x8
 1939 004a 3A       		.uleb128 0x3a
 1940 004b 0B       		.uleb128 0xb
 1941 004c 3B       		.uleb128 0x3b
 1942 004d 0B       		.uleb128 0xb
 1943 004e 49       		.uleb128 0x49
 1944 004f 13       		.uleb128 0x13
 1945 0050 38       		.uleb128 0x38
 1946 0051 0B       		.uleb128 0xb
 1947 0052 00       		.byte	0
 1948 0053 00       		.byte	0
 1949 0054 07       		.uleb128 0x7
 1950 0055 0D       		.uleb128 0xd
 1951 0056 00       		.byte	0
 1952 0057 03       		.uleb128 0x3
 1953 0058 0E       		.uleb128 0xe
 1954 0059 3A       		.uleb128 0x3a
 1955 005a 0B       		.uleb128 0xb
 1956 005b 3B       		.uleb128 0x3b
 1957 005c 0B       		.uleb128 0xb
 1958 005d 49       		.uleb128 0x49
 1959 005e 13       		.uleb128 0x13
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 41


 1960 005f 38       		.uleb128 0x38
 1961 0060 0B       		.uleb128 0xb
 1962 0061 00       		.byte	0
 1963 0062 00       		.byte	0
 1964 0063 08       		.uleb128 0x8
 1965 0064 2E       		.uleb128 0x2e
 1966 0065 00       		.byte	0
 1967 0066 3F       		.uleb128 0x3f
 1968 0067 19       		.uleb128 0x19
 1969 0068 03       		.uleb128 0x3
 1970 0069 0E       		.uleb128 0xe
 1971 006a 3A       		.uleb128 0x3a
 1972 006b 0B       		.uleb128 0xb
 1973 006c 3B       		.uleb128 0x3b
 1974 006d 0B       		.uleb128 0xb
 1975 006e 49       		.uleb128 0x49
 1976 006f 13       		.uleb128 0x13
 1977 0070 11       		.uleb128 0x11
 1978 0071 01       		.uleb128 0x1
 1979 0072 12       		.uleb128 0x12
 1980 0073 06       		.uleb128 0x6
 1981 0074 40       		.uleb128 0x40
 1982 0075 18       		.uleb128 0x18
 1983 0076 9742     		.uleb128 0x2117
 1984 0078 19       		.uleb128 0x19
 1985 0079 00       		.byte	0
 1986 007a 00       		.byte	0
 1987 007b 09       		.uleb128 0x9
 1988 007c 2E       		.uleb128 0x2e
 1989 007d 01       		.byte	0x1
 1990 007e 3F       		.uleb128 0x3f
 1991 007f 19       		.uleb128 0x19
 1992 0080 03       		.uleb128 0x3
 1993 0081 0E       		.uleb128 0xe
 1994 0082 3A       		.uleb128 0x3a
 1995 0083 0B       		.uleb128 0xb
 1996 0084 3B       		.uleb128 0x3b
 1997 0085 0B       		.uleb128 0xb
 1998 0086 27       		.uleb128 0x27
 1999 0087 19       		.uleb128 0x19
 2000 0088 49       		.uleb128 0x49
 2001 0089 13       		.uleb128 0x13
 2002 008a 11       		.uleb128 0x11
 2003 008b 01       		.uleb128 0x1
 2004 008c 12       		.uleb128 0x12
 2005 008d 06       		.uleb128 0x6
 2006 008e 40       		.uleb128 0x40
 2007 008f 18       		.uleb128 0x18
 2008 0090 9742     		.uleb128 0x2117
 2009 0092 19       		.uleb128 0x19
 2010 0093 01       		.uleb128 0x1
 2011 0094 13       		.uleb128 0x13
 2012 0095 00       		.byte	0
 2013 0096 00       		.byte	0
 2014 0097 0A       		.uleb128 0xa
 2015 0098 05       		.uleb128 0x5
 2016 0099 00       		.byte	0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 42


 2017 009a 03       		.uleb128 0x3
 2018 009b 0E       		.uleb128 0xe
 2019 009c 3A       		.uleb128 0x3a
 2020 009d 0B       		.uleb128 0xb
 2021 009e 3B       		.uleb128 0x3b
 2022 009f 0B       		.uleb128 0xb
 2023 00a0 49       		.uleb128 0x49
 2024 00a1 13       		.uleb128 0x13
 2025 00a2 02       		.uleb128 0x2
 2026 00a3 18       		.uleb128 0x18
 2027 00a4 00       		.byte	0
 2028 00a5 00       		.byte	0
 2029 00a6 0B       		.uleb128 0xb
 2030 00a7 05       		.uleb128 0x5
 2031 00a8 00       		.byte	0
 2032 00a9 03       		.uleb128 0x3
 2033 00aa 08       		.uleb128 0x8
 2034 00ab 3A       		.uleb128 0x3a
 2035 00ac 0B       		.uleb128 0xb
 2036 00ad 3B       		.uleb128 0x3b
 2037 00ae 0B       		.uleb128 0xb
 2038 00af 49       		.uleb128 0x49
 2039 00b0 13       		.uleb128 0x13
 2040 00b1 02       		.uleb128 0x2
 2041 00b2 18       		.uleb128 0x18
 2042 00b3 00       		.byte	0
 2043 00b4 00       		.byte	0
 2044 00b5 0C       		.uleb128 0xc
 2045 00b6 2E       		.uleb128 0x2e
 2046 00b7 01       		.byte	0x1
 2047 00b8 3F       		.uleb128 0x3f
 2048 00b9 19       		.uleb128 0x19
 2049 00ba 03       		.uleb128 0x3
 2050 00bb 0E       		.uleb128 0xe
 2051 00bc 3A       		.uleb128 0x3a
 2052 00bd 0B       		.uleb128 0xb
 2053 00be 3B       		.uleb128 0x3b
 2054 00bf 0B       		.uleb128 0xb
 2055 00c0 49       		.uleb128 0x49
 2056 00c1 13       		.uleb128 0x13
 2057 00c2 11       		.uleb128 0x11
 2058 00c3 01       		.uleb128 0x1
 2059 00c4 12       		.uleb128 0x12
 2060 00c5 06       		.uleb128 0x6
 2061 00c6 40       		.uleb128 0x40
 2062 00c7 18       		.uleb128 0x18
 2063 00c8 9642     		.uleb128 0x2116
 2064 00ca 19       		.uleb128 0x19
 2065 00cb 01       		.uleb128 0x1
 2066 00cc 13       		.uleb128 0x13
 2067 00cd 00       		.byte	0
 2068 00ce 00       		.byte	0
 2069 00cf 0D       		.uleb128 0xd
 2070 00d0 34       		.uleb128 0x34
 2071 00d1 00       		.byte	0
 2072 00d2 03       		.uleb128 0x3
 2073 00d3 0E       		.uleb128 0xe
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 43


 2074 00d4 3A       		.uleb128 0x3a
 2075 00d5 0B       		.uleb128 0xb
 2076 00d6 3B       		.uleb128 0x3b
 2077 00d7 0B       		.uleb128 0xb
 2078 00d8 49       		.uleb128 0x49
 2079 00d9 13       		.uleb128 0x13
 2080 00da 02       		.uleb128 0x2
 2081 00db 18       		.uleb128 0x18
 2082 00dc 00       		.byte	0
 2083 00dd 00       		.byte	0
 2084 00de 0E       		.uleb128 0xe
 2085 00df 2E       		.uleb128 0x2e
 2086 00e0 01       		.byte	0x1
 2087 00e1 3F       		.uleb128 0x3f
 2088 00e2 19       		.uleb128 0x19
 2089 00e3 03       		.uleb128 0x3
 2090 00e4 08       		.uleb128 0x8
 2091 00e5 3A       		.uleb128 0x3a
 2092 00e6 0B       		.uleb128 0xb
 2093 00e7 3B       		.uleb128 0x3b
 2094 00e8 0B       		.uleb128 0xb
 2095 00e9 49       		.uleb128 0x49
 2096 00ea 13       		.uleb128 0x13
 2097 00eb 3C       		.uleb128 0x3c
 2098 00ec 19       		.uleb128 0x19
 2099 00ed 01       		.uleb128 0x1
 2100 00ee 13       		.uleb128 0x13
 2101 00ef 00       		.byte	0
 2102 00f0 00       		.byte	0
 2103 00f1 0F       		.uleb128 0xf
 2104 00f2 18       		.uleb128 0x18
 2105 00f3 00       		.byte	0
 2106 00f4 00       		.byte	0
 2107 00f5 00       		.byte	0
 2108 00f6 10       		.uleb128 0x10
 2109 00f7 2E       		.uleb128 0x2e
 2110 00f8 00       		.byte	0
 2111 00f9 3F       		.uleb128 0x3f
 2112 00fa 19       		.uleb128 0x19
 2113 00fb 03       		.uleb128 0x3
 2114 00fc 0E       		.uleb128 0xe
 2115 00fd 3A       		.uleb128 0x3a
 2116 00fe 0B       		.uleb128 0xb
 2117 00ff 3B       		.uleb128 0x3b
 2118 0100 0B       		.uleb128 0xb
 2119 0101 11       		.uleb128 0x11
 2120 0102 01       		.uleb128 0x1
 2121 0103 12       		.uleb128 0x12
 2122 0104 06       		.uleb128 0x6
 2123 0105 40       		.uleb128 0x40
 2124 0106 18       		.uleb128 0x18
 2125 0107 9742     		.uleb128 0x2117
 2126 0109 19       		.uleb128 0x19
 2127 010a 00       		.byte	0
 2128 010b 00       		.byte	0
 2129 010c 11       		.uleb128 0x11
 2130 010d 2E       		.uleb128 0x2e
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 44


 2131 010e 01       		.byte	0x1
 2132 010f 3F       		.uleb128 0x3f
 2133 0110 19       		.uleb128 0x19
 2134 0111 03       		.uleb128 0x3
 2135 0112 0E       		.uleb128 0xe
 2136 0113 3A       		.uleb128 0x3a
 2137 0114 0B       		.uleb128 0xb
 2138 0115 3B       		.uleb128 0x3b
 2139 0116 0B       		.uleb128 0xb
 2140 0117 27       		.uleb128 0x27
 2141 0118 19       		.uleb128 0x19
 2142 0119 11       		.uleb128 0x11
 2143 011a 01       		.uleb128 0x1
 2144 011b 12       		.uleb128 0x12
 2145 011c 06       		.uleb128 0x6
 2146 011d 40       		.uleb128 0x40
 2147 011e 18       		.uleb128 0x18
 2148 011f 9642     		.uleb128 0x2116
 2149 0121 19       		.uleb128 0x19
 2150 0122 01       		.uleb128 0x1
 2151 0123 13       		.uleb128 0x13
 2152 0124 00       		.byte	0
 2153 0125 00       		.byte	0
 2154 0126 12       		.uleb128 0x12
 2155 0127 34       		.uleb128 0x34
 2156 0128 00       		.byte	0
 2157 0129 03       		.uleb128 0x3
 2158 012a 08       		.uleb128 0x8
 2159 012b 3A       		.uleb128 0x3a
 2160 012c 0B       		.uleb128 0xb
 2161 012d 3B       		.uleb128 0x3b
 2162 012e 0B       		.uleb128 0xb
 2163 012f 49       		.uleb128 0x49
 2164 0130 13       		.uleb128 0x13
 2165 0131 02       		.uleb128 0x2
 2166 0132 18       		.uleb128 0x18
 2167 0133 00       		.byte	0
 2168 0134 00       		.byte	0
 2169 0135 13       		.uleb128 0x13
 2170 0136 2E       		.uleb128 0x2e
 2171 0137 01       		.byte	0x1
 2172 0138 3F       		.uleb128 0x3f
 2173 0139 19       		.uleb128 0x19
 2174 013a 03       		.uleb128 0x3
 2175 013b 0E       		.uleb128 0xe
 2176 013c 3A       		.uleb128 0x3a
 2177 013d 0B       		.uleb128 0xb
 2178 013e 3B       		.uleb128 0x3b
 2179 013f 0B       		.uleb128 0xb
 2180 0140 27       		.uleb128 0x27
 2181 0141 19       		.uleb128 0x19
 2182 0142 11       		.uleb128 0x11
 2183 0143 01       		.uleb128 0x1
 2184 0144 12       		.uleb128 0x12
 2185 0145 06       		.uleb128 0x6
 2186 0146 40       		.uleb128 0x40
 2187 0147 18       		.uleb128 0x18
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 45


 2188 0148 9742     		.uleb128 0x2117
 2189 014a 19       		.uleb128 0x19
 2190 014b 01       		.uleb128 0x1
 2191 014c 13       		.uleb128 0x13
 2192 014d 00       		.byte	0
 2193 014e 00       		.byte	0
 2194 014f 14       		.uleb128 0x14
 2195 0150 2E       		.uleb128 0x2e
 2196 0151 00       		.byte	0
 2197 0152 3F       		.uleb128 0x3f
 2198 0153 19       		.uleb128 0x19
 2199 0154 03       		.uleb128 0x3
 2200 0155 0E       		.uleb128 0xe
 2201 0156 3A       		.uleb128 0x3a
 2202 0157 0B       		.uleb128 0xb
 2203 0158 3B       		.uleb128 0x3b
 2204 0159 0B       		.uleb128 0xb
 2205 015a 27       		.uleb128 0x27
 2206 015b 19       		.uleb128 0x19
 2207 015c 11       		.uleb128 0x11
 2208 015d 01       		.uleb128 0x1
 2209 015e 12       		.uleb128 0x12
 2210 015f 06       		.uleb128 0x6
 2211 0160 40       		.uleb128 0x40
 2212 0161 18       		.uleb128 0x18
 2213 0162 9642     		.uleb128 0x2116
 2214 0164 19       		.uleb128 0x19
 2215 0165 00       		.byte	0
 2216 0166 00       		.byte	0
 2217 0167 15       		.uleb128 0x15
 2218 0168 2E       		.uleb128 0x2e
 2219 0169 01       		.byte	0x1
 2220 016a 3F       		.uleb128 0x3f
 2221 016b 19       		.uleb128 0x19
 2222 016c 03       		.uleb128 0x3
 2223 016d 0E       		.uleb128 0xe
 2224 016e 3A       		.uleb128 0x3a
 2225 016f 0B       		.uleb128 0xb
 2226 0170 3B       		.uleb128 0x3b
 2227 0171 05       		.uleb128 0x5
 2228 0172 27       		.uleb128 0x27
 2229 0173 19       		.uleb128 0x19
 2230 0174 11       		.uleb128 0x11
 2231 0175 01       		.uleb128 0x1
 2232 0176 12       		.uleb128 0x12
 2233 0177 06       		.uleb128 0x6
 2234 0178 40       		.uleb128 0x40
 2235 0179 18       		.uleb128 0x18
 2236 017a 9642     		.uleb128 0x2116
 2237 017c 19       		.uleb128 0x19
 2238 017d 01       		.uleb128 0x1
 2239 017e 13       		.uleb128 0x13
 2240 017f 00       		.byte	0
 2241 0180 00       		.byte	0
 2242 0181 16       		.uleb128 0x16
 2243 0182 05       		.uleb128 0x5
 2244 0183 00       		.byte	0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 46


 2245 0184 03       		.uleb128 0x3
 2246 0185 0E       		.uleb128 0xe
 2247 0186 3A       		.uleb128 0x3a
 2248 0187 0B       		.uleb128 0xb
 2249 0188 3B       		.uleb128 0x3b
 2250 0189 05       		.uleb128 0x5
 2251 018a 49       		.uleb128 0x49
 2252 018b 13       		.uleb128 0x13
 2253 018c 02       		.uleb128 0x2
 2254 018d 18       		.uleb128 0x18
 2255 018e 00       		.byte	0
 2256 018f 00       		.byte	0
 2257 0190 17       		.uleb128 0x17
 2258 0191 2E       		.uleb128 0x2e
 2259 0192 01       		.byte	0x1
 2260 0193 3F       		.uleb128 0x3f
 2261 0194 19       		.uleb128 0x19
 2262 0195 03       		.uleb128 0x3
 2263 0196 0E       		.uleb128 0xe
 2264 0197 3A       		.uleb128 0x3a
 2265 0198 0B       		.uleb128 0xb
 2266 0199 3B       		.uleb128 0x3b
 2267 019a 05       		.uleb128 0x5
 2268 019b 27       		.uleb128 0x27
 2269 019c 19       		.uleb128 0x19
 2270 019d 49       		.uleb128 0x49
 2271 019e 13       		.uleb128 0x13
 2272 019f 11       		.uleb128 0x11
 2273 01a0 01       		.uleb128 0x1
 2274 01a1 12       		.uleb128 0x12
 2275 01a2 06       		.uleb128 0x6
 2276 01a3 40       		.uleb128 0x40
 2277 01a4 18       		.uleb128 0x18
 2278 01a5 9742     		.uleb128 0x2117
 2279 01a7 19       		.uleb128 0x19
 2280 01a8 01       		.uleb128 0x1
 2281 01a9 13       		.uleb128 0x13
 2282 01aa 00       		.byte	0
 2283 01ab 00       		.byte	0
 2284 01ac 18       		.uleb128 0x18
 2285 01ad 05       		.uleb128 0x5
 2286 01ae 00       		.byte	0
 2287 01af 03       		.uleb128 0x3
 2288 01b0 08       		.uleb128 0x8
 2289 01b1 3A       		.uleb128 0x3a
 2290 01b2 0B       		.uleb128 0xb
 2291 01b3 3B       		.uleb128 0x3b
 2292 01b4 05       		.uleb128 0x5
 2293 01b5 49       		.uleb128 0x49
 2294 01b6 13       		.uleb128 0x13
 2295 01b7 02       		.uleb128 0x2
 2296 01b8 18       		.uleb128 0x18
 2297 01b9 00       		.byte	0
 2298 01ba 00       		.byte	0
 2299 01bb 19       		.uleb128 0x19
 2300 01bc 34       		.uleb128 0x34
 2301 01bd 00       		.byte	0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 47


 2302 01be 03       		.uleb128 0x3
 2303 01bf 0E       		.uleb128 0xe
 2304 01c0 3A       		.uleb128 0x3a
 2305 01c1 0B       		.uleb128 0xb
 2306 01c2 3B       		.uleb128 0x3b
 2307 01c3 05       		.uleb128 0x5
 2308 01c4 49       		.uleb128 0x49
 2309 01c5 13       		.uleb128 0x13
 2310 01c6 3F       		.uleb128 0x3f
 2311 01c7 19       		.uleb128 0x19
 2312 01c8 3C       		.uleb128 0x3c
 2313 01c9 19       		.uleb128 0x19
 2314 01ca 00       		.byte	0
 2315 01cb 00       		.byte	0
 2316 01cc 1A       		.uleb128 0x1a
 2317 01cd 35       		.uleb128 0x35
 2318 01ce 00       		.byte	0
 2319 01cf 49       		.uleb128 0x49
 2320 01d0 13       		.uleb128 0x13
 2321 01d1 00       		.byte	0
 2322 01d2 00       		.byte	0
 2323 01d3 1B       		.uleb128 0x1b
 2324 01d4 01       		.uleb128 0x1
 2325 01d5 01       		.byte	0x1
 2326 01d6 49       		.uleb128 0x49
 2327 01d7 13       		.uleb128 0x13
 2328 01d8 01       		.uleb128 0x1
 2329 01d9 13       		.uleb128 0x13
 2330 01da 00       		.byte	0
 2331 01db 00       		.byte	0
 2332 01dc 1C       		.uleb128 0x1c
 2333 01dd 21       		.uleb128 0x21
 2334 01de 00       		.byte	0
 2335 01df 49       		.uleb128 0x49
 2336 01e0 13       		.uleb128 0x13
 2337 01e1 2F       		.uleb128 0x2f
 2338 01e2 0B       		.uleb128 0xb
 2339 01e3 00       		.byte	0
 2340 01e4 00       		.byte	0
 2341 01e5 1D       		.uleb128 0x1d
 2342 01e6 34       		.uleb128 0x34
 2343 01e7 00       		.byte	0
 2344 01e8 03       		.uleb128 0x3
 2345 01e9 0E       		.uleb128 0xe
 2346 01ea 3A       		.uleb128 0x3a
 2347 01eb 0B       		.uleb128 0xb
 2348 01ec 3B       		.uleb128 0x3b
 2349 01ed 0B       		.uleb128 0xb
 2350 01ee 49       		.uleb128 0x49
 2351 01ef 13       		.uleb128 0x13
 2352 01f0 3F       		.uleb128 0x3f
 2353 01f1 19       		.uleb128 0x19
 2354 01f2 02       		.uleb128 0x2
 2355 01f3 18       		.uleb128 0x18
 2356 01f4 00       		.byte	0
 2357 01f5 00       		.byte	0
 2358 01f6 1E       		.uleb128 0x1e
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 48


 2359 01f7 34       		.uleb128 0x34
 2360 01f8 00       		.byte	0
 2361 01f9 03       		.uleb128 0x3
 2362 01fa 0E       		.uleb128 0xe
 2363 01fb 3A       		.uleb128 0x3a
 2364 01fc 0B       		.uleb128 0xb
 2365 01fd 3B       		.uleb128 0x3b
 2366 01fe 0B       		.uleb128 0xb
 2367 01ff 49       		.uleb128 0x49
 2368 0200 13       		.uleb128 0x13
 2369 0201 3F       		.uleb128 0x3f
 2370 0202 19       		.uleb128 0x19
 2371 0203 3C       		.uleb128 0x3c
 2372 0204 19       		.uleb128 0x19
 2373 0205 00       		.byte	0
 2374 0206 00       		.byte	0
 2375 0207 00       		.byte	0
 2376              		.section	.debug_aranges,"",%progbits
 2377 0000 A4000000 		.4byte	0xa4
 2378 0004 0200     		.2byte	0x2
 2379 0006 00000000 		.4byte	.Ldebug_info0
 2380 000a 04       		.byte	0x4
 2381 000b 00       		.byte	0
 2382 000c 0000     		.2byte	0
 2383 000e 0000     		.2byte	0
 2384 0010 00000000 		.4byte	.LFB63
 2385 0014 18000000 		.4byte	.LFE63-.LFB63
 2386 0018 00000000 		.4byte	.LFB64
 2387 001c 18000000 		.4byte	.LFE64-.LFB64
 2388 0020 00000000 		.4byte	.LFB65
 2389 0024 38000000 		.4byte	.LFE65-.LFB65
 2390 0028 00000000 		.4byte	.LFB66
 2391 002c 00020000 		.4byte	.LFE66-.LFB66
 2392 0030 00000000 		.4byte	.LFB67
 2393 0034 1C000000 		.4byte	.LFE67-.LFB67
 2394 0038 00000000 		.4byte	.LFB68
 2395 003c 08010000 		.4byte	.LFE68-.LFB68
 2396 0040 00000000 		.4byte	.LFB69
 2397 0044 28000000 		.4byte	.LFE69-.LFB69
 2398 0048 00000000 		.4byte	.LFB70
 2399 004c 28000000 		.4byte	.LFE70-.LFB70
 2400 0050 00000000 		.4byte	.LFB71
 2401 0054 68000000 		.4byte	.LFE71-.LFB71
 2402 0058 00000000 		.4byte	.LFB72
 2403 005c 20000000 		.4byte	.LFE72-.LFB72
 2404 0060 00000000 		.4byte	.LFB73
 2405 0064 26000000 		.4byte	.LFE73-.LFB73
 2406 0068 00000000 		.4byte	.LFB74
 2407 006c 26000000 		.4byte	.LFE74-.LFB74
 2408 0070 00000000 		.4byte	.LFB75
 2409 0074 32000000 		.4byte	.LFE75-.LFB75
 2410 0078 00000000 		.4byte	.LFB76
 2411 007c 38000000 		.4byte	.LFE76-.LFB76
 2412 0080 00000000 		.4byte	.LFB77
 2413 0084 3C000000 		.4byte	.LFE77-.LFB77
 2414 0088 00000000 		.4byte	.LFB78
 2415 008c 3C000000 		.4byte	.LFE78-.LFB78
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 49


 2416 0090 00000000 		.4byte	.LFB79
 2417 0094 3C000000 		.4byte	.LFE79-.LFB79
 2418 0098 00000000 		.4byte	.LFB80
 2419 009c 24000000 		.4byte	.LFE80-.LFB80
 2420 00a0 00000000 		.4byte	0
 2421 00a4 00000000 		.4byte	0
 2422              		.section	.debug_ranges,"",%progbits
 2423              	.Ldebug_ranges0:
 2424 0000 00000000 		.4byte	.LFB63
 2425 0004 18000000 		.4byte	.LFE63
 2426 0008 00000000 		.4byte	.LFB64
 2427 000c 18000000 		.4byte	.LFE64
 2428 0010 00000000 		.4byte	.LFB65
 2429 0014 38000000 		.4byte	.LFE65
 2430 0018 00000000 		.4byte	.LFB66
 2431 001c 00020000 		.4byte	.LFE66
 2432 0020 00000000 		.4byte	.LFB67
 2433 0024 1C000000 		.4byte	.LFE67
 2434 0028 00000000 		.4byte	.LFB68
 2435 002c 08010000 		.4byte	.LFE68
 2436 0030 00000000 		.4byte	.LFB69
 2437 0034 28000000 		.4byte	.LFE69
 2438 0038 00000000 		.4byte	.LFB70
 2439 003c 28000000 		.4byte	.LFE70
 2440 0040 00000000 		.4byte	.LFB71
 2441 0044 68000000 		.4byte	.LFE71
 2442 0048 00000000 		.4byte	.LFB72
 2443 004c 20000000 		.4byte	.LFE72
 2444 0050 00000000 		.4byte	.LFB73
 2445 0054 26000000 		.4byte	.LFE73
 2446 0058 00000000 		.4byte	.LFB74
 2447 005c 26000000 		.4byte	.LFE74
 2448 0060 00000000 		.4byte	.LFB75
 2449 0064 32000000 		.4byte	.LFE75
 2450 0068 00000000 		.4byte	.LFB76
 2451 006c 38000000 		.4byte	.LFE76
 2452 0070 00000000 		.4byte	.LFB77
 2453 0074 3C000000 		.4byte	.LFE77
 2454 0078 00000000 		.4byte	.LFB78
 2455 007c 3C000000 		.4byte	.LFE78
 2456 0080 00000000 		.4byte	.LFB79
 2457 0084 3C000000 		.4byte	.LFE79
 2458 0088 00000000 		.4byte	.LFB80
 2459 008c 24000000 		.4byte	.LFE80
 2460 0090 00000000 		.4byte	0
 2461 0094 00000000 		.4byte	0
 2462              		.section	.debug_line,"",%progbits
 2463              	.Ldebug_line0:
 2464 0000 35030000 		.section	.debug_str,"MS",%progbits,1
 2464      02007601 
 2464      00000201 
 2464      FB0E0D00 
 2464      01010101 
 2465              	.LASF62:
 2466 0000 2E5C6D6F 		.ascii	".\\motor.c\000"
 2466      746F722E 
 2466      6300
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 50


 2467              	.LASF39:
 2468 000a 73657453 		.ascii	"setSpeed\000"
 2468      70656564 
 2468      00
 2469              	.LASF23:
 2470 0013 75707065 		.ascii	"upper\000"
 2470      7200
 2471              	.LASF56:
 2472 0019 63757272 		.ascii	"currently_rotating\000"
 2472      656E746C 
 2472      795F726F 
 2472      74617469 
 2472      6E6700
 2473              	.LASF50:
 2474 002c 73746172 		.ascii	"start_x\000"
 2474      745F7800 
 2475              	.LASF51:
 2476 0034 73746172 		.ascii	"start_y\000"
 2476      745F7900 
 2477              	.LASF3:
 2478 003c 73686F72 		.ascii	"short int\000"
 2478      7420696E 
 2478      7400
 2479              	.LASF48:
 2480 0046 64657369 		.ascii	"desired_distance\000"
 2480      7265645F 
 2480      64697374 
 2480      616E6365 
 2480      00
 2481              	.LASF9:
 2482 0057 73697A65 		.ascii	"sizetype\000"
 2482      74797065 
 2482      00
 2483              	.LASF60:
 2484 0060 64656C74 		.ascii	"delta_y_distance\000"
 2484      615F795F 
 2484      64697374 
 2484      616E6365 
 2484      00
 2485              	.LASF61:
 2486 0071 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2486      4320342E 
 2486      382E3420 
 2486      32303134 
 2486      30353236 
 2487 00a4 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 2487      20726576 
 2487      6973696F 
 2487      6E203231 
 2487      31333538 
 2488 00d7 30202D66 		.ascii	"0 -ffunction-sections\000"
 2488      66756E63 
 2488      74696F6E 
 2488      2D736563 
 2488      74696F6E 
 2489              	.LASF52:
 2490 00ed 656E645F 		.ascii	"end_x\000"
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 51


 2490      7800
 2491              	.LASF29:
 2492 00f3 676F5F66 		.ascii	"go_forward\000"
 2492      6F727761 
 2492      726400
 2493              	.LASF17:
 2494 00fe 696E7431 		.ascii	"int16\000"
 2494      3600
 2495              	.LASF54:
 2496 0104 6D6F746F 		.ascii	"motor_state\000"
 2496      725F7374 
 2496      61746500 
 2497              	.LASF16:
 2498 0110 75696E74 		.ascii	"uint8\000"
 2498      3800
 2499              	.LASF35:
 2500 0116 726F7461 		.ascii	"rotate_left\000"
 2500      74655F6C 
 2500      65667400 
 2501              	.LASF1:
 2502 0122 7369676E 		.ascii	"signed char\000"
 2502      65642063 
 2502      68617200 
 2503              	.LASF25:
 2504 012e 68656164 		.ascii	"heading_error\000"
 2504      696E675F 
 2504      6572726F 
 2504      7200
 2505              	.LASF44:
 2506 013c 636C6970 		.ascii	"clip\000"
 2506      00
 2507              	.LASF12:
 2508 0141 666C6F61 		.ascii	"float\000"
 2508      7400
 2509              	.LASF42:
 2510 0147 73657446 		.ascii	"setForward\000"
 2510      6F727761 
 2510      726400
 2511              	.LASF22:
 2512 0152 6C6F7765 		.ascii	"lower\000"
 2512      7200
 2513              	.LASF7:
 2514 0158 6C6F6E67 		.ascii	"long long int\000"
 2514      206C6F6E 
 2514      6720696E 
 2514      7400
 2515              	.LASF20:
 2516 0166 6973526F 		.ascii	"isRotating\000"
 2516      74617469 
 2516      6E6700
 2517              	.LASF45:
 2518 0171 61627332 		.ascii	"abs2\000"
 2518      00
 2519              	.LASF57:
 2520 0176 63757272 		.ascii	"currently_driving\000"
 2520      656E746C 
 2520      795F6472 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 52


 2520      6976696E 
 2520      6700
 2521              	.LASF41:
 2522 0188 73657443 		.ascii	"setCoast\000"
 2522      6F617374 
 2522      00
 2523              	.LASF49:
 2524 0191 64657369 		.ascii	"desired_heading\000"
 2524      7265645F 
 2524      68656164 
 2524      696E6700 
 2525              	.LASF28:
 2526 01a1 676F746F 		.ascii	"goto_position\000"
 2526      5F706F73 
 2526      6974696F 
 2526      6E00
 2527              	.LASF13:
 2528 01af 6C6F6E67 		.ascii	"long double\000"
 2528      20646F75 
 2528      626C6500 
 2529              	.LASF2:
 2530 01bb 756E7369 		.ascii	"unsigned char\000"
 2530      676E6564 
 2530      20636861 
 2530      7200
 2531              	.LASF32:
 2532 01c9 726F7461 		.ascii	"rotate_degrees\000"
 2532      74655F64 
 2532      65677265 
 2532      657300
 2533              	.LASF8:
 2534 01d8 6C6F6E67 		.ascii	"long long unsigned int\000"
 2534      206C6F6E 
 2534      6720756E 
 2534      7369676E 
 2534      65642069 
 2535              	.LASF37:
 2536 01ef 726F7461 		.ascii	"rotate_right\000"
 2536      74655F72 
 2536      69676874 
 2536      00
 2537              	.LASF0:
 2538 01fc 756E7369 		.ascii	"unsigned int\000"
 2538      676E6564 
 2538      20696E74 
 2538      00
 2539              	.LASF27:
 2540 0209 636F6E74 		.ascii	"control_motors\000"
 2540      726F6C5F 
 2540      6D6F746F 
 2540      727300
 2541              	.LASF36:
 2542 0218 73706565 		.ascii	"speed\000"
 2542      6400
 2543              	.LASF4:
 2544 021e 73686F72 		.ascii	"short unsigned int\000"
 2544      7420756E 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 53


 2544      7369676E 
 2544      65642069 
 2544      6E7400
 2545              	.LASF10:
 2546 0231 63686172 		.ascii	"char\000"
 2546      00
 2547              	.LASF30:
 2548 0236 64697374 		.ascii	"distance\000"
 2548      616E6365 
 2548      00
 2549              	.LASF5:
 2550 023f 6C6F6E67 		.ascii	"long int\000"
 2550      20696E74 
 2550      00
 2551              	.LASF58:
 2552 0248 636F6D70 		.ascii	"compass_heading\000"
 2552      6173735F 
 2552      68656164 
 2552      696E6700 
 2553              	.LASF15:
 2554 0258 696E7433 		.ascii	"int32_t\000"
 2554      325F7400 
 2555              	.LASF43:
 2556 0260 73657452 		.ascii	"setReverse\000"
 2556      65766572 
 2556      736500
 2557              	.LASF53:
 2558 026b 656E645F 		.ascii	"end_y\000"
 2558      7900
 2559              	.LASF40:
 2560 0271 6D6F746F 		.ascii	"motor\000"
 2560      7200
 2561              	.LASF26:
 2562 0277 64697374 		.ascii	"distance_error\000"
 2562      616E6365 
 2562      5F657272 
 2562      6F7200
 2563              	.LASF6:
 2564 0286 6C6F6E67 		.ascii	"long unsigned int\000"
 2564      20756E73 
 2564      69676E65 
 2564      6420696E 
 2564      7400
 2565              	.LASF38:
 2566 0298 73746172 		.ascii	"start_motors\000"
 2566      745F6D6F 
 2566      746F7273 
 2566      00
 2567              	.LASF18:
 2568 02a5 696E7433 		.ascii	"int32\000"
 2568      3200
 2569              	.LASF65:
 2570 02ab 73746F70 		.ascii	"stop_driving\000"
 2570      5F647269 
 2570      76696E67 
 2570      00
 2571              	.LASF31:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 54


 2572 02b8 676F5F62 		.ascii	"go_backward\000"
 2572      61636B77 
 2572      61726400 
 2573              	.LASF46:
 2574 02c4 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2574      52784275 
 2574      66666572 
 2574      00
 2575              	.LASF14:
 2576 02d1 5F5F696E 		.ascii	"__int32_t\000"
 2576      7433325F 
 2576      7400
 2577              	.LASF59:
 2578 02db 6C6F6361 		.ascii	"location\000"
 2578      74696F6E 
 2578      00
 2579              	.LASF33:
 2580 02e4 73657448 		.ascii	"setHeading\000"
 2580      65616469 
 2580      6E6700
 2581              	.LASF55:
 2582 02ef 6A757374 		.ascii	"just_arrived\000"
 2582      5F617272 
 2582      69766564 
 2582      00
 2583              	.LASF24:
 2584 02fc 6D6F746F 		.ascii	"motor_end_state\000"
 2584      725F656E 
 2584      645F7374 
 2584      61746500 
 2585              	.LASF19:
 2586 030c 616E676C 		.ascii	"angle\000"
 2586      6500
 2587              	.LASF64:
 2588 0312 506F7369 		.ascii	"Position\000"
 2588      74696F6E 
 2588      00
 2589              	.LASF11:
 2590 031b 646F7562 		.ascii	"double\000"
 2590      6C6500
 2591              	.LASF47:
 2592 0322 43616D65 		.ascii	"Camera_framebuffer\000"
 2592      72615F66 
 2592      72616D65 
 2592      62756666 
 2592      657200
 2593              	.LASF63:
 2594 0335 433A5C55 		.ascii	"C:\\Users\\xavieran\\Desktop\\ECE3091\\WorkingCamer"
 2594      73657273 
 2594      5C786176 
 2594      69657261 
 2594      6E5C4465 
 2595 0363 615C576F 		.ascii	"a\\Working-Camera-And-Other\\camera_test.cydsn\000"
 2595      726B696E 
 2595      672D4361 
 2595      6D657261 
 2595      2D416E64 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccB1tEiu.s 			page 55


 2596              	.LASF34:
 2597 0390 6E65775F 		.ascii	"new_heading\000"
 2597      68656164 
 2597      696E6700 
 2598              	.LASF21:
 2599 039c 69734472 		.ascii	"isDriving\000"
 2599      6976696E 
 2599      6700
 2600              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
