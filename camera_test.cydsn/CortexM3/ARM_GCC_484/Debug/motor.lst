ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"motor.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	Camera_framebuffer,50688,4
  19              		.comm	desired_distance,4,4
  20              		.comm	desired_heading,2,2
  21              		.comm	start_x,4,4
  22              		.comm	start_y,4,4
  23              		.comm	end_x,4,4
  24              		.comm	end_y,4,4
  25              		.comm	motor_state,1,1
  26              		.comm	just_arrived,1,1
  27              		.comm	currently_rotating,1,1
  28              		.section	.text.isRotating,"ax",%progbits
  29              		.align	2
  30              		.global	isRotating
  31              		.thumb
  32              		.thumb_func
  33              		.type	isRotating, %function
  34              	isRotating:
  35              	.LFB63:
  36              		.file 1 ".\\motor.c"
   1:.\motor.c     **** /* ========================================
   2:.\motor.c     ****  *
   3:.\motor.c     ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\motor.c     ****  * All Rights Reserved
   5:.\motor.c     ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\motor.c     ****  *
   7:.\motor.c     ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\motor.c     ****  * WHICH IS THE PROPERTY OF your company.
   9:.\motor.c     ****  *
  10:.\motor.c     ****  * ========================================
  11:.\motor.c     **** */
  12:.\motor.c     **** 
  13:.\motor.c     **** #include <math.h>
  14:.\motor.c     **** #include <stdio.h>
  15:.\motor.c     **** 
  16:.\motor.c     **** #include <project.h>
  17:.\motor.c     **** #include <motor.h>
  18:.\motor.c     **** #include <compass.h>
  19:.\motor.c     **** #include <ultrasonic.h>
  20:.\motor.c     **** 
  21:.\motor.c     **** int32 desired_distance;
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 2


  22:.\motor.c     **** int16 desired_heading;
  23:.\motor.c     **** extern volatile uint8 compass_ready;
  24:.\motor.c     **** //The position before executing a move to order
  25:.\motor.c     **** int32 start_x;
  26:.\motor.c     **** int32 start_y;
  27:.\motor.c     **** //The position we wish to go to
  28:.\motor.c     **** int32 end_x;
  29:.\motor.c     **** int32 end_y;
  30:.\motor.c     **** 
  31:.\motor.c     **** //Hold the current state of the motors
  32:.\motor.c     **** uint8 motor_state;
  33:.\motor.c     **** uint8 just_arrived;
  34:.\motor.c     **** uint8 currently_rotating;
  35:.\motor.c     **** uint8 isRotating(){
  37              		.loc 1 35 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41              		@ link register save eliminated.
  42 0000 80B4     		push	{r7}
  43              		.cfi_def_cfa_offset 4
  44              		.cfi_offset 7, -4
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  36:.\motor.c     ****     return currently_rotating;
  47              		.loc 1 36 0
  48 0004 034B     		ldr	r3, .L3
  49 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  37:.\motor.c     **** }
  50              		.loc 1 37 0
  51 0008 1846     		mov	r0, r3
  52 000a BD46     		mov	sp, r7
  53              		@ sp needed
  54 000c 5DF8047B 		ldr	r7, [sp], #4
  55 0010 7047     		bx	lr
  56              	.L4:
  57 0012 00BF     		.align	2
  58              	.L3:
  59 0014 00000000 		.word	currently_rotating
  60              		.cfi_endproc
  61              	.LFE63:
  62              		.size	isRotating, .-isRotating
  63              		.comm	currently_driving,1,1
  64              		.section	.text.isDriving,"ax",%progbits
  65              		.align	2
  66              		.global	isDriving
  67              		.thumb
  68              		.thumb_func
  69              		.type	isDriving, %function
  70              	isDriving:
  71              	.LFB64:
  38:.\motor.c     **** uint8 currently_driving;
  39:.\motor.c     **** uint8 isDriving(){
  72              		.loc 1 39 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 3


  76              		@ link register save eliminated.
  77 0000 80B4     		push	{r7}
  78              		.cfi_def_cfa_offset 4
  79              		.cfi_offset 7, -4
  80 0002 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  40:.\motor.c     ****     return currently_driving;
  82              		.loc 1 40 0
  83 0004 034B     		ldr	r3, .L7
  84 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  41:.\motor.c     **** }
  85              		.loc 1 41 0
  86 0008 1846     		mov	r0, r3
  87 000a BD46     		mov	sp, r7
  88              		@ sp needed
  89 000c 5DF8047B 		ldr	r7, [sp], #4
  90 0010 7047     		bx	lr
  91              	.L8:
  92 0012 00BF     		.align	2
  93              	.L7:
  94 0014 00000000 		.word	currently_driving
  95              		.cfi_endproc
  96              	.LFE64:
  97              		.size	isDriving, .-isDriving
  98              		.global	HEADING_ERROR_LIMIT
  99              		.data
 100              		.type	HEADING_ERROR_LIMIT, %object
 101              		.size	HEADING_ERROR_LIMIT, 1
 102              	HEADING_ERROR_LIMIT:
 103 0000 03       		.byte	3
 104              		.global	STALL_SPEED
 105              		.type	STALL_SPEED, %object
 106              		.size	STALL_SPEED, 1
 107              	STALL_SPEED:
 108 0001 8C       		.byte	-116
 109              		.global	MAX_SPEED
 110              		.type	MAX_SPEED, %object
 111              		.size	MAX_SPEED, 1
 112              	MAX_SPEED:
 113 0002 F0       		.byte	-16
 114              		.comm	outString,25,4
 115              		.section	.text.my6abs,"ax",%progbits
 116              		.align	2
 117              		.global	my6abs
 118              		.thumb
 119              		.thumb_func
 120              		.type	my6abs, %function
 121              	my6abs:
 122              	.LFB65:
  42:.\motor.c     **** 
  43:.\motor.c     **** uint8 HEADING_ERROR_LIMIT = 3;
  44:.\motor.c     **** uint8 STALL_SPEED = ARENA_STALL_SPEED;
  45:.\motor.c     **** uint8 MAX_SPEED = 240;
  46:.\motor.c     **** char outString[25];
  47:.\motor.c     **** 
  48:.\motor.c     **** #define POS_PRINTF(R,C,X,...) \
  49:.\motor.c     ****  {sprintf(outString, X, ##__VA_ARGS__); LCD_Position(R, C); LCD_PrintString(outString);}
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 4


  50:.\motor.c     **** 
  51:.\motor.c     **** 
  52:.\motor.c     **** 
  53:.\motor.c     **** // From compass.c
  54:.\motor.c     **** extern int16 compass_heading;
  55:.\motor.c     **** // From navigation.c
  56:.\motor.c     **** extern volatile struct Position location;
  57:.\motor.c     **** 
  58:.\motor.c     **** void rotate_left(int speed);
  59:.\motor.c     **** void rotate_right(int speed);
  60:.\motor.c     **** int16 abs2(int16 val);
  61:.\motor.c     **** 
  62:.\motor.c     **** 
  63:.\motor.c     **** int my6abs(x){
 123              		.loc 1 63 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 8
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128 0000 80B4     		push	{r7}
 129              		.cfi_def_cfa_offset 4
 130              		.cfi_offset 7, -4
 131 0002 83B0     		sub	sp, sp, #12
 132              		.cfi_def_cfa_offset 16
 133 0004 00AF     		add	r7, sp, #0
 134              		.cfi_def_cfa_register 7
 135 0006 7860     		str	r0, [r7, #4]
  64:.\motor.c     ****     if (x < 0){
 136              		.loc 1 64 0
 137 0008 7B68     		ldr	r3, [r7, #4]
 138 000a 002B     		cmp	r3, #0
 139 000c 02DA     		bge	.L10
  65:.\motor.c     ****         return -x;
 140              		.loc 1 65 0
 141 000e 7B68     		ldr	r3, [r7, #4]
 142 0010 5B42     		negs	r3, r3
 143 0012 00E0     		b	.L11
 144              	.L10:
  66:.\motor.c     ****     } else {
  67:.\motor.c     ****         return x;
 145              		.loc 1 67 0
 146 0014 7B68     		ldr	r3, [r7, #4]
 147              	.L11:
  68:.\motor.c     ****     }
  69:.\motor.c     **** }
 148              		.loc 1 69 0
 149 0016 1846     		mov	r0, r3
 150 0018 0C37     		adds	r7, r7, #12
 151 001a BD46     		mov	sp, r7
 152              		@ sp needed
 153 001c 5DF8047B 		ldr	r7, [sp], #4
 154 0020 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE65:
 157              		.size	my6abs, .-my6abs
 158 0022 00BF     		.section	.text.clip,"ax",%progbits
 159              		.align	2
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 5


 160              		.global	clip
 161              		.thumb
 162              		.thumb_func
 163              		.type	clip, %function
 164              	clip:
 165              	.LFB66:
  70:.\motor.c     **** 
  71:.\motor.c     **** uint8 clip(int lower, int var, int upper){
 166              		.loc 1 71 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 16
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171 0000 80B4     		push	{r7}
 172              		.cfi_def_cfa_offset 4
 173              		.cfi_offset 7, -4
 174 0002 85B0     		sub	sp, sp, #20
 175              		.cfi_def_cfa_offset 24
 176 0004 00AF     		add	r7, sp, #0
 177              		.cfi_def_cfa_register 7
 178 0006 F860     		str	r0, [r7, #12]
 179 0008 B960     		str	r1, [r7, #8]
 180 000a 7A60     		str	r2, [r7, #4]
  72:.\motor.c     ****     if (var > upper){
 181              		.loc 1 72 0
 182 000c BA68     		ldr	r2, [r7, #8]
 183 000e 7B68     		ldr	r3, [r7, #4]
 184 0010 9A42     		cmp	r2, r3
 185 0012 02DD     		ble	.L13
  73:.\motor.c     ****         return upper;
 186              		.loc 1 73 0
 187 0014 7B68     		ldr	r3, [r7, #4]
 188 0016 DBB2     		uxtb	r3, r3
 189 0018 08E0     		b	.L14
 190              	.L13:
  74:.\motor.c     ****     } else if (var < lower) {
 191              		.loc 1 74 0
 192 001a BA68     		ldr	r2, [r7, #8]
 193 001c FB68     		ldr	r3, [r7, #12]
 194 001e 9A42     		cmp	r2, r3
 195 0020 02DA     		bge	.L15
  75:.\motor.c     ****         return lower;
 196              		.loc 1 75 0
 197 0022 FB68     		ldr	r3, [r7, #12]
 198 0024 DBB2     		uxtb	r3, r3
 199 0026 01E0     		b	.L14
 200              	.L15:
  76:.\motor.c     ****     } else {
  77:.\motor.c     ****         return var;
 201              		.loc 1 77 0
 202 0028 BB68     		ldr	r3, [r7, #8]
 203 002a DBB2     		uxtb	r3, r3
 204              	.L14:
  78:.\motor.c     ****     }
  79:.\motor.c     **** }
 205              		.loc 1 79 0
 206 002c 1846     		mov	r0, r3
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 6


 207 002e 1437     		adds	r7, r7, #20
 208 0030 BD46     		mov	sp, r7
 209              		@ sp needed
 210 0032 5DF8047B 		ldr	r7, [sp], #4
 211 0036 7047     		bx	lr
 212              		.cfi_endproc
 213              	.LFE66:
 214              		.size	clip, .-clip
 215              		.section	.text.control_heading,"ax",%progbits
 216              		.align	2
 217              		.global	control_heading
 218              		.thumb
 219              		.thumb_func
 220              		.type	control_heading, %function
 221              	control_heading:
 222              	.LFB67:
  80:.\motor.c     **** 
  81:.\motor.c     **** /** This function is to be called every time through the main loop 
  82:.\motor.c     ****  * It will 
  83:.\motor.c     ****  */
  84:.\motor.c     **** 
  85:.\motor.c     **** int control_heading(){
 223              		.loc 1 85 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 8
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227 0000 90B5     		push	{r4, r7, lr}
 228              		.cfi_def_cfa_offset 12
 229              		.cfi_offset 4, -12
 230              		.cfi_offset 7, -8
 231              		.cfi_offset 14, -4
 232 0002 83B0     		sub	sp, sp, #12
 233              		.cfi_def_cfa_offset 24
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
  86:.\motor.c     ****     /* 
  87:.\motor.c     ****      * Step 1. Correct the heading 
  88:.\motor.c     ****      */
  89:.\motor.c     ****     while (!compass_ready){;}
 236              		.loc 1 89 0
 237 0006 00BF     		nop
 238              	.L17:
 239              		.loc 1 89 0 is_stmt 0 discriminator 1
 240 0008 3B4B     		ldr	r3, .L23
 241 000a 1B78     		ldrb	r3, [r3]
 242 000c DBB2     		uxtb	r3, r3
 243 000e 002B     		cmp	r3, #0
 244 0010 FAD0     		beq	.L17
  90:.\motor.c     ****     compass_read();
 245              		.loc 1 90 0 is_stmt 1
 246 0012 FFF7FEFF 		bl	compass_read
  91:.\motor.c     ****     int16 heading_error = desired_heading - compass_heading;
 247              		.loc 1 91 0
 248 0016 394B     		ldr	r3, .L23+4
 249 0018 1B88     		ldrh	r3, [r3]
 250 001a 9AB2     		uxth	r2, r3
 251 001c 384B     		ldr	r3, .L23+8
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 7


 252 001e 1B88     		ldrh	r3, [r3]
 253 0020 9BB2     		uxth	r3, r3
 254 0022 D31A     		subs	r3, r2, r3
 255 0024 9BB2     		uxth	r3, r3
 256 0026 FB80     		strh	r3, [r7, #6]	@ movhi
  92:.\motor.c     ****     heading_error = heading_error % 360;
 257              		.loc 1 92 0
 258 0028 B7F90630 		ldrsh	r3, [r7, #6]
 259 002c 354A     		ldr	r2, .L23+12
 260 002e 83FB0201 		smull	r0, r1, r3, r2
 261 0032 5A18     		adds	r2, r3, r1
 262 0034 1112     		asrs	r1, r2, #8
 263 0036 DA17     		asrs	r2, r3, #31
 264 0038 8A1A     		subs	r2, r1, r2
 265 003a 4FF4B471 		mov	r1, #360
 266 003e 01FB02F2 		mul	r2, r1, r2
 267 0042 9B1A     		subs	r3, r3, r2
 268 0044 FB80     		strh	r3, [r7, #6]	@ movhi
  93:.\motor.c     ****     //POS_PRINTF(0,0,"d%d c%d e%d", desired_heading, compass_heading, heading_error);
  94:.\motor.c     ****     // If the error is greater than 180, there is a shorter way around the unit 
  95:.\motor.c     ****     // circle, this corrects that
  96:.\motor.c     ****     if (my6abs(heading_error) > 180){
 269              		.loc 1 96 0
 270 0046 B7F90630 		ldrsh	r3, [r7, #6]
 271 004a 1846     		mov	r0, r3
 272 004c FFF7FEFF 		bl	my6abs
 273 0050 0346     		mov	r3, r0
 274 0052 B42B     		cmp	r3, #180
 275 0054 0DDD     		ble	.L18
  97:.\motor.c     ****         heading_error = -(desired_heading - (360 - compass_heading));
 276              		.loc 1 97 0
 277 0056 2A4B     		ldr	r3, .L23+8
 278 0058 1B88     		ldrh	r3, [r3]
 279 005a 9BB2     		uxth	r3, r3
 280 005c 5B42     		negs	r3, r3
 281 005e 9AB2     		uxth	r2, r3
 282 0060 264B     		ldr	r3, .L23+4
 283 0062 1B88     		ldrh	r3, [r3]
 284 0064 9BB2     		uxth	r3, r3
 285 0066 D31A     		subs	r3, r2, r3
 286 0068 9BB2     		uxth	r3, r3
 287 006a 03F5B473 		add	r3, r3, #360
 288 006e 9BB2     		uxth	r3, r3
 289 0070 FB80     		strh	r3, [r7, #6]	@ movhi
 290              	.L18:
  98:.\motor.c     ****     }
  99:.\motor.c     ****     // We need to correct the heading if the error is greater than 
 100:.\motor.c     ****     if (my6abs(heading_error) > HEADING_ERROR_LIMIT){ 
 291              		.loc 1 100 0
 292 0072 B7F90630 		ldrsh	r3, [r7, #6]
 293 0076 1846     		mov	r0, r3
 294 0078 FFF7FEFF 		bl	my6abs
 295 007c 0246     		mov	r2, r0
 296 007e 224B     		ldr	r3, .L23+16
 297 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 298 0082 9A42     		cmp	r2, r3
 299 0084 30DD     		ble	.L19
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 8


 101:.\motor.c     ****         // the actual heading is greater than the desired heading
 102:.\motor.c     ****         if (heading_error < 0){ 
 300              		.loc 1 102 0
 301 0086 B7F90630 		ldrsh	r3, [r7, #6]
 302 008a 002B     		cmp	r3, #0
 303 008c 15DA     		bge	.L20
 103:.\motor.c     ****             rotate_left(clip(STALL_SPEED, my6abs(heading_error)*2, MAX_SPEED));
 304              		.loc 1 103 0
 305 008e 1F4B     		ldr	r3, .L23+20
 306 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 307 0092 1C46     		mov	r4, r3
 308 0094 B7F90630 		ldrsh	r3, [r7, #6]
 309 0098 1846     		mov	r0, r3
 310 009a FFF7FEFF 		bl	my6abs
 311 009e 0346     		mov	r3, r0
 312 00a0 5A00     		lsls	r2, r3, #1
 313 00a2 1B4B     		ldr	r3, .L23+24
 314 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 315 00a6 2046     		mov	r0, r4
 316 00a8 1146     		mov	r1, r2
 317 00aa 1A46     		mov	r2, r3
 318 00ac FFF7FEFF 		bl	clip
 319 00b0 0346     		mov	r3, r0
 320 00b2 1846     		mov	r0, r3
 321 00b4 FFF7FEFF 		bl	rotate_left
 322 00b8 14E0     		b	.L21
 323              	.L20:
 104:.\motor.c     ****         } else {
 105:.\motor.c     ****             rotate_right(clip(STALL_SPEED, my6abs(heading_error)*2, MAX_SPEED));
 324              		.loc 1 105 0
 325 00ba 144B     		ldr	r3, .L23+20
 326 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 327 00be 1C46     		mov	r4, r3
 328 00c0 B7F90630 		ldrsh	r3, [r7, #6]
 329 00c4 1846     		mov	r0, r3
 330 00c6 FFF7FEFF 		bl	my6abs
 331 00ca 0346     		mov	r3, r0
 332 00cc 5A00     		lsls	r2, r3, #1
 333 00ce 104B     		ldr	r3, .L23+24
 334 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 335 00d2 2046     		mov	r0, r4
 336 00d4 1146     		mov	r1, r2
 337 00d6 1A46     		mov	r2, r3
 338 00d8 FFF7FEFF 		bl	clip
 339 00dc 0346     		mov	r3, r0
 340 00de 1846     		mov	r0, r3
 341 00e0 FFF7FEFF 		bl	rotate_right
 342              	.L21:
 106:.\motor.c     ****         }
 107:.\motor.c     ****         
 108:.\motor.c     ****         return MEND_S_ROTATING;
 343              		.loc 1 108 0
 344 00e4 0123     		movs	r3, #1
 345 00e6 03E0     		b	.L22
 346              	.L19:
 109:.\motor.c     ****     }
 110:.\motor.c     ****     setCoast(MBOTH);
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 9


 347              		.loc 1 110 0
 348 00e8 0320     		movs	r0, #3
 349 00ea FFF7FEFF 		bl	setCoast
 111:.\motor.c     ****     
 112:.\motor.c     ****     return MEND_S_STOPPED;
 350              		.loc 1 112 0
 351 00ee 0023     		movs	r3, #0
 352              	.L22:
 113:.\motor.c     **** }
 353              		.loc 1 113 0
 354 00f0 1846     		mov	r0, r3
 355 00f2 0C37     		adds	r7, r7, #12
 356 00f4 BD46     		mov	sp, r7
 357              		@ sp needed
 358 00f6 90BD     		pop	{r4, r7, pc}
 359              	.L24:
 360              		.align	2
 361              	.L23:
 362 00f8 00000000 		.word	compass_ready
 363 00fc 00000000 		.word	desired_heading
 364 0100 00000000 		.word	compass_heading
 365 0104 B7600BB6 		.word	-1240768329
 366 0108 00000000 		.word	HEADING_ERROR_LIMIT
 367 010c 00000000 		.word	STALL_SPEED
 368 0110 00000000 		.word	MAX_SPEED
 369              		.cfi_endproc
 370              	.LFE67:
 371              		.size	control_heading, .-control_heading
 372              		.section	.text.go_forward,"ax",%progbits
 373              		.align	2
 374              		.global	go_forward
 375              		.thumb
 376              		.thumb_func
 377              		.type	go_forward, %function
 378              	go_forward:
 379              	.LFB68:
 114:.\motor.c     **** 
 115:.\motor.c     **** /* 
 116:.\motor.c     ****  * Makes the robot drive forward *time* seconds BLOCKING
 117:.\motor.c     ****  */
 118:.\motor.c     **** void go_forward(uint32 time, uint8 speed){
 380              		.loc 1 118 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 16
 383              		@ frame_needed = 1, uses_anonymous_args = 0
 384 0000 80B5     		push	{r7, lr}
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 0002 84B0     		sub	sp, sp, #16
 389              		.cfi_def_cfa_offset 24
 390 0004 00AF     		add	r7, sp, #0
 391              		.cfi_def_cfa_register 7
 392 0006 7860     		str	r0, [r7, #4]
 393 0008 0B46     		mov	r3, r1
 394 000a FB70     		strb	r3, [r7, #3]
 119:.\motor.c     ****     time = time * 10;
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 10


 395              		.loc 1 119 0
 396 000c 7A68     		ldr	r2, [r7, #4]
 397 000e 1346     		mov	r3, r2
 398 0010 9B00     		lsls	r3, r3, #2
 399 0012 1344     		add	r3, r3, r2
 400 0014 5B00     		lsls	r3, r3, #1
 401 0016 7B60     		str	r3, [r7, #4]
 120:.\motor.c     ****     uint32 start_time = Timer_ReadCounter(); // each tick is 100us
 402              		.loc 1 120 0
 403 0018 FFF7FEFF 		bl	Timer_ReadCounter
 404 001c F860     		str	r0, [r7, #12]
 121:.\motor.c     ****     while (start_time - Timer_ReadCounter() < time){
 405              		.loc 1 121 0
 406 001e 0CE0     		b	.L26
 407              	.L27:
 122:.\motor.c     ****         setForward(MBOTH);
 408              		.loc 1 122 0
 409 0020 0320     		movs	r0, #3
 410 0022 FFF7FEFF 		bl	setForward
 123:.\motor.c     ****         setSpeed(MBOTH, speed);
 411              		.loc 1 123 0
 412 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 413 0028 0320     		movs	r0, #3
 414 002a 1946     		mov	r1, r3
 415 002c FFF7FEFF 		bl	setSpeed
 124:.\motor.c     ****         control_heading();
 416              		.loc 1 124 0
 417 0030 FFF7FEFF 		bl	control_heading
 125:.\motor.c     ****         CyDelay(25);
 418              		.loc 1 125 0
 419 0034 1920     		movs	r0, #25
 420 0036 FFF7FEFF 		bl	CyDelay
 421              	.L26:
 121:.\motor.c     ****     while (start_time - Timer_ReadCounter() < time){
 422              		.loc 1 121 0 discriminator 1
 423 003a FFF7FEFF 		bl	Timer_ReadCounter
 424 003e 0346     		mov	r3, r0
 425 0040 FA68     		ldr	r2, [r7, #12]
 426 0042 D21A     		subs	r2, r2, r3
 427 0044 7B68     		ldr	r3, [r7, #4]
 428 0046 9A42     		cmp	r2, r3
 429 0048 EAD3     		bcc	.L27
 126:.\motor.c     ****     }
 127:.\motor.c     ****     setCoast(MBOTH);
 430              		.loc 1 127 0
 431 004a 0320     		movs	r0, #3
 432 004c FFF7FEFF 		bl	setCoast
 128:.\motor.c     **** }
 433              		.loc 1 128 0
 434 0050 1037     		adds	r7, r7, #16
 435 0052 BD46     		mov	sp, r7
 436              		@ sp needed
 437 0054 80BD     		pop	{r7, pc}
 438              		.cfi_endproc
 439              	.LFE68:
 440              		.size	go_forward, .-go_forward
 441 0056 00BF     		.section	.text.go_backward,"ax",%progbits
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 11


 442              		.align	2
 443              		.global	go_backward
 444              		.thumb
 445              		.thumb_func
 446              		.type	go_backward, %function
 447              	go_backward:
 448              	.LFB69:
 129:.\motor.c     **** 
 130:.\motor.c     **** /*
 131:.\motor.c     ****  * Makes the robot drive backward *distance* centimeters
 132:.\motor.c     ****  */
 133:.\motor.c     **** void go_backward(uint32 time, uint8 speed){
 449              		.loc 1 133 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 16
 452              		@ frame_needed = 1, uses_anonymous_args = 0
 453 0000 80B5     		push	{r7, lr}
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 7, -8
 456              		.cfi_offset 14, -4
 457 0002 84B0     		sub	sp, sp, #16
 458              		.cfi_def_cfa_offset 24
 459 0004 00AF     		add	r7, sp, #0
 460              		.cfi_def_cfa_register 7
 461 0006 7860     		str	r0, [r7, #4]
 462 0008 0B46     		mov	r3, r1
 463 000a FB70     		strb	r3, [r7, #3]
 134:.\motor.c     ****     time = time * 10;
 464              		.loc 1 134 0
 465 000c 7A68     		ldr	r2, [r7, #4]
 466 000e 1346     		mov	r3, r2
 467 0010 9B00     		lsls	r3, r3, #2
 468 0012 1344     		add	r3, r3, r2
 469 0014 5B00     		lsls	r3, r3, #1
 470 0016 7B60     		str	r3, [r7, #4]
 135:.\motor.c     ****     uint32 start_time = Timer_ReadCounter(); // each tick is 100us
 471              		.loc 1 135 0
 472 0018 FFF7FEFF 		bl	Timer_ReadCounter
 473 001c F860     		str	r0, [r7, #12]
 136:.\motor.c     ****     while (start_time - Timer_ReadCounter() < time){
 474              		.loc 1 136 0
 475 001e 0CE0     		b	.L29
 476              	.L30:
 137:.\motor.c     ****         setReverse(MBOTH);
 477              		.loc 1 137 0
 478 0020 0320     		movs	r0, #3
 479 0022 FFF7FEFF 		bl	setReverse
 138:.\motor.c     ****         setSpeed(MBOTH, speed);
 480              		.loc 1 138 0
 481 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 482 0028 0320     		movs	r0, #3
 483 002a 1946     		mov	r1, r3
 484 002c FFF7FEFF 		bl	setSpeed
 139:.\motor.c     ****         control_heading();
 485              		.loc 1 139 0
 486 0030 FFF7FEFF 		bl	control_heading
 140:.\motor.c     ****         CyDelay(25);
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 12


 487              		.loc 1 140 0
 488 0034 1920     		movs	r0, #25
 489 0036 FFF7FEFF 		bl	CyDelay
 490              	.L29:
 136:.\motor.c     ****     while (start_time - Timer_ReadCounter() < time){
 491              		.loc 1 136 0 discriminator 1
 492 003a FFF7FEFF 		bl	Timer_ReadCounter
 493 003e 0346     		mov	r3, r0
 494 0040 FA68     		ldr	r2, [r7, #12]
 495 0042 D21A     		subs	r2, r2, r3
 496 0044 7B68     		ldr	r3, [r7, #4]
 497 0046 9A42     		cmp	r2, r3
 498 0048 EAD3     		bcc	.L30
 141:.\motor.c     ****     }
 142:.\motor.c     ****     setCoast(MBOTH);
 499              		.loc 1 142 0
 500 004a 0320     		movs	r0, #3
 501 004c FFF7FEFF 		bl	setCoast
 143:.\motor.c     **** }
 502              		.loc 1 143 0
 503 0050 1037     		adds	r7, r7, #16
 504 0052 BD46     		mov	sp, r7
 505              		@ sp needed
 506 0054 80BD     		pop	{r7, pc}
 507              		.cfi_endproc
 508              	.LFE69:
 509              		.size	go_backward, .-go_backward
 510 0056 00BF     		.section	.text.go_backward_ultra,"ax",%progbits
 511              		.align	2
 512              		.global	go_backward_ultra
 513              		.thumb
 514              		.thumb_func
 515              		.type	go_backward_ultra, %function
 516              	go_backward_ultra:
 517              	.LFB70:
 144:.\motor.c     **** 
 145:.\motor.c     **** 
 146:.\motor.c     **** void go_backward_ultra(uint16 ultra_dist, uint8 speed){
 518              		.loc 1 146 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 8
 521              		@ frame_needed = 1, uses_anonymous_args = 0
 522 0000 80B5     		push	{r7, lr}
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 7, -8
 525              		.cfi_offset 14, -4
 526 0002 82B0     		sub	sp, sp, #8
 527              		.cfi_def_cfa_offset 16
 528 0004 00AF     		add	r7, sp, #0
 529              		.cfi_def_cfa_register 7
 530 0006 0246     		mov	r2, r0
 531 0008 0B46     		mov	r3, r1
 532 000a FA80     		strh	r2, [r7, #6]	@ movhi
 533 000c 7B71     		strb	r3, [r7, #5]
 147:.\motor.c     ****     while (get_mean_ultra() < ultra_dist){
 534              		.loc 1 147 0
 535 000e 0CE0     		b	.L32
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 13


 536              	.L33:
 148:.\motor.c     ****         setReverse(MBOTH);
 537              		.loc 1 148 0
 538 0010 0320     		movs	r0, #3
 539 0012 FFF7FEFF 		bl	setReverse
 149:.\motor.c     ****         setSpeed(MBOTH, speed);
 540              		.loc 1 149 0
 541 0016 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 542 0018 0320     		movs	r0, #3
 543 001a 1946     		mov	r1, r3
 544 001c FFF7FEFF 		bl	setSpeed
 150:.\motor.c     ****         control_heading();
 545              		.loc 1 150 0
 546 0020 FFF7FEFF 		bl	control_heading
 151:.\motor.c     ****         CyDelay(25);
 547              		.loc 1 151 0
 548 0024 1920     		movs	r0, #25
 549 0026 FFF7FEFF 		bl	CyDelay
 550              	.L32:
 147:.\motor.c     ****     while (get_mean_ultra() < ultra_dist){
 551              		.loc 1 147 0 discriminator 1
 552 002a FFF7FEFF 		bl	get_mean_ultra
 553 002e 0346     		mov	r3, r0
 554 0030 FA88     		ldrh	r2, [r7, #6]
 555 0032 9A42     		cmp	r2, r3
 556 0034 ECD8     		bhi	.L33
 152:.\motor.c     ****     }
 153:.\motor.c     ****     setCoast(MBOTH);
 557              		.loc 1 153 0
 558 0036 0320     		movs	r0, #3
 559 0038 FFF7FEFF 		bl	setCoast
 154:.\motor.c     **** }
 560              		.loc 1 154 0
 561 003c 0837     		adds	r7, r7, #8
 562 003e BD46     		mov	sp, r7
 563              		@ sp needed
 564 0040 80BD     		pop	{r7, pc}
 565              		.cfi_endproc
 566              	.LFE70:
 567              		.size	go_backward_ultra, .-go_backward_ultra
 568 0042 00BF     		.section	.text.rotate_degrees,"ax",%progbits
 569              		.align	2
 570              		.global	rotate_degrees
 571              		.thumb
 572              		.thumb_func
 573              		.type	rotate_degrees, %function
 574              	rotate_degrees:
 575              	.LFB71:
 155:.\motor.c     **** 
 156:.\motor.c     **** /*
 157:.\motor.c     ****  * Makes the robot rotate *angle* degrees.
 158:.\motor.c     ****  * angle > 0 rotates right, angle < 0 rotates left
 159:.\motor.c     ****  */
 160:.\motor.c     **** void rotate_degrees(int16 angle){
 576              		.loc 1 160 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 14


 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 0000 80B5     		push	{r7, lr}
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 82B0     		sub	sp, sp, #8
 585              		.cfi_def_cfa_offset 16
 586 0004 00AF     		add	r7, sp, #0
 587              		.cfi_def_cfa_register 7
 588 0006 0346     		mov	r3, r0
 589 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 161:.\motor.c     ****     desired_heading += angle;
 590              		.loc 1 161 0
 591 000a 124B     		ldr	r3, .L36
 592 000c 1B88     		ldrh	r3, [r3]
 593 000e 9AB2     		uxth	r2, r3
 594 0010 FB88     		ldrh	r3, [r7, #6]
 595 0012 1344     		add	r3, r3, r2
 596 0014 9BB2     		uxth	r3, r3
 597 0016 9AB2     		uxth	r2, r3
 598 0018 0E4B     		ldr	r3, .L36
 599 001a 1A80     		strh	r2, [r3]	@ movhi
 162:.\motor.c     ****     desired_heading = desired_heading % 360;
 600              		.loc 1 162 0
 601 001c 0D4B     		ldr	r3, .L36
 602 001e 1B88     		ldrh	r3, [r3]
 603 0020 1BB2     		sxth	r3, r3
 604 0022 0D4A     		ldr	r2, .L36+4
 605 0024 83FB0201 		smull	r0, r1, r3, r2
 606 0028 5A18     		adds	r2, r3, r1
 607 002a 1112     		asrs	r1, r2, #8
 608 002c DA17     		asrs	r2, r3, #31
 609 002e 8A1A     		subs	r2, r1, r2
 610 0030 4FF4B471 		mov	r1, #360
 611 0034 01FB02F2 		mul	r2, r1, r2
 612 0038 9B1A     		subs	r3, r3, r2
 613 003a 9AB2     		uxth	r2, r3
 614 003c 054B     		ldr	r3, .L36
 615 003e 1A80     		strh	r2, [r3]	@ movhi
 163:.\motor.c     ****     
 164:.\motor.c     ****     while (control_heading() != MEND_S_STOPPED){
 616              		.loc 1 164 0
 617 0040 00BF     		nop
 618              	.L35:
 619              		.loc 1 164 0 is_stmt 0 discriminator 1
 620 0042 FFF7FEFF 		bl	control_heading
 621 0046 0346     		mov	r3, r0
 622 0048 002B     		cmp	r3, #0
 623 004a FAD1     		bne	.L35
 165:.\motor.c     ****         /*LCD_ClearDisplay();
 166:.\motor.c     ****         POS_PRINTF(1,0,"%d %d", desired_heading, compass_heading);
 167:.\motor.c     ****         CyDelay(50);*/
 168:.\motor.c     ****     }
 169:.\motor.c     **** }
 624              		.loc 1 169 0 is_stmt 1
 625 004c 0837     		adds	r7, r7, #8
 626 004e BD46     		mov	sp, r7
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 15


 627              		@ sp needed
 628 0050 80BD     		pop	{r7, pc}
 629              	.L37:
 630 0052 00BF     		.align	2
 631              	.L36:
 632 0054 00000000 		.word	desired_heading
 633 0058 B7600BB6 		.word	-1240768329
 634              		.cfi_endproc
 635              	.LFE71:
 636              		.size	rotate_degrees, .-rotate_degrees
 637              		.section	.text.set_heading,"ax",%progbits
 638              		.align	2
 639              		.global	set_heading
 640              		.thumb
 641              		.thumb_func
 642              		.type	set_heading, %function
 643              	set_heading:
 644              	.LFB72:
 170:.\motor.c     **** /* 
 171:.\motor.c     ****  * Sets the robots heading to *new_heading*
 172:.\motor.c     ****  */
 173:.\motor.c     **** void set_heading(int16 new_heading){
 645              		.loc 1 173 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 8
 648              		@ frame_needed = 1, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650 0000 80B4     		push	{r7}
 651              		.cfi_def_cfa_offset 4
 652              		.cfi_offset 7, -4
 653 0002 83B0     		sub	sp, sp, #12
 654              		.cfi_def_cfa_offset 16
 655 0004 00AF     		add	r7, sp, #0
 656              		.cfi_def_cfa_register 7
 657 0006 0346     		mov	r3, r0
 658 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 174:.\motor.c     ****     desired_heading = new_heading;
 659              		.loc 1 174 0
 660 000a 044B     		ldr	r3, .L39
 661 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 662 000e 1A80     		strh	r2, [r3]	@ movhi
 175:.\motor.c     **** }
 663              		.loc 1 175 0
 664 0010 0C37     		adds	r7, r7, #12
 665 0012 BD46     		mov	sp, r7
 666              		@ sp needed
 667 0014 5DF8047B 		ldr	r7, [sp], #4
 668 0018 7047     		bx	lr
 669              	.L40:
 670 001a 00BF     		.align	2
 671              	.L39:
 672 001c 00000000 		.word	desired_heading
 673              		.cfi_endproc
 674              	.LFE72:
 675              		.size	set_heading, .-set_heading
 676              		.section	.text.rotate_left,"ax",%progbits
 677              		.align	2
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 16


 678              		.global	rotate_left
 679              		.thumb
 680              		.thumb_func
 681              		.type	rotate_left, %function
 682              	rotate_left:
 683              	.LFB73:
 176:.\motor.c     **** 
 177:.\motor.c     **** /* 
 178:.\motor.c     ****  * Sets the motors to rotate the robot left
 179:.\motor.c     ****  */
 180:.\motor.c     **** void rotate_left(int speed){
 684              		.loc 1 180 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 8
 687              		@ frame_needed = 1, uses_anonymous_args = 0
 688 0000 80B5     		push	{r7, lr}
 689              		.cfi_def_cfa_offset 8
 690              		.cfi_offset 7, -8
 691              		.cfi_offset 14, -4
 692 0002 82B0     		sub	sp, sp, #8
 693              		.cfi_def_cfa_offset 16
 694 0004 00AF     		add	r7, sp, #0
 695              		.cfi_def_cfa_register 7
 696 0006 7860     		str	r0, [r7, #4]
 181:.\motor.c     ****     setForward(MRIGHT);
 697              		.loc 1 181 0
 698 0008 0220     		movs	r0, #2
 699 000a FFF7FEFF 		bl	setForward
 182:.\motor.c     ****     setReverse(MLEFT);
 700              		.loc 1 182 0
 701 000e 0120     		movs	r0, #1
 702 0010 FFF7FEFF 		bl	setReverse
 183:.\motor.c     ****     setSpeed(MBOTH, speed);
 703              		.loc 1 183 0
 704 0014 7B68     		ldr	r3, [r7, #4]
 705 0016 DBB2     		uxtb	r3, r3
 706 0018 0320     		movs	r0, #3
 707 001a 1946     		mov	r1, r3
 708 001c FFF7FEFF 		bl	setSpeed
 184:.\motor.c     **** }
 709              		.loc 1 184 0
 710 0020 0837     		adds	r7, r7, #8
 711 0022 BD46     		mov	sp, r7
 712              		@ sp needed
 713 0024 80BD     		pop	{r7, pc}
 714              		.cfi_endproc
 715              	.LFE73:
 716              		.size	rotate_left, .-rotate_left
 717 0026 00BF     		.section	.text.rotate_right,"ax",%progbits
 718              		.align	2
 719              		.global	rotate_right
 720              		.thumb
 721              		.thumb_func
 722              		.type	rotate_right, %function
 723              	rotate_right:
 724              	.LFB74:
 185:.\motor.c     **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 17


 186:.\motor.c     **** 
 187:.\motor.c     **** 
 188:.\motor.c     **** /*
 189:.\motor.c     ****  * Sets the motors to rotate the robot right at *speed*
 190:.\motor.c     ****  */
 191:.\motor.c     **** void rotate_right(int speed){
 725              		.loc 1 191 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 8
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729 0000 80B5     		push	{r7, lr}
 730              		.cfi_def_cfa_offset 8
 731              		.cfi_offset 7, -8
 732              		.cfi_offset 14, -4
 733 0002 82B0     		sub	sp, sp, #8
 734              		.cfi_def_cfa_offset 16
 735 0004 00AF     		add	r7, sp, #0
 736              		.cfi_def_cfa_register 7
 737 0006 7860     		str	r0, [r7, #4]
 192:.\motor.c     ****     setForward(MLEFT);
 738              		.loc 1 192 0
 739 0008 0120     		movs	r0, #1
 740 000a FFF7FEFF 		bl	setForward
 193:.\motor.c     ****     setReverse(MRIGHT);
 741              		.loc 1 193 0
 742 000e 0220     		movs	r0, #2
 743 0010 FFF7FEFF 		bl	setReverse
 194:.\motor.c     ****     setSpeed(MBOTH, speed);
 744              		.loc 1 194 0
 745 0014 7B68     		ldr	r3, [r7, #4]
 746 0016 DBB2     		uxtb	r3, r3
 747 0018 0320     		movs	r0, #3
 748 001a 1946     		mov	r1, r3
 749 001c FFF7FEFF 		bl	setSpeed
 195:.\motor.c     **** }
 750              		.loc 1 195 0
 751 0020 0837     		adds	r7, r7, #8
 752 0022 BD46     		mov	sp, r7
 753              		@ sp needed
 754 0024 80BD     		pop	{r7, pc}
 755              		.cfi_endproc
 756              	.LFE74:
 757              		.size	rotate_right, .-rotate_right
 758 0026 00BF     		.section	.text.start_motors,"ax",%progbits
 759              		.align	2
 760              		.global	start_motors
 761              		.thumb
 762              		.thumb_func
 763              		.type	start_motors, %function
 764              	start_motors:
 765              	.LFB75:
 196:.\motor.c     **** 
 197:.\motor.c     **** 
 198:.\motor.c     **** /*
 199:.\motor.c     ****  * Initializes the motor PWM modules and sets the motors to stopped
 200:.\motor.c     ****  */
 201:.\motor.c     **** void start_motors(){
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 18


 766              		.loc 1 201 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 1, uses_anonymous_args = 0
 770 0000 80B5     		push	{r7, lr}
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 7, -8
 773              		.cfi_offset 14, -4
 774 0002 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
 202:.\motor.c     ****     MOTOR_L_Start();
 776              		.loc 1 202 0
 777 0004 FFF7FEFF 		bl	MOTOR_L_Start
 203:.\motor.c     ****     MLIN1_Write(0);
 778              		.loc 1 203 0
 779 0008 0020     		movs	r0, #0
 780 000a FFF7FEFF 		bl	MLIN1_Write
 204:.\motor.c     ****     MLIN2_Write(0);
 781              		.loc 1 204 0
 782 000e 0020     		movs	r0, #0
 783 0010 FFF7FEFF 		bl	MLIN2_Write
 205:.\motor.c     ****     MOTOR_L_WriteCompare(0);
 784              		.loc 1 205 0
 785 0014 0020     		movs	r0, #0
 786 0016 FFF7FEFF 		bl	MOTOR_L_WriteCompare
 206:.\motor.c     ****        
 207:.\motor.c     ****     MOTOR_R_Start();
 787              		.loc 1 207 0
 788 001a FFF7FEFF 		bl	MOTOR_R_Start
 208:.\motor.c     ****     MRIN1_Write(0);
 789              		.loc 1 208 0
 790 001e 0020     		movs	r0, #0
 791 0020 FFF7FEFF 		bl	MRIN1_Write
 209:.\motor.c     ****     MRIN2_Write(0);
 792              		.loc 1 209 0
 793 0024 0020     		movs	r0, #0
 794 0026 FFF7FEFF 		bl	MRIN2_Write
 210:.\motor.c     ****     MOTOR_R_WriteCompare(0);
 795              		.loc 1 210 0
 796 002a 0020     		movs	r0, #0
 797 002c FFF7FEFF 		bl	MOTOR_R_WriteCompare
 211:.\motor.c     **** }
 798              		.loc 1 211 0
 799 0030 80BD     		pop	{r7, pc}
 800              		.cfi_endproc
 801              	.LFE75:
 802              		.size	start_motors, .-start_motors
 803 0032 00BF     		.section	.text.setSpeed,"ax",%progbits
 804              		.align	2
 805              		.global	setSpeed
 806              		.thumb
 807              		.thumb_func
 808              		.type	setSpeed, %function
 809              	setSpeed:
 810              	.LFB76:
 212:.\motor.c     **** 
 213:.\motor.c     **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 19


 214:.\motor.c     **** /*
 215:.\motor.c     ****  * Set *motor* speed to *speed*
 216:.\motor.c     ****  * Speed between 0 and 255. Note that the motors won't start to actually push
 217:.\motor.c     ****  * the robot forward til around 100
 218:.\motor.c     ****  */ 
 219:.\motor.c     **** void setSpeed(uint8 motor, uint8 speed){
 811              		.loc 1 219 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 8
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815 0000 80B5     		push	{r7, lr}
 816              		.cfi_def_cfa_offset 8
 817              		.cfi_offset 7, -8
 818              		.cfi_offset 14, -4
 819 0002 82B0     		sub	sp, sp, #8
 820              		.cfi_def_cfa_offset 16
 821 0004 00AF     		add	r7, sp, #0
 822              		.cfi_def_cfa_register 7
 823 0006 0246     		mov	r2, r0
 824 0008 0B46     		mov	r3, r1
 825 000a FA71     		strb	r2, [r7, #7]
 826 000c BB71     		strb	r3, [r7, #6]
 220:.\motor.c     ****     /* Set bit 1 of motor to select motor 1 
 221:.\motor.c     ****      * Set bit 2 of motor to select motor 2
 222:.\motor.c     ****      */
 223:.\motor.c     ****     if (motor & MRIGHT){
 827              		.loc 1 223 0
 828 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 829 0010 03F00203 		and	r3, r3, #2
 830 0014 002B     		cmp	r3, #0
 831 0016 03D0     		beq	.L45
 224:.\motor.c     ****         MOTOR_R_WriteCompare(speed);
 832              		.loc 1 224 0
 833 0018 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 834 001a 1846     		mov	r0, r3
 835 001c FFF7FEFF 		bl	MOTOR_R_WriteCompare
 836              	.L45:
 225:.\motor.c     ****     }
 226:.\motor.c     ****     if (motor & MLEFT){ //Slow down the left motor because it tends to be faster
 837              		.loc 1 226 0
 838 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 839 0022 03F00103 		and	r3, r3, #1
 840 0026 002B     		cmp	r3, #0
 841 0028 03D0     		beq	.L44
 227:.\motor.c     ****         MOTOR_L_WriteCompare(speed - LEFT_MOTOR_SPEED_CORRECTION);
 842              		.loc 1 227 0
 843 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 844 002c 1846     		mov	r0, r3
 845 002e FFF7FEFF 		bl	MOTOR_L_WriteCompare
 846              	.L44:
 228:.\motor.c     ****     }
 229:.\motor.c     **** }
 847              		.loc 1 229 0
 848 0032 0837     		adds	r7, r7, #8
 849 0034 BD46     		mov	sp, r7
 850              		@ sp needed
 851 0036 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 20


 852              		.cfi_endproc
 853              	.LFE76:
 854              		.size	setSpeed, .-setSpeed
 855              		.section	.text.setCoast,"ax",%progbits
 856              		.align	2
 857              		.global	setCoast
 858              		.thumb
 859              		.thumb_func
 860              		.type	setCoast, %function
 861              	setCoast:
 862              	.LFB77:
 230:.\motor.c     **** 
 231:.\motor.c     **** 
 232:.\motor.c     **** /*
 233:.\motor.c     ****  * Set *motor* to coast
 234:.\motor.c     ****  */ 
 235:.\motor.c     **** void setCoast(uint8 motor){
 863              		.loc 1 235 0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 8
 866              		@ frame_needed = 1, uses_anonymous_args = 0
 867 0000 80B5     		push	{r7, lr}
 868              		.cfi_def_cfa_offset 8
 869              		.cfi_offset 7, -8
 870              		.cfi_offset 14, -4
 871 0002 82B0     		sub	sp, sp, #8
 872              		.cfi_def_cfa_offset 16
 873 0004 00AF     		add	r7, sp, #0
 874              		.cfi_def_cfa_register 7
 875 0006 0346     		mov	r3, r0
 876 0008 FB71     		strb	r3, [r7, #7]
 236:.\motor.c     ****         if (motor & MLEFT){
 877              		.loc 1 236 0
 878 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 879 000c 03F00103 		and	r3, r3, #1
 880 0010 002B     		cmp	r3, #0
 881 0012 05D0     		beq	.L48
 237:.\motor.c     ****         MLIN1_Write(0);
 882              		.loc 1 237 0
 883 0014 0020     		movs	r0, #0
 884 0016 FFF7FEFF 		bl	MLIN1_Write
 238:.\motor.c     ****         MLIN2_Write(0);
 885              		.loc 1 238 0
 886 001a 0020     		movs	r0, #0
 887 001c FFF7FEFF 		bl	MLIN2_Write
 888              	.L48:
 239:.\motor.c     ****     }
 240:.\motor.c     ****     
 241:.\motor.c     ****     if (motor & MRIGHT){
 889              		.loc 1 241 0
 890 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 891 0022 03F00203 		and	r3, r3, #2
 892 0026 002B     		cmp	r3, #0
 893 0028 05D0     		beq	.L47
 242:.\motor.c     ****         MRIN1_Write(0);
 894              		.loc 1 242 0
 895 002a 0020     		movs	r0, #0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 21


 896 002c FFF7FEFF 		bl	MRIN1_Write
 243:.\motor.c     ****         MRIN2_Write(0);
 897              		.loc 1 243 0
 898 0030 0020     		movs	r0, #0
 899 0032 FFF7FEFF 		bl	MRIN2_Write
 900              	.L47:
 244:.\motor.c     ****     }
 245:.\motor.c     **** }
 901              		.loc 1 245 0
 902 0036 0837     		adds	r7, r7, #8
 903 0038 BD46     		mov	sp, r7
 904              		@ sp needed
 905 003a 80BD     		pop	{r7, pc}
 906              		.cfi_endproc
 907              	.LFE77:
 908              		.size	setCoast, .-setCoast
 909              		.section	.text.setForward,"ax",%progbits
 910              		.align	2
 911              		.global	setForward
 912              		.thumb
 913              		.thumb_func
 914              		.type	setForward, %function
 915              	setForward:
 916              	.LFB78:
 246:.\motor.c     **** 
 247:.\motor.c     **** 
 248:.\motor.c     **** /*
 249:.\motor.c     ****  * Set *motor* to forward drive
 250:.\motor.c     ****  */ 
 251:.\motor.c     **** void setForward(uint8 motor){
 917              		.loc 1 251 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 8
 920              		@ frame_needed = 1, uses_anonymous_args = 0
 921 0000 80B5     		push	{r7, lr}
 922              		.cfi_def_cfa_offset 8
 923              		.cfi_offset 7, -8
 924              		.cfi_offset 14, -4
 925 0002 82B0     		sub	sp, sp, #8
 926              		.cfi_def_cfa_offset 16
 927 0004 00AF     		add	r7, sp, #0
 928              		.cfi_def_cfa_register 7
 929 0006 0346     		mov	r3, r0
 930 0008 FB71     		strb	r3, [r7, #7]
 252:.\motor.c     ****     if (motor & MLEFT){
 931              		.loc 1 252 0
 932 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 933 000c 03F00103 		and	r3, r3, #1
 934 0010 002B     		cmp	r3, #0
 935 0012 05D0     		beq	.L51
 253:.\motor.c     ****         MLIN1_Write(1);
 936              		.loc 1 253 0
 937 0014 0120     		movs	r0, #1
 938 0016 FFF7FEFF 		bl	MLIN1_Write
 254:.\motor.c     ****         MLIN2_Write(0);
 939              		.loc 1 254 0
 940 001a 0020     		movs	r0, #0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 22


 941 001c FFF7FEFF 		bl	MLIN2_Write
 942              	.L51:
 255:.\motor.c     ****     }
 256:.\motor.c     ****     
 257:.\motor.c     ****     if (motor & MRIGHT){
 943              		.loc 1 257 0
 944 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 945 0022 03F00203 		and	r3, r3, #2
 946 0026 002B     		cmp	r3, #0
 947 0028 05D0     		beq	.L50
 258:.\motor.c     ****         MRIN1_Write(1);
 948              		.loc 1 258 0
 949 002a 0120     		movs	r0, #1
 950 002c FFF7FEFF 		bl	MRIN1_Write
 259:.\motor.c     ****         MRIN2_Write(0);
 951              		.loc 1 259 0
 952 0030 0020     		movs	r0, #0
 953 0032 FFF7FEFF 		bl	MRIN2_Write
 954              	.L50:
 260:.\motor.c     ****     }
 261:.\motor.c     **** }
 955              		.loc 1 261 0
 956 0036 0837     		adds	r7, r7, #8
 957 0038 BD46     		mov	sp, r7
 958              		@ sp needed
 959 003a 80BD     		pop	{r7, pc}
 960              		.cfi_endproc
 961              	.LFE78:
 962              		.size	setForward, .-setForward
 963              		.section	.text.setReverse,"ax",%progbits
 964              		.align	2
 965              		.global	setReverse
 966              		.thumb
 967              		.thumb_func
 968              		.type	setReverse, %function
 969              	setReverse:
 970              	.LFB79:
 262:.\motor.c     **** 
 263:.\motor.c     **** /*
 264:.\motor.c     ****  * Set *motor* to reverse drive
 265:.\motor.c     ****  */ 
 266:.\motor.c     **** void setReverse(uint8 motor){
 971              		.loc 1 266 0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 8
 974              		@ frame_needed = 1, uses_anonymous_args = 0
 975 0000 80B5     		push	{r7, lr}
 976              		.cfi_def_cfa_offset 8
 977              		.cfi_offset 7, -8
 978              		.cfi_offset 14, -4
 979 0002 82B0     		sub	sp, sp, #8
 980              		.cfi_def_cfa_offset 16
 981 0004 00AF     		add	r7, sp, #0
 982              		.cfi_def_cfa_register 7
 983 0006 0346     		mov	r3, r0
 984 0008 FB71     		strb	r3, [r7, #7]
 267:.\motor.c     ****     if (motor & MLEFT){
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 23


 985              		.loc 1 267 0
 986 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 987 000c 03F00103 		and	r3, r3, #1
 988 0010 002B     		cmp	r3, #0
 989 0012 05D0     		beq	.L54
 268:.\motor.c     ****         MLIN1_Write(0);
 990              		.loc 1 268 0
 991 0014 0020     		movs	r0, #0
 992 0016 FFF7FEFF 		bl	MLIN1_Write
 269:.\motor.c     ****         MLIN2_Write(1);
 993              		.loc 1 269 0
 994 001a 0120     		movs	r0, #1
 995 001c FFF7FEFF 		bl	MLIN2_Write
 996              	.L54:
 270:.\motor.c     ****     }
 271:.\motor.c     ****     
 272:.\motor.c     ****     if (motor & MRIGHT){
 997              		.loc 1 272 0
 998 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 999 0022 03F00203 		and	r3, r3, #2
 1000 0026 002B     		cmp	r3, #0
 1001 0028 05D0     		beq	.L53
 273:.\motor.c     ****         MRIN1_Write(0);
 1002              		.loc 1 273 0
 1003 002a 0020     		movs	r0, #0
 1004 002c FFF7FEFF 		bl	MRIN1_Write
 274:.\motor.c     ****         MRIN2_Write(1);
 1005              		.loc 1 274 0
 1006 0030 0120     		movs	r0, #1
 1007 0032 FFF7FEFF 		bl	MRIN2_Write
 1008              	.L53:
 275:.\motor.c     ****     }
 276:.\motor.c     **** }
 1009              		.loc 1 276 0
 1010 0036 0837     		adds	r7, r7, #8
 1011 0038 BD46     		mov	sp, r7
 1012              		@ sp needed
 1013 003a 80BD     		pop	{r7, pc}
 1014              		.cfi_endproc
 1015              	.LFE79:
 1016              		.size	setReverse, .-setReverse
 1017              		.text
 1018              	.Letext0:
 1019              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 1020              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 1021              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1022              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1023              		.file 6 "Generated_Source\\PSoC5/Camera.h"
 1024              		.section	.debug_info,"",%progbits
 1025              	.Ldebug_info0:
 1026 0000 DE040000 		.4byte	0x4de
 1027 0004 0400     		.2byte	0x4
 1028 0006 00000000 		.4byte	.Ldebug_abbrev0
 1029 000a 04       		.byte	0x4
 1030 000b 01       		.uleb128 0x1
 1031 000c 69000000 		.4byte	.LASF65
 1032 0010 01       		.byte	0x1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 24


 1033 0011 00000000 		.4byte	.LASF66
 1034 0015 5A030000 		.4byte	.LASF67
 1035 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1036 001d 00000000 		.4byte	0
 1037 0021 00000000 		.4byte	.Ldebug_line0
 1038 0025 02       		.uleb128 0x2
 1039 0026 04       		.byte	0x4
 1040 0027 05       		.byte	0x5
 1041 0028 696E7400 		.ascii	"int\000"
 1042 002c 03       		.uleb128 0x3
 1043 002d 04       		.byte	0x4
 1044 002e 07       		.byte	0x7
 1045 002f 22020000 		.4byte	.LASF0
 1046 0033 03       		.uleb128 0x3
 1047 0034 01       		.byte	0x1
 1048 0035 06       		.byte	0x6
 1049 0036 21010000 		.4byte	.LASF1
 1050 003a 03       		.uleb128 0x3
 1051 003b 01       		.byte	0x1
 1052 003c 08       		.byte	0x8
 1053 003d CF010000 		.4byte	.LASF2
 1054 0041 03       		.uleb128 0x3
 1055 0042 02       		.byte	0x2
 1056 0043 05       		.byte	0x5
 1057 0044 4C000000 		.4byte	.LASF3
 1058 0048 03       		.uleb128 0x3
 1059 0049 02       		.byte	0x2
 1060 004a 07       		.byte	0x7
 1061 004b 3A020000 		.4byte	.LASF4
 1062 004f 04       		.uleb128 0x4
 1063 0050 FF020000 		.4byte	.LASF14
 1064 0054 02       		.byte	0x2
 1065 0055 37       		.byte	0x37
 1066 0056 5A000000 		.4byte	0x5a
 1067 005a 03       		.uleb128 0x3
 1068 005b 04       		.byte	0x4
 1069 005c 05       		.byte	0x5
 1070 005d 52020000 		.4byte	.LASF5
 1071 0061 03       		.uleb128 0x3
 1072 0062 04       		.byte	0x4
 1073 0063 07       		.byte	0x7
 1074 0064 C7020000 		.4byte	.LASF6
 1075 0068 03       		.uleb128 0x3
 1076 0069 08       		.byte	0x8
 1077 006a 05       		.byte	0x5
 1078 006b 57010000 		.4byte	.LASF7
 1079 006f 03       		.uleb128 0x3
 1080 0070 08       		.byte	0x8
 1081 0071 07       		.byte	0x7
 1082 0072 FE010000 		.4byte	.LASF8
 1083 0076 03       		.uleb128 0x3
 1084 0077 04       		.byte	0x4
 1085 0078 07       		.byte	0x7
 1086 0079 56000000 		.4byte	.LASF9
 1087 007d 03       		.uleb128 0x3
 1088 007e 01       		.byte	0x1
 1089 007f 08       		.byte	0x8
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 25


 1090 0080 4D020000 		.4byte	.LASF10
 1091 0084 05       		.uleb128 0x5
 1092 0085 7D000000 		.4byte	0x7d
 1093 0089 94000000 		.4byte	0x94
 1094 008d 06       		.uleb128 0x6
 1095 008e 76000000 		.4byte	0x76
 1096 0092 18       		.byte	0x18
 1097 0093 00       		.byte	0
 1098 0094 03       		.uleb128 0x3
 1099 0095 08       		.byte	0x8
 1100 0096 04       		.byte	0x4
 1101 0097 EC020000 		.4byte	.LASF11
 1102 009b 03       		.uleb128 0x3
 1103 009c 04       		.byte	0x4
 1104 009d 04       		.byte	0x4
 1105 009e 40010000 		.4byte	.LASF12
 1106 00a2 03       		.uleb128 0x3
 1107 00a3 08       		.byte	0x8
 1108 00a4 04       		.byte	0x4
 1109 00a5 C3010000 		.4byte	.LASF13
 1110 00a9 04       		.uleb128 0x4
 1111 00aa 6B020000 		.4byte	.LASF15
 1112 00ae 03       		.byte	0x3
 1113 00af 41       		.byte	0x41
 1114 00b0 4F000000 		.4byte	0x4f
 1115 00b4 04       		.uleb128 0x4
 1116 00b5 0F010000 		.4byte	.LASF16
 1117 00b9 04       		.byte	0x4
 1118 00ba B3       		.byte	0xb3
 1119 00bb 3A000000 		.4byte	0x3a
 1120 00bf 04       		.uleb128 0x4
 1121 00c0 E5000000 		.4byte	.LASF17
 1122 00c4 04       		.byte	0x4
 1123 00c5 B4       		.byte	0xb4
 1124 00c6 48000000 		.4byte	0x48
 1125 00ca 04       		.uleb128 0x4
 1126 00cb C0020000 		.4byte	.LASF18
 1127 00cf 04       		.byte	0x4
 1128 00d0 B5       		.byte	0xb5
 1129 00d1 61000000 		.4byte	0x61
 1130 00d5 04       		.uleb128 0x4
 1131 00d6 FD000000 		.4byte	.LASF19
 1132 00da 04       		.byte	0x4
 1133 00db B7       		.byte	0xb7
 1134 00dc 41000000 		.4byte	0x41
 1135 00e0 04       		.uleb128 0x4
 1136 00e1 E6020000 		.4byte	.LASF20
 1137 00e5 04       		.byte	0x4
 1138 00e6 B8       		.byte	0xb8
 1139 00e7 5A000000 		.4byte	0x5a
 1140 00eb 07       		.uleb128 0x7
 1141 00ec B4000000 		.4byte	0xb4
 1142 00f0 08       		.uleb128 0x8
 1143 00f1 65010000 		.4byte	.LASF21
 1144 00f5 01       		.byte	0x1
 1145 00f6 23       		.byte	0x23
 1146 00f7 B4000000 		.4byte	0xb4
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 26


 1147 00fb 00000000 		.4byte	.LFB63
 1148 00ff 18000000 		.4byte	.LFE63-.LFB63
 1149 0103 01       		.uleb128 0x1
 1150 0104 9C       		.byte	0x9c
 1151 0105 08       		.uleb128 0x8
 1152 0106 50030000 		.4byte	.LASF22
 1153 010a 01       		.byte	0x1
 1154 010b 27       		.byte	0x27
 1155 010c B4000000 		.4byte	0xb4
 1156 0110 00000000 		.4byte	.LFB64
 1157 0114 18000000 		.4byte	.LFE64-.LFB64
 1158 0118 01       		.uleb128 0x1
 1159 0119 9C       		.byte	0x9c
 1160 011a 09       		.uleb128 0x9
 1161 011b 8F010000 		.4byte	.LASF25
 1162 011f 01       		.byte	0x1
 1163 0120 3F       		.byte	0x3f
 1164 0121 25000000 		.4byte	0x25
 1165 0125 00000000 		.4byte	.LFB65
 1166 0129 22000000 		.4byte	.LFE65-.LFB65
 1167 012d 01       		.uleb128 0x1
 1168 012e 9C       		.byte	0x9c
 1169 012f 40010000 		.4byte	0x140
 1170 0133 0A       		.uleb128 0xa
 1171 0134 7800     		.ascii	"x\000"
 1172 0136 01       		.byte	0x1
 1173 0137 3F       		.byte	0x3f
 1174 0138 25000000 		.4byte	0x25
 1175 013c 02       		.uleb128 0x2
 1176 013d 91       		.byte	0x91
 1177 013e 74       		.sleb128 -12
 1178 013f 00       		.byte	0
 1179 0140 0B       		.uleb128 0xb
 1180 0141 3B010000 		.4byte	.LASF68
 1181 0145 01       		.byte	0x1
 1182 0146 47       		.byte	0x47
 1183 0147 B4000000 		.4byte	0xb4
 1184 014b 00000000 		.4byte	.LFB66
 1185 014f 38000000 		.4byte	.LFE66-.LFB66
 1186 0153 01       		.uleb128 0x1
 1187 0154 9C       		.byte	0x9c
 1188 0155 84010000 		.4byte	0x184
 1189 0159 0C       		.uleb128 0xc
 1190 015a 51010000 		.4byte	.LASF23
 1191 015e 01       		.byte	0x1
 1192 015f 47       		.byte	0x47
 1193 0160 25000000 		.4byte	0x25
 1194 0164 02       		.uleb128 0x2
 1195 0165 91       		.byte	0x91
 1196 0166 74       		.sleb128 -12
 1197 0167 0A       		.uleb128 0xa
 1198 0168 76617200 		.ascii	"var\000"
 1199 016c 01       		.byte	0x1
 1200 016d 47       		.byte	0x47
 1201 016e 25000000 		.4byte	0x25
 1202 0172 02       		.uleb128 0x2
 1203 0173 91       		.byte	0x91
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 27


 1204 0174 70       		.sleb128 -16
 1205 0175 0C       		.uleb128 0xc
 1206 0176 23000000 		.4byte	.LASF24
 1207 017a 01       		.byte	0x1
 1208 017b 47       		.byte	0x47
 1209 017c 25000000 		.4byte	0x25
 1210 0180 02       		.uleb128 0x2
 1211 0181 91       		.byte	0x91
 1212 0182 6C       		.sleb128 -20
 1213 0183 00       		.byte	0
 1214 0184 0D       		.uleb128 0xd
 1215 0185 13000000 		.4byte	.LASF26
 1216 0189 01       		.byte	0x1
 1217 018a 55       		.byte	0x55
 1218 018b 25000000 		.4byte	0x25
 1219 018f 00000000 		.4byte	.LFB67
 1220 0193 14010000 		.4byte	.LFE67-.LFB67
 1221 0197 01       		.uleb128 0x1
 1222 0198 9C       		.byte	0x9c
 1223 0199 AC010000 		.4byte	0x1ac
 1224 019d 0E       		.uleb128 0xe
 1225 019e 2D010000 		.4byte	.LASF30
 1226 01a2 01       		.byte	0x1
 1227 01a3 5B       		.byte	0x5b
 1228 01a4 D5000000 		.4byte	0xd5
 1229 01a8 02       		.uleb128 0x2
 1230 01a9 91       		.byte	0x91
 1231 01aa 6E       		.sleb128 -18
 1232 01ab 00       		.byte	0
 1233 01ac 0F       		.uleb128 0xf
 1234 01ad F2000000 		.4byte	.LASF27
 1235 01b1 01       		.byte	0x1
 1236 01b2 76       		.byte	0x76
 1237 01b3 00000000 		.4byte	.LFB68
 1238 01b7 56000000 		.4byte	.LFE68-.LFB68
 1239 01bb 01       		.uleb128 0x1
 1240 01bc 9C       		.byte	0x9c
 1241 01bd EC010000 		.4byte	0x1ec
 1242 01c1 0C       		.uleb128 0xc
 1243 01c2 35020000 		.4byte	.LASF28
 1244 01c6 01       		.byte	0x1
 1245 01c7 76       		.byte	0x76
 1246 01c8 CA000000 		.4byte	0xca
 1247 01cc 02       		.uleb128 0x2
 1248 01cd 91       		.byte	0x91
 1249 01ce 6C       		.sleb128 -20
 1250 01cf 0C       		.uleb128 0xc
 1251 01d0 2F020000 		.4byte	.LASF29
 1252 01d4 01       		.byte	0x1
 1253 01d5 76       		.byte	0x76
 1254 01d6 B4000000 		.4byte	0xb4
 1255 01da 02       		.uleb128 0x2
 1256 01db 91       		.byte	0x91
 1257 01dc 6B       		.sleb128 -21
 1258 01dd 0E       		.uleb128 0xe
 1259 01de 98020000 		.4byte	.LASF31
 1260 01e2 01       		.byte	0x1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 28


 1261 01e3 78       		.byte	0x78
 1262 01e4 CA000000 		.4byte	0xca
 1263 01e8 02       		.uleb128 0x2
 1264 01e9 91       		.byte	0x91
 1265 01ea 74       		.sleb128 -12
 1266 01eb 00       		.byte	0
 1267 01ec 0F       		.uleb128 0xf
 1268 01ed F3020000 		.4byte	.LASF32
 1269 01f1 01       		.byte	0x1
 1270 01f2 85       		.byte	0x85
 1271 01f3 00000000 		.4byte	.LFB69
 1272 01f7 56000000 		.4byte	.LFE69-.LFB69
 1273 01fb 01       		.uleb128 0x1
 1274 01fc 9C       		.byte	0x9c
 1275 01fd 2C020000 		.4byte	0x22c
 1276 0201 0C       		.uleb128 0xc
 1277 0202 35020000 		.4byte	.LASF28
 1278 0206 01       		.byte	0x1
 1279 0207 85       		.byte	0x85
 1280 0208 CA000000 		.4byte	0xca
 1281 020c 02       		.uleb128 0x2
 1282 020d 91       		.byte	0x91
 1283 020e 6C       		.sleb128 -20
 1284 020f 0C       		.uleb128 0xc
 1285 0210 2F020000 		.4byte	.LASF29
 1286 0214 01       		.byte	0x1
 1287 0215 85       		.byte	0x85
 1288 0216 B4000000 		.4byte	0xb4
 1289 021a 02       		.uleb128 0x2
 1290 021b 91       		.byte	0x91
 1291 021c 6B       		.sleb128 -21
 1292 021d 0E       		.uleb128 0xe
 1293 021e 98020000 		.4byte	.LASF31
 1294 0222 01       		.byte	0x1
 1295 0223 87       		.byte	0x87
 1296 0224 CA000000 		.4byte	0xca
 1297 0228 02       		.uleb128 0x2
 1298 0229 91       		.byte	0x91
 1299 022a 74       		.sleb128 -12
 1300 022b 00       		.byte	0
 1301 022c 0F       		.uleb128 0xf
 1302 022d EC010000 		.4byte	.LASF33
 1303 0231 01       		.byte	0x1
 1304 0232 92       		.byte	0x92
 1305 0233 00000000 		.4byte	.LFB70
 1306 0237 42000000 		.4byte	.LFE70-.LFB70
 1307 023b 01       		.uleb128 0x1
 1308 023c 9C       		.byte	0x9c
 1309 023d 5E020000 		.4byte	0x25e
 1310 0241 0C       		.uleb128 0xc
 1311 0242 19030000 		.4byte	.LASF34
 1312 0246 01       		.byte	0x1
 1313 0247 92       		.byte	0x92
 1314 0248 BF000000 		.4byte	0xbf
 1315 024c 02       		.uleb128 0x2
 1316 024d 91       		.byte	0x91
 1317 024e 76       		.sleb128 -10
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 29


 1318 024f 0C       		.uleb128 0xc
 1319 0250 2F020000 		.4byte	.LASF29
 1320 0254 01       		.byte	0x1
 1321 0255 92       		.byte	0x92
 1322 0256 B4000000 		.4byte	0xb4
 1323 025a 02       		.uleb128 0x2
 1324 025b 91       		.byte	0x91
 1325 025c 75       		.sleb128 -11
 1326 025d 00       		.byte	0
 1327 025e 0F       		.uleb128 0xf
 1328 025f DD010000 		.4byte	.LASF35
 1329 0263 01       		.byte	0x1
 1330 0264 A0       		.byte	0xa0
 1331 0265 00000000 		.4byte	.LFB71
 1332 0269 5C000000 		.4byte	.LFE71-.LFB71
 1333 026d 01       		.uleb128 0x1
 1334 026e 9C       		.byte	0x9c
 1335 026f 82020000 		.4byte	0x282
 1336 0273 0C       		.uleb128 0xc
 1337 0274 13030000 		.4byte	.LASF36
 1338 0278 01       		.byte	0x1
 1339 0279 A0       		.byte	0xa0
 1340 027a D5000000 		.4byte	0xd5
 1341 027e 02       		.uleb128 0x2
 1342 027f 91       		.byte	0x91
 1343 0280 76       		.sleb128 -10
 1344 0281 00       		.byte	0
 1345 0282 10       		.uleb128 0x10
 1346 0283 B4020000 		.4byte	.LASF37
 1347 0287 01       		.byte	0x1
 1348 0288 AD       		.byte	0xad
 1349 0289 00000000 		.4byte	.LFB72
 1350 028d 20000000 		.4byte	.LFE72-.LFB72
 1351 0291 01       		.uleb128 0x1
 1352 0292 9C       		.byte	0x9c
 1353 0293 A6020000 		.4byte	0x2a6
 1354 0297 0C       		.uleb128 0xc
 1355 0298 44030000 		.4byte	.LASF38
 1356 029c 01       		.byte	0x1
 1357 029d AD       		.byte	0xad
 1358 029e D5000000 		.4byte	0xd5
 1359 02a2 02       		.uleb128 0x2
 1360 02a3 91       		.byte	0x91
 1361 02a4 76       		.sleb128 -10
 1362 02a5 00       		.byte	0
 1363 02a6 0F       		.uleb128 0xf
 1364 02a7 15010000 		.4byte	.LASF39
 1365 02ab 01       		.byte	0x1
 1366 02ac B4       		.byte	0xb4
 1367 02ad 00000000 		.4byte	.LFB73
 1368 02b1 26000000 		.4byte	.LFE73-.LFB73
 1369 02b5 01       		.uleb128 0x1
 1370 02b6 9C       		.byte	0x9c
 1371 02b7 CA020000 		.4byte	0x2ca
 1372 02bb 0C       		.uleb128 0xc
 1373 02bc 2F020000 		.4byte	.LASF29
 1374 02c0 01       		.byte	0x1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 30


 1375 02c1 B4       		.byte	0xb4
 1376 02c2 25000000 		.4byte	0x25
 1377 02c6 02       		.uleb128 0x2
 1378 02c7 91       		.byte	0x91
 1379 02c8 74       		.sleb128 -12
 1380 02c9 00       		.byte	0
 1381 02ca 0F       		.uleb128 0xf
 1382 02cb 15020000 		.4byte	.LASF40
 1383 02cf 01       		.byte	0x1
 1384 02d0 BF       		.byte	0xbf
 1385 02d1 00000000 		.4byte	.LFB74
 1386 02d5 26000000 		.4byte	.LFE74-.LFB74
 1387 02d9 01       		.uleb128 0x1
 1388 02da 9C       		.byte	0x9c
 1389 02db EE020000 		.4byte	0x2ee
 1390 02df 0C       		.uleb128 0xc
 1391 02e0 2F020000 		.4byte	.LASF29
 1392 02e4 01       		.byte	0x1
 1393 02e5 BF       		.byte	0xbf
 1394 02e6 25000000 		.4byte	0x25
 1395 02ea 02       		.uleb128 0x2
 1396 02eb 91       		.byte	0x91
 1397 02ec 74       		.sleb128 -12
 1398 02ed 00       		.byte	0
 1399 02ee 11       		.uleb128 0x11
 1400 02ef D9020000 		.4byte	.LASF41
 1401 02f3 01       		.byte	0x1
 1402 02f4 C9       		.byte	0xc9
 1403 02f5 00000000 		.4byte	.LFB75
 1404 02f9 32000000 		.4byte	.LFE75-.LFB75
 1405 02fd 01       		.uleb128 0x1
 1406 02fe 9C       		.byte	0x9c
 1407 02ff 0F       		.uleb128 0xf
 1408 0300 0A000000 		.4byte	.LASF42
 1409 0304 01       		.byte	0x1
 1410 0305 DB       		.byte	0xdb
 1411 0306 00000000 		.4byte	.LFB76
 1412 030a 38000000 		.4byte	.LFE76-.LFB76
 1413 030e 01       		.uleb128 0x1
 1414 030f 9C       		.byte	0x9c
 1415 0310 31030000 		.4byte	0x331
 1416 0314 0C       		.uleb128 0xc
 1417 0315 92020000 		.4byte	.LASF43
 1418 0319 01       		.byte	0x1
 1419 031a DB       		.byte	0xdb
 1420 031b B4000000 		.4byte	0xb4
 1421 031f 02       		.uleb128 0x2
 1422 0320 91       		.byte	0x91
 1423 0321 77       		.sleb128 -9
 1424 0322 0C       		.uleb128 0xc
 1425 0323 2F020000 		.4byte	.LASF29
 1426 0327 01       		.byte	0x1
 1427 0328 DB       		.byte	0xdb
 1428 0329 B4000000 		.4byte	0xb4
 1429 032d 02       		.uleb128 0x2
 1430 032e 91       		.byte	0x91
 1431 032f 76       		.sleb128 -10
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 31


 1432 0330 00       		.byte	0
 1433 0331 0F       		.uleb128 0xf
 1434 0332 96010000 		.4byte	.LASF44
 1435 0336 01       		.byte	0x1
 1436 0337 EB       		.byte	0xeb
 1437 0338 00000000 		.4byte	.LFB77
 1438 033c 3C000000 		.4byte	.LFE77-.LFB77
 1439 0340 01       		.uleb128 0x1
 1440 0341 9C       		.byte	0x9c
 1441 0342 55030000 		.4byte	0x355
 1442 0346 0C       		.uleb128 0xc
 1443 0347 92020000 		.4byte	.LASF43
 1444 034b 01       		.byte	0x1
 1445 034c EB       		.byte	0xeb
 1446 034d B4000000 		.4byte	0xb4
 1447 0351 02       		.uleb128 0x2
 1448 0352 91       		.byte	0x91
 1449 0353 77       		.sleb128 -9
 1450 0354 00       		.byte	0
 1451 0355 0F       		.uleb128 0xf
 1452 0356 46010000 		.4byte	.LASF45
 1453 035a 01       		.byte	0x1
 1454 035b FB       		.byte	0xfb
 1455 035c 00000000 		.4byte	.LFB78
 1456 0360 3C000000 		.4byte	.LFE78-.LFB78
 1457 0364 01       		.uleb128 0x1
 1458 0365 9C       		.byte	0x9c
 1459 0366 79030000 		.4byte	0x379
 1460 036a 0C       		.uleb128 0xc
 1461 036b 92020000 		.4byte	.LASF43
 1462 036f 01       		.byte	0x1
 1463 0370 FB       		.byte	0xfb
 1464 0371 B4000000 		.4byte	0xb4
 1465 0375 02       		.uleb128 0x2
 1466 0376 91       		.byte	0x91
 1467 0377 77       		.sleb128 -9
 1468 0378 00       		.byte	0
 1469 0379 12       		.uleb128 0x12
 1470 037a 81020000 		.4byte	.LASF46
 1471 037e 01       		.byte	0x1
 1472 037f 0A01     		.2byte	0x10a
 1473 0381 00000000 		.4byte	.LFB79
 1474 0385 3C000000 		.4byte	.LFE79-.LFB79
 1475 0389 01       		.uleb128 0x1
 1476 038a 9C       		.byte	0x9c
 1477 038b 9F030000 		.4byte	0x39f
 1478 038f 13       		.uleb128 0x13
 1479 0390 92020000 		.4byte	.LASF43
 1480 0394 01       		.byte	0x1
 1481 0395 0A01     		.2byte	0x10a
 1482 0397 B4000000 		.4byte	0xb4
 1483 039b 02       		.uleb128 0x2
 1484 039c 91       		.byte	0x91
 1485 039d 77       		.sleb128 -9
 1486 039e 00       		.byte	0
 1487 039f 14       		.uleb128 0x14
 1488 03a0 37030000 		.4byte	.LASF47
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 32


 1489 03a4 05       		.byte	0x5
 1490 03a5 2A06     		.2byte	0x62a
 1491 03a7 AB030000 		.4byte	0x3ab
 1492 03ab 07       		.uleb128 0x7
 1493 03ac A9000000 		.4byte	0xa9
 1494 03b0 05       		.uleb128 0x5
 1495 03b1 B4000000 		.4byte	0xb4
 1496 03b5 CC030000 		.4byte	0x3cc
 1497 03b9 06       		.uleb128 0x6
 1498 03ba 76000000 		.4byte	0x76
 1499 03be 8F       		.byte	0x8f
 1500 03bf 06       		.uleb128 0x6
 1501 03c0 76000000 		.4byte	0x76
 1502 03c4 57       		.byte	0x57
 1503 03c5 06       		.uleb128 0x6
 1504 03c6 76000000 		.4byte	0x76
 1505 03ca 03       		.byte	0x3
 1506 03cb 00       		.byte	0
 1507 03cc 15       		.uleb128 0x15
 1508 03cd 24030000 		.4byte	.LASF48
 1509 03d1 06       		.byte	0x6
 1510 03d2 08       		.byte	0x8
 1511 03d3 B0030000 		.4byte	0x3b0
 1512 03d7 05       		.uleb128 0x5
 1513 03d8 03       		.byte	0x3
 1514 03d9 00000000 		.4byte	Camera_framebuffer
 1515 03dd 15       		.uleb128 0x15
 1516 03de A3020000 		.4byte	.LASF49
 1517 03e2 01       		.byte	0x1
 1518 03e3 15       		.byte	0x15
 1519 03e4 E0000000 		.4byte	0xe0
 1520 03e8 05       		.uleb128 0x5
 1521 03e9 03       		.byte	0x3
 1522 03ea 00000000 		.4byte	desired_distance
 1523 03ee 15       		.uleb128 0x15
 1524 03ef 9F010000 		.4byte	.LASF50
 1525 03f3 01       		.byte	0x1
 1526 03f4 16       		.byte	0x16
 1527 03f5 D5000000 		.4byte	0xd5
 1528 03f9 05       		.uleb128 0x5
 1529 03fa 03       		.byte	0x3
 1530 03fb 00000000 		.4byte	desired_heading
 1531 03ff 16       		.uleb128 0x16
 1532 0400 73020000 		.4byte	.LASF51
 1533 0404 01       		.byte	0x1
 1534 0405 17       		.byte	0x17
 1535 0406 EB000000 		.4byte	0xeb
 1536 040a 15       		.uleb128 0x15
 1537 040b 3C000000 		.4byte	.LASF52
 1538 040f 01       		.byte	0x1
 1539 0410 19       		.byte	0x19
 1540 0411 E0000000 		.4byte	0xe0
 1541 0415 05       		.uleb128 0x5
 1542 0416 03       		.byte	0x3
 1543 0417 00000000 		.4byte	start_x
 1544 041b 15       		.uleb128 0x15
 1545 041c 44000000 		.4byte	.LASF53
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 33


 1546 0420 01       		.byte	0x1
 1547 0421 1A       		.byte	0x1a
 1548 0422 E0000000 		.4byte	0xe0
 1549 0426 05       		.uleb128 0x5
 1550 0427 03       		.byte	0x3
 1551 0428 00000000 		.4byte	start_y
 1552 042c 15       		.uleb128 0x15
 1553 042d EC000000 		.4byte	.LASF54
 1554 0431 01       		.byte	0x1
 1555 0432 1C       		.byte	0x1c
 1556 0433 E0000000 		.4byte	0xe0
 1557 0437 05       		.uleb128 0x5
 1558 0438 03       		.byte	0x3
 1559 0439 00000000 		.4byte	end_x
 1560 043d 15       		.uleb128 0x15
 1561 043e 8C020000 		.4byte	.LASF55
 1562 0442 01       		.byte	0x1
 1563 0443 1D       		.byte	0x1d
 1564 0444 E0000000 		.4byte	0xe0
 1565 0448 05       		.uleb128 0x5
 1566 0449 03       		.byte	0x3
 1567 044a 00000000 		.4byte	end_y
 1568 044e 15       		.uleb128 0x15
 1569 044f 03010000 		.4byte	.LASF56
 1570 0453 01       		.byte	0x1
 1571 0454 20       		.byte	0x20
 1572 0455 B4000000 		.4byte	0xb4
 1573 0459 05       		.uleb128 0x5
 1574 045a 03       		.byte	0x3
 1575 045b 00000000 		.4byte	motor_state
 1576 045f 15       		.uleb128 0x15
 1577 0460 70010000 		.4byte	.LASF57
 1578 0464 01       		.byte	0x1
 1579 0465 21       		.byte	0x21
 1580 0466 B4000000 		.4byte	0xb4
 1581 046a 05       		.uleb128 0x5
 1582 046b 03       		.byte	0x3
 1583 046c 00000000 		.4byte	just_arrived
 1584 0470 15       		.uleb128 0x15
 1585 0471 29000000 		.4byte	.LASF58
 1586 0475 01       		.byte	0x1
 1587 0476 22       		.byte	0x22
 1588 0477 B4000000 		.4byte	0xb4
 1589 047b 05       		.uleb128 0x5
 1590 047c 03       		.byte	0x3
 1591 047d 00000000 		.4byte	currently_rotating
 1592 0481 15       		.uleb128 0x15
 1593 0482 7D010000 		.4byte	.LASF59
 1594 0486 01       		.byte	0x1
 1595 0487 26       		.byte	0x26
 1596 0488 B4000000 		.4byte	0xb4
 1597 048c 05       		.uleb128 0x5
 1598 048d 03       		.byte	0x3
 1599 048e 00000000 		.4byte	currently_driving
 1600 0492 15       		.uleb128 0x15
 1601 0493 AF010000 		.4byte	.LASF60
 1602 0497 01       		.byte	0x1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 34


 1603 0498 2B       		.byte	0x2b
 1604 0499 B4000000 		.4byte	0xb4
 1605 049d 05       		.uleb128 0x5
 1606 049e 03       		.byte	0x3
 1607 049f 00000000 		.4byte	HEADING_ERROR_LIMIT
 1608 04a3 15       		.uleb128 0x15
 1609 04a4 A9030000 		.4byte	.LASF61
 1610 04a8 01       		.byte	0x1
 1611 04a9 2C       		.byte	0x2c
 1612 04aa B4000000 		.4byte	0xb4
 1613 04ae 05       		.uleb128 0x5
 1614 04af 03       		.byte	0x3
 1615 04b0 00000000 		.4byte	STALL_SPEED
 1616 04b4 15       		.uleb128 0x15
 1617 04b5 09030000 		.4byte	.LASF62
 1618 04b9 01       		.byte	0x1
 1619 04ba 2D       		.byte	0x2d
 1620 04bb B4000000 		.4byte	0xb4
 1621 04bf 05       		.uleb128 0x5
 1622 04c0 03       		.byte	0x3
 1623 04c1 00000000 		.4byte	MAX_SPEED
 1624 04c5 15       		.uleb128 0x15
 1625 04c6 5F000000 		.4byte	.LASF63
 1626 04ca 01       		.byte	0x1
 1627 04cb 2E       		.byte	0x2e
 1628 04cc 84000000 		.4byte	0x84
 1629 04d0 05       		.uleb128 0x5
 1630 04d1 03       		.byte	0x3
 1631 04d2 00000000 		.4byte	outString
 1632 04d6 16       		.uleb128 0x16
 1633 04d7 5B020000 		.4byte	.LASF64
 1634 04db 01       		.byte	0x1
 1635 04dc 36       		.byte	0x36
 1636 04dd D5000000 		.4byte	0xd5
 1637 04e1 00       		.byte	0
 1638              		.section	.debug_abbrev,"",%progbits
 1639              	.Ldebug_abbrev0:
 1640 0000 01       		.uleb128 0x1
 1641 0001 11       		.uleb128 0x11
 1642 0002 01       		.byte	0x1
 1643 0003 25       		.uleb128 0x25
 1644 0004 0E       		.uleb128 0xe
 1645 0005 13       		.uleb128 0x13
 1646 0006 0B       		.uleb128 0xb
 1647 0007 03       		.uleb128 0x3
 1648 0008 0E       		.uleb128 0xe
 1649 0009 1B       		.uleb128 0x1b
 1650 000a 0E       		.uleb128 0xe
 1651 000b 55       		.uleb128 0x55
 1652 000c 17       		.uleb128 0x17
 1653 000d 11       		.uleb128 0x11
 1654 000e 01       		.uleb128 0x1
 1655 000f 10       		.uleb128 0x10
 1656 0010 17       		.uleb128 0x17
 1657 0011 00       		.byte	0
 1658 0012 00       		.byte	0
 1659 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 35


 1660 0014 24       		.uleb128 0x24
 1661 0015 00       		.byte	0
 1662 0016 0B       		.uleb128 0xb
 1663 0017 0B       		.uleb128 0xb
 1664 0018 3E       		.uleb128 0x3e
 1665 0019 0B       		.uleb128 0xb
 1666 001a 03       		.uleb128 0x3
 1667 001b 08       		.uleb128 0x8
 1668 001c 00       		.byte	0
 1669 001d 00       		.byte	0
 1670 001e 03       		.uleb128 0x3
 1671 001f 24       		.uleb128 0x24
 1672 0020 00       		.byte	0
 1673 0021 0B       		.uleb128 0xb
 1674 0022 0B       		.uleb128 0xb
 1675 0023 3E       		.uleb128 0x3e
 1676 0024 0B       		.uleb128 0xb
 1677 0025 03       		.uleb128 0x3
 1678 0026 0E       		.uleb128 0xe
 1679 0027 00       		.byte	0
 1680 0028 00       		.byte	0
 1681 0029 04       		.uleb128 0x4
 1682 002a 16       		.uleb128 0x16
 1683 002b 00       		.byte	0
 1684 002c 03       		.uleb128 0x3
 1685 002d 0E       		.uleb128 0xe
 1686 002e 3A       		.uleb128 0x3a
 1687 002f 0B       		.uleb128 0xb
 1688 0030 3B       		.uleb128 0x3b
 1689 0031 0B       		.uleb128 0xb
 1690 0032 49       		.uleb128 0x49
 1691 0033 13       		.uleb128 0x13
 1692 0034 00       		.byte	0
 1693 0035 00       		.byte	0
 1694 0036 05       		.uleb128 0x5
 1695 0037 01       		.uleb128 0x1
 1696 0038 01       		.byte	0x1
 1697 0039 49       		.uleb128 0x49
 1698 003a 13       		.uleb128 0x13
 1699 003b 01       		.uleb128 0x1
 1700 003c 13       		.uleb128 0x13
 1701 003d 00       		.byte	0
 1702 003e 00       		.byte	0
 1703 003f 06       		.uleb128 0x6
 1704 0040 21       		.uleb128 0x21
 1705 0041 00       		.byte	0
 1706 0042 49       		.uleb128 0x49
 1707 0043 13       		.uleb128 0x13
 1708 0044 2F       		.uleb128 0x2f
 1709 0045 0B       		.uleb128 0xb
 1710 0046 00       		.byte	0
 1711 0047 00       		.byte	0
 1712 0048 07       		.uleb128 0x7
 1713 0049 35       		.uleb128 0x35
 1714 004a 00       		.byte	0
 1715 004b 49       		.uleb128 0x49
 1716 004c 13       		.uleb128 0x13
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 36


 1717 004d 00       		.byte	0
 1718 004e 00       		.byte	0
 1719 004f 08       		.uleb128 0x8
 1720 0050 2E       		.uleb128 0x2e
 1721 0051 00       		.byte	0
 1722 0052 3F       		.uleb128 0x3f
 1723 0053 19       		.uleb128 0x19
 1724 0054 03       		.uleb128 0x3
 1725 0055 0E       		.uleb128 0xe
 1726 0056 3A       		.uleb128 0x3a
 1727 0057 0B       		.uleb128 0xb
 1728 0058 3B       		.uleb128 0x3b
 1729 0059 0B       		.uleb128 0xb
 1730 005a 49       		.uleb128 0x49
 1731 005b 13       		.uleb128 0x13
 1732 005c 11       		.uleb128 0x11
 1733 005d 01       		.uleb128 0x1
 1734 005e 12       		.uleb128 0x12
 1735 005f 06       		.uleb128 0x6
 1736 0060 40       		.uleb128 0x40
 1737 0061 18       		.uleb128 0x18
 1738 0062 9742     		.uleb128 0x2117
 1739 0064 19       		.uleb128 0x19
 1740 0065 00       		.byte	0
 1741 0066 00       		.byte	0
 1742 0067 09       		.uleb128 0x9
 1743 0068 2E       		.uleb128 0x2e
 1744 0069 01       		.byte	0x1
 1745 006a 3F       		.uleb128 0x3f
 1746 006b 19       		.uleb128 0x19
 1747 006c 03       		.uleb128 0x3
 1748 006d 0E       		.uleb128 0xe
 1749 006e 3A       		.uleb128 0x3a
 1750 006f 0B       		.uleb128 0xb
 1751 0070 3B       		.uleb128 0x3b
 1752 0071 0B       		.uleb128 0xb
 1753 0072 49       		.uleb128 0x49
 1754 0073 13       		.uleb128 0x13
 1755 0074 11       		.uleb128 0x11
 1756 0075 01       		.uleb128 0x1
 1757 0076 12       		.uleb128 0x12
 1758 0077 06       		.uleb128 0x6
 1759 0078 40       		.uleb128 0x40
 1760 0079 18       		.uleb128 0x18
 1761 007a 9742     		.uleb128 0x2117
 1762 007c 19       		.uleb128 0x19
 1763 007d 01       		.uleb128 0x1
 1764 007e 13       		.uleb128 0x13
 1765 007f 00       		.byte	0
 1766 0080 00       		.byte	0
 1767 0081 0A       		.uleb128 0xa
 1768 0082 05       		.uleb128 0x5
 1769 0083 00       		.byte	0
 1770 0084 03       		.uleb128 0x3
 1771 0085 08       		.uleb128 0x8
 1772 0086 3A       		.uleb128 0x3a
 1773 0087 0B       		.uleb128 0xb
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 37


 1774 0088 3B       		.uleb128 0x3b
 1775 0089 0B       		.uleb128 0xb
 1776 008a 49       		.uleb128 0x49
 1777 008b 13       		.uleb128 0x13
 1778 008c 02       		.uleb128 0x2
 1779 008d 18       		.uleb128 0x18
 1780 008e 00       		.byte	0
 1781 008f 00       		.byte	0
 1782 0090 0B       		.uleb128 0xb
 1783 0091 2E       		.uleb128 0x2e
 1784 0092 01       		.byte	0x1
 1785 0093 3F       		.uleb128 0x3f
 1786 0094 19       		.uleb128 0x19
 1787 0095 03       		.uleb128 0x3
 1788 0096 0E       		.uleb128 0xe
 1789 0097 3A       		.uleb128 0x3a
 1790 0098 0B       		.uleb128 0xb
 1791 0099 3B       		.uleb128 0x3b
 1792 009a 0B       		.uleb128 0xb
 1793 009b 27       		.uleb128 0x27
 1794 009c 19       		.uleb128 0x19
 1795 009d 49       		.uleb128 0x49
 1796 009e 13       		.uleb128 0x13
 1797 009f 11       		.uleb128 0x11
 1798 00a0 01       		.uleb128 0x1
 1799 00a1 12       		.uleb128 0x12
 1800 00a2 06       		.uleb128 0x6
 1801 00a3 40       		.uleb128 0x40
 1802 00a4 18       		.uleb128 0x18
 1803 00a5 9742     		.uleb128 0x2117
 1804 00a7 19       		.uleb128 0x19
 1805 00a8 01       		.uleb128 0x1
 1806 00a9 13       		.uleb128 0x13
 1807 00aa 00       		.byte	0
 1808 00ab 00       		.byte	0
 1809 00ac 0C       		.uleb128 0xc
 1810 00ad 05       		.uleb128 0x5
 1811 00ae 00       		.byte	0
 1812 00af 03       		.uleb128 0x3
 1813 00b0 0E       		.uleb128 0xe
 1814 00b1 3A       		.uleb128 0x3a
 1815 00b2 0B       		.uleb128 0xb
 1816 00b3 3B       		.uleb128 0x3b
 1817 00b4 0B       		.uleb128 0xb
 1818 00b5 49       		.uleb128 0x49
 1819 00b6 13       		.uleb128 0x13
 1820 00b7 02       		.uleb128 0x2
 1821 00b8 18       		.uleb128 0x18
 1822 00b9 00       		.byte	0
 1823 00ba 00       		.byte	0
 1824 00bb 0D       		.uleb128 0xd
 1825 00bc 2E       		.uleb128 0x2e
 1826 00bd 01       		.byte	0x1
 1827 00be 3F       		.uleb128 0x3f
 1828 00bf 19       		.uleb128 0x19
 1829 00c0 03       		.uleb128 0x3
 1830 00c1 0E       		.uleb128 0xe
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 38


 1831 00c2 3A       		.uleb128 0x3a
 1832 00c3 0B       		.uleb128 0xb
 1833 00c4 3B       		.uleb128 0x3b
 1834 00c5 0B       		.uleb128 0xb
 1835 00c6 49       		.uleb128 0x49
 1836 00c7 13       		.uleb128 0x13
 1837 00c8 11       		.uleb128 0x11
 1838 00c9 01       		.uleb128 0x1
 1839 00ca 12       		.uleb128 0x12
 1840 00cb 06       		.uleb128 0x6
 1841 00cc 40       		.uleb128 0x40
 1842 00cd 18       		.uleb128 0x18
 1843 00ce 9642     		.uleb128 0x2116
 1844 00d0 19       		.uleb128 0x19
 1845 00d1 01       		.uleb128 0x1
 1846 00d2 13       		.uleb128 0x13
 1847 00d3 00       		.byte	0
 1848 00d4 00       		.byte	0
 1849 00d5 0E       		.uleb128 0xe
 1850 00d6 34       		.uleb128 0x34
 1851 00d7 00       		.byte	0
 1852 00d8 03       		.uleb128 0x3
 1853 00d9 0E       		.uleb128 0xe
 1854 00da 3A       		.uleb128 0x3a
 1855 00db 0B       		.uleb128 0xb
 1856 00dc 3B       		.uleb128 0x3b
 1857 00dd 0B       		.uleb128 0xb
 1858 00de 49       		.uleb128 0x49
 1859 00df 13       		.uleb128 0x13
 1860 00e0 02       		.uleb128 0x2
 1861 00e1 18       		.uleb128 0x18
 1862 00e2 00       		.byte	0
 1863 00e3 00       		.byte	0
 1864 00e4 0F       		.uleb128 0xf
 1865 00e5 2E       		.uleb128 0x2e
 1866 00e6 01       		.byte	0x1
 1867 00e7 3F       		.uleb128 0x3f
 1868 00e8 19       		.uleb128 0x19
 1869 00e9 03       		.uleb128 0x3
 1870 00ea 0E       		.uleb128 0xe
 1871 00eb 3A       		.uleb128 0x3a
 1872 00ec 0B       		.uleb128 0xb
 1873 00ed 3B       		.uleb128 0x3b
 1874 00ee 0B       		.uleb128 0xb
 1875 00ef 27       		.uleb128 0x27
 1876 00f0 19       		.uleb128 0x19
 1877 00f1 11       		.uleb128 0x11
 1878 00f2 01       		.uleb128 0x1
 1879 00f3 12       		.uleb128 0x12
 1880 00f4 06       		.uleb128 0x6
 1881 00f5 40       		.uleb128 0x40
 1882 00f6 18       		.uleb128 0x18
 1883 00f7 9642     		.uleb128 0x2116
 1884 00f9 19       		.uleb128 0x19
 1885 00fa 01       		.uleb128 0x1
 1886 00fb 13       		.uleb128 0x13
 1887 00fc 00       		.byte	0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 39


 1888 00fd 00       		.byte	0
 1889 00fe 10       		.uleb128 0x10
 1890 00ff 2E       		.uleb128 0x2e
 1891 0100 01       		.byte	0x1
 1892 0101 3F       		.uleb128 0x3f
 1893 0102 19       		.uleb128 0x19
 1894 0103 03       		.uleb128 0x3
 1895 0104 0E       		.uleb128 0xe
 1896 0105 3A       		.uleb128 0x3a
 1897 0106 0B       		.uleb128 0xb
 1898 0107 3B       		.uleb128 0x3b
 1899 0108 0B       		.uleb128 0xb
 1900 0109 27       		.uleb128 0x27
 1901 010a 19       		.uleb128 0x19
 1902 010b 11       		.uleb128 0x11
 1903 010c 01       		.uleb128 0x1
 1904 010d 12       		.uleb128 0x12
 1905 010e 06       		.uleb128 0x6
 1906 010f 40       		.uleb128 0x40
 1907 0110 18       		.uleb128 0x18
 1908 0111 9742     		.uleb128 0x2117
 1909 0113 19       		.uleb128 0x19
 1910 0114 01       		.uleb128 0x1
 1911 0115 13       		.uleb128 0x13
 1912 0116 00       		.byte	0
 1913 0117 00       		.byte	0
 1914 0118 11       		.uleb128 0x11
 1915 0119 2E       		.uleb128 0x2e
 1916 011a 00       		.byte	0
 1917 011b 3F       		.uleb128 0x3f
 1918 011c 19       		.uleb128 0x19
 1919 011d 03       		.uleb128 0x3
 1920 011e 0E       		.uleb128 0xe
 1921 011f 3A       		.uleb128 0x3a
 1922 0120 0B       		.uleb128 0xb
 1923 0121 3B       		.uleb128 0x3b
 1924 0122 0B       		.uleb128 0xb
 1925 0123 27       		.uleb128 0x27
 1926 0124 19       		.uleb128 0x19
 1927 0125 11       		.uleb128 0x11
 1928 0126 01       		.uleb128 0x1
 1929 0127 12       		.uleb128 0x12
 1930 0128 06       		.uleb128 0x6
 1931 0129 40       		.uleb128 0x40
 1932 012a 18       		.uleb128 0x18
 1933 012b 9642     		.uleb128 0x2116
 1934 012d 19       		.uleb128 0x19
 1935 012e 00       		.byte	0
 1936 012f 00       		.byte	0
 1937 0130 12       		.uleb128 0x12
 1938 0131 2E       		.uleb128 0x2e
 1939 0132 01       		.byte	0x1
 1940 0133 3F       		.uleb128 0x3f
 1941 0134 19       		.uleb128 0x19
 1942 0135 03       		.uleb128 0x3
 1943 0136 0E       		.uleb128 0xe
 1944 0137 3A       		.uleb128 0x3a
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 40


 1945 0138 0B       		.uleb128 0xb
 1946 0139 3B       		.uleb128 0x3b
 1947 013a 05       		.uleb128 0x5
 1948 013b 27       		.uleb128 0x27
 1949 013c 19       		.uleb128 0x19
 1950 013d 11       		.uleb128 0x11
 1951 013e 01       		.uleb128 0x1
 1952 013f 12       		.uleb128 0x12
 1953 0140 06       		.uleb128 0x6
 1954 0141 40       		.uleb128 0x40
 1955 0142 18       		.uleb128 0x18
 1956 0143 9642     		.uleb128 0x2116
 1957 0145 19       		.uleb128 0x19
 1958 0146 01       		.uleb128 0x1
 1959 0147 13       		.uleb128 0x13
 1960 0148 00       		.byte	0
 1961 0149 00       		.byte	0
 1962 014a 13       		.uleb128 0x13
 1963 014b 05       		.uleb128 0x5
 1964 014c 00       		.byte	0
 1965 014d 03       		.uleb128 0x3
 1966 014e 0E       		.uleb128 0xe
 1967 014f 3A       		.uleb128 0x3a
 1968 0150 0B       		.uleb128 0xb
 1969 0151 3B       		.uleb128 0x3b
 1970 0152 05       		.uleb128 0x5
 1971 0153 49       		.uleb128 0x49
 1972 0154 13       		.uleb128 0x13
 1973 0155 02       		.uleb128 0x2
 1974 0156 18       		.uleb128 0x18
 1975 0157 00       		.byte	0
 1976 0158 00       		.byte	0
 1977 0159 14       		.uleb128 0x14
 1978 015a 34       		.uleb128 0x34
 1979 015b 00       		.byte	0
 1980 015c 03       		.uleb128 0x3
 1981 015d 0E       		.uleb128 0xe
 1982 015e 3A       		.uleb128 0x3a
 1983 015f 0B       		.uleb128 0xb
 1984 0160 3B       		.uleb128 0x3b
 1985 0161 05       		.uleb128 0x5
 1986 0162 49       		.uleb128 0x49
 1987 0163 13       		.uleb128 0x13
 1988 0164 3F       		.uleb128 0x3f
 1989 0165 19       		.uleb128 0x19
 1990 0166 3C       		.uleb128 0x3c
 1991 0167 19       		.uleb128 0x19
 1992 0168 00       		.byte	0
 1993 0169 00       		.byte	0
 1994 016a 15       		.uleb128 0x15
 1995 016b 34       		.uleb128 0x34
 1996 016c 00       		.byte	0
 1997 016d 03       		.uleb128 0x3
 1998 016e 0E       		.uleb128 0xe
 1999 016f 3A       		.uleb128 0x3a
 2000 0170 0B       		.uleb128 0xb
 2001 0171 3B       		.uleb128 0x3b
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 41


 2002 0172 0B       		.uleb128 0xb
 2003 0173 49       		.uleb128 0x49
 2004 0174 13       		.uleb128 0x13
 2005 0175 3F       		.uleb128 0x3f
 2006 0176 19       		.uleb128 0x19
 2007 0177 02       		.uleb128 0x2
 2008 0178 18       		.uleb128 0x18
 2009 0179 00       		.byte	0
 2010 017a 00       		.byte	0
 2011 017b 16       		.uleb128 0x16
 2012 017c 34       		.uleb128 0x34
 2013 017d 00       		.byte	0
 2014 017e 03       		.uleb128 0x3
 2015 017f 0E       		.uleb128 0xe
 2016 0180 3A       		.uleb128 0x3a
 2017 0181 0B       		.uleb128 0xb
 2018 0182 3B       		.uleb128 0x3b
 2019 0183 0B       		.uleb128 0xb
 2020 0184 49       		.uleb128 0x49
 2021 0185 13       		.uleb128 0x13
 2022 0186 3F       		.uleb128 0x3f
 2023 0187 19       		.uleb128 0x19
 2024 0188 3C       		.uleb128 0x3c
 2025 0189 19       		.uleb128 0x19
 2026 018a 00       		.byte	0
 2027 018b 00       		.byte	0
 2028 018c 00       		.byte	0
 2029              		.section	.debug_aranges,"",%progbits
 2030 0000 9C000000 		.4byte	0x9c
 2031 0004 0200     		.2byte	0x2
 2032 0006 00000000 		.4byte	.Ldebug_info0
 2033 000a 04       		.byte	0x4
 2034 000b 00       		.byte	0
 2035 000c 0000     		.2byte	0
 2036 000e 0000     		.2byte	0
 2037 0010 00000000 		.4byte	.LFB63
 2038 0014 18000000 		.4byte	.LFE63-.LFB63
 2039 0018 00000000 		.4byte	.LFB64
 2040 001c 18000000 		.4byte	.LFE64-.LFB64
 2041 0020 00000000 		.4byte	.LFB65
 2042 0024 22000000 		.4byte	.LFE65-.LFB65
 2043 0028 00000000 		.4byte	.LFB66
 2044 002c 38000000 		.4byte	.LFE66-.LFB66
 2045 0030 00000000 		.4byte	.LFB67
 2046 0034 14010000 		.4byte	.LFE67-.LFB67
 2047 0038 00000000 		.4byte	.LFB68
 2048 003c 56000000 		.4byte	.LFE68-.LFB68
 2049 0040 00000000 		.4byte	.LFB69
 2050 0044 56000000 		.4byte	.LFE69-.LFB69
 2051 0048 00000000 		.4byte	.LFB70
 2052 004c 42000000 		.4byte	.LFE70-.LFB70
 2053 0050 00000000 		.4byte	.LFB71
 2054 0054 5C000000 		.4byte	.LFE71-.LFB71
 2055 0058 00000000 		.4byte	.LFB72
 2056 005c 20000000 		.4byte	.LFE72-.LFB72
 2057 0060 00000000 		.4byte	.LFB73
 2058 0064 26000000 		.4byte	.LFE73-.LFB73
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 42


 2059 0068 00000000 		.4byte	.LFB74
 2060 006c 26000000 		.4byte	.LFE74-.LFB74
 2061 0070 00000000 		.4byte	.LFB75
 2062 0074 32000000 		.4byte	.LFE75-.LFB75
 2063 0078 00000000 		.4byte	.LFB76
 2064 007c 38000000 		.4byte	.LFE76-.LFB76
 2065 0080 00000000 		.4byte	.LFB77
 2066 0084 3C000000 		.4byte	.LFE77-.LFB77
 2067 0088 00000000 		.4byte	.LFB78
 2068 008c 3C000000 		.4byte	.LFE78-.LFB78
 2069 0090 00000000 		.4byte	.LFB79
 2070 0094 3C000000 		.4byte	.LFE79-.LFB79
 2071 0098 00000000 		.4byte	0
 2072 009c 00000000 		.4byte	0
 2073              		.section	.debug_ranges,"",%progbits
 2074              	.Ldebug_ranges0:
 2075 0000 00000000 		.4byte	.LFB63
 2076 0004 18000000 		.4byte	.LFE63
 2077 0008 00000000 		.4byte	.LFB64
 2078 000c 18000000 		.4byte	.LFE64
 2079 0010 00000000 		.4byte	.LFB65
 2080 0014 22000000 		.4byte	.LFE65
 2081 0018 00000000 		.4byte	.LFB66
 2082 001c 38000000 		.4byte	.LFE66
 2083 0020 00000000 		.4byte	.LFB67
 2084 0024 14010000 		.4byte	.LFE67
 2085 0028 00000000 		.4byte	.LFB68
 2086 002c 56000000 		.4byte	.LFE68
 2087 0030 00000000 		.4byte	.LFB69
 2088 0034 56000000 		.4byte	.LFE69
 2089 0038 00000000 		.4byte	.LFB70
 2090 003c 42000000 		.4byte	.LFE70
 2091 0040 00000000 		.4byte	.LFB71
 2092 0044 5C000000 		.4byte	.LFE71
 2093 0048 00000000 		.4byte	.LFB72
 2094 004c 20000000 		.4byte	.LFE72
 2095 0050 00000000 		.4byte	.LFB73
 2096 0054 26000000 		.4byte	.LFE73
 2097 0058 00000000 		.4byte	.LFB74
 2098 005c 26000000 		.4byte	.LFE74
 2099 0060 00000000 		.4byte	.LFB75
 2100 0064 32000000 		.4byte	.LFE75
 2101 0068 00000000 		.4byte	.LFB76
 2102 006c 38000000 		.4byte	.LFE76
 2103 0070 00000000 		.4byte	.LFB77
 2104 0074 3C000000 		.4byte	.LFE77
 2105 0078 00000000 		.4byte	.LFB78
 2106 007c 3C000000 		.4byte	.LFE78
 2107 0080 00000000 		.4byte	.LFB79
 2108 0084 3C000000 		.4byte	.LFE79
 2109 0088 00000000 		.4byte	0
 2110 008c 00000000 		.4byte	0
 2111              		.section	.debug_line,"",%progbits
 2112              	.Ldebug_line0:
 2113 0000 EF020000 		.section	.debug_str,"MS",%progbits,1
 2113      02005601 
 2113      00000201 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 43


 2113      FB0E0D00 
 2113      01010101 
 2114              	.LASF66:
 2115 0000 2E5C6D6F 		.ascii	".\\motor.c\000"
 2115      746F722E 
 2115      6300
 2116              	.LASF42:
 2117 000a 73657453 		.ascii	"setSpeed\000"
 2117      70656564 
 2117      00
 2118              	.LASF26:
 2119 0013 636F6E74 		.ascii	"control_heading\000"
 2119      726F6C5F 
 2119      68656164 
 2119      696E6700 
 2120              	.LASF24:
 2121 0023 75707065 		.ascii	"upper\000"
 2121      7200
 2122              	.LASF58:
 2123 0029 63757272 		.ascii	"currently_rotating\000"
 2123      656E746C 
 2123      795F726F 
 2123      74617469 
 2123      6E6700
 2124              	.LASF52:
 2125 003c 73746172 		.ascii	"start_x\000"
 2125      745F7800 
 2126              	.LASF53:
 2127 0044 73746172 		.ascii	"start_y\000"
 2127      745F7900 
 2128              	.LASF3:
 2129 004c 73686F72 		.ascii	"short int\000"
 2129      7420696E 
 2129      7400
 2130              	.LASF9:
 2131 0056 73697A65 		.ascii	"sizetype\000"
 2131      74797065 
 2131      00
 2132              	.LASF63:
 2133 005f 6F757453 		.ascii	"outString\000"
 2133      7472696E 
 2133      6700
 2134              	.LASF65:
 2135 0069 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2135      4320342E 
 2135      382E3420 
 2135      32303134 
 2135      30353236 
 2136 009c 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 2136      20726576 
 2136      6973696F 
 2136      6E203231 
 2136      31333538 
 2137 00cf 30202D66 		.ascii	"0 -ffunction-sections\000"
 2137      66756E63 
 2137      74696F6E 
 2137      2D736563 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 44


 2137      74696F6E 
 2138              	.LASF17:
 2139 00e5 75696E74 		.ascii	"uint16\000"
 2139      313600
 2140              	.LASF54:
 2141 00ec 656E645F 		.ascii	"end_x\000"
 2141      7800
 2142              	.LASF27:
 2143 00f2 676F5F66 		.ascii	"go_forward\000"
 2143      6F727761 
 2143      726400
 2144              	.LASF19:
 2145 00fd 696E7431 		.ascii	"int16\000"
 2145      3600
 2146              	.LASF56:
 2147 0103 6D6F746F 		.ascii	"motor_state\000"
 2147      725F7374 
 2147      61746500 
 2148              	.LASF16:
 2149 010f 75696E74 		.ascii	"uint8\000"
 2149      3800
 2150              	.LASF39:
 2151 0115 726F7461 		.ascii	"rotate_left\000"
 2151      74655F6C 
 2151      65667400 
 2152              	.LASF1:
 2153 0121 7369676E 		.ascii	"signed char\000"
 2153      65642063 
 2153      68617200 
 2154              	.LASF30:
 2155 012d 68656164 		.ascii	"heading_error\000"
 2155      696E675F 
 2155      6572726F 
 2155      7200
 2156              	.LASF68:
 2157 013b 636C6970 		.ascii	"clip\000"
 2157      00
 2158              	.LASF12:
 2159 0140 666C6F61 		.ascii	"float\000"
 2159      7400
 2160              	.LASF45:
 2161 0146 73657446 		.ascii	"setForward\000"
 2161      6F727761 
 2161      726400
 2162              	.LASF23:
 2163 0151 6C6F7765 		.ascii	"lower\000"
 2163      7200
 2164              	.LASF7:
 2165 0157 6C6F6E67 		.ascii	"long long int\000"
 2165      206C6F6E 
 2165      6720696E 
 2165      7400
 2166              	.LASF21:
 2167 0165 6973526F 		.ascii	"isRotating\000"
 2167      74617469 
 2167      6E6700
 2168              	.LASF57:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 45


 2169 0170 6A757374 		.ascii	"just_arrived\000"
 2169      5F617272 
 2169      69766564 
 2169      00
 2170              	.LASF59:
 2171 017d 63757272 		.ascii	"currently_driving\000"
 2171      656E746C 
 2171      795F6472 
 2171      6976696E 
 2171      6700
 2172              	.LASF25:
 2173 018f 6D793661 		.ascii	"my6abs\000"
 2173      627300
 2174              	.LASF44:
 2175 0196 73657443 		.ascii	"setCoast\000"
 2175      6F617374 
 2175      00
 2176              	.LASF50:
 2177 019f 64657369 		.ascii	"desired_heading\000"
 2177      7265645F 
 2177      68656164 
 2177      696E6700 
 2178              	.LASF60:
 2179 01af 48454144 		.ascii	"HEADING_ERROR_LIMIT\000"
 2179      494E475F 
 2179      4552524F 
 2179      525F4C49 
 2179      4D495400 
 2180              	.LASF13:
 2181 01c3 6C6F6E67 		.ascii	"long double\000"
 2181      20646F75 
 2181      626C6500 
 2182              	.LASF2:
 2183 01cf 756E7369 		.ascii	"unsigned char\000"
 2183      676E6564 
 2183      20636861 
 2183      7200
 2184              	.LASF35:
 2185 01dd 726F7461 		.ascii	"rotate_degrees\000"
 2185      74655F64 
 2185      65677265 
 2185      657300
 2186              	.LASF33:
 2187 01ec 676F5F62 		.ascii	"go_backward_ultra\000"
 2187      61636B77 
 2187      6172645F 
 2187      756C7472 
 2187      6100
 2188              	.LASF8:
 2189 01fe 6C6F6E67 		.ascii	"long long unsigned int\000"
 2189      206C6F6E 
 2189      6720756E 
 2189      7369676E 
 2189      65642069 
 2190              	.LASF40:
 2191 0215 726F7461 		.ascii	"rotate_right\000"
 2191      74655F72 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 46


 2191      69676874 
 2191      00
 2192              	.LASF0:
 2193 0222 756E7369 		.ascii	"unsigned int\000"
 2193      676E6564 
 2193      20696E74 
 2193      00
 2194              	.LASF29:
 2195 022f 73706565 		.ascii	"speed\000"
 2195      6400
 2196              	.LASF28:
 2197 0235 74696D65 		.ascii	"time\000"
 2197      00
 2198              	.LASF4:
 2199 023a 73686F72 		.ascii	"short unsigned int\000"
 2199      7420756E 
 2199      7369676E 
 2199      65642069 
 2199      6E7400
 2200              	.LASF10:
 2201 024d 63686172 		.ascii	"char\000"
 2201      00
 2202              	.LASF5:
 2203 0252 6C6F6E67 		.ascii	"long int\000"
 2203      20696E74 
 2203      00
 2204              	.LASF64:
 2205 025b 636F6D70 		.ascii	"compass_heading\000"
 2205      6173735F 
 2205      68656164 
 2205      696E6700 
 2206              	.LASF15:
 2207 026b 696E7433 		.ascii	"int32_t\000"
 2207      325F7400 
 2208              	.LASF51:
 2209 0273 636F6D70 		.ascii	"compass_ready\000"
 2209      6173735F 
 2209      72656164 
 2209      7900
 2210              	.LASF46:
 2211 0281 73657452 		.ascii	"setReverse\000"
 2211      65766572 
 2211      736500
 2212              	.LASF55:
 2213 028c 656E645F 		.ascii	"end_y\000"
 2213      7900
 2214              	.LASF43:
 2215 0292 6D6F746F 		.ascii	"motor\000"
 2215      7200
 2216              	.LASF31:
 2217 0298 73746172 		.ascii	"start_time\000"
 2217      745F7469 
 2217      6D6500
 2218              	.LASF49:
 2219 02a3 64657369 		.ascii	"desired_distance\000"
 2219      7265645F 
 2219      64697374 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 47


 2219      616E6365 
 2219      00
 2220              	.LASF37:
 2221 02b4 7365745F 		.ascii	"set_heading\000"
 2221      68656164 
 2221      696E6700 
 2222              	.LASF18:
 2223 02c0 75696E74 		.ascii	"uint32\000"
 2223      333200
 2224              	.LASF6:
 2225 02c7 6C6F6E67 		.ascii	"long unsigned int\000"
 2225      20756E73 
 2225      69676E65 
 2225      6420696E 
 2225      7400
 2226              	.LASF41:
 2227 02d9 73746172 		.ascii	"start_motors\000"
 2227      745F6D6F 
 2227      746F7273 
 2227      00
 2228              	.LASF20:
 2229 02e6 696E7433 		.ascii	"int32\000"
 2229      3200
 2230              	.LASF11:
 2231 02ec 646F7562 		.ascii	"double\000"
 2231      6C6500
 2232              	.LASF32:
 2233 02f3 676F5F62 		.ascii	"go_backward\000"
 2233      61636B77 
 2233      61726400 
 2234              	.LASF14:
 2235 02ff 5F5F696E 		.ascii	"__int32_t\000"
 2235      7433325F 
 2235      7400
 2236              	.LASF62:
 2237 0309 4D41585F 		.ascii	"MAX_SPEED\000"
 2237      53504545 
 2237      4400
 2238              	.LASF36:
 2239 0313 616E676C 		.ascii	"angle\000"
 2239      6500
 2240              	.LASF34:
 2241 0319 756C7472 		.ascii	"ultra_dist\000"
 2241      615F6469 
 2241      737400
 2242              	.LASF48:
 2243 0324 43616D65 		.ascii	"Camera_framebuffer\000"
 2243      72615F66 
 2243      72616D65 
 2243      62756666 
 2243      657200
 2244              	.LASF47:
 2245 0337 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2245      52784275 
 2245      66666572 
 2245      00
 2246              	.LASF38:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccpy688Z.s 			page 48


 2247 0344 6E65775F 		.ascii	"new_heading\000"
 2247      68656164 
 2247      696E6700 
 2248              	.LASF22:
 2249 0350 69734472 		.ascii	"isDriving\000"
 2249      6976696E 
 2249      6700
 2250              	.LASF67:
 2251 035a 433A5C55 		.ascii	"C:\\Users\\xavieran\\Desktop\\ECE3091\\PSOCProjects"
 2251      73657273 
 2251      5C786176 
 2251      69657261 
 2251      6E5C4465 
 2252 0388 5C454E47 		.ascii	"\\ENG3091_MandM\\camera_test.cydsn\000"
 2252      33303931 
 2252      5F4D616E 
 2252      644D5C63 
 2252      616D6572 
 2253              	.LASF61:
 2254 03a9 5354414C 		.ascii	"STALL_SPEED\000"
 2254      4C5F5350 
 2254      45454400 
 2255              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
