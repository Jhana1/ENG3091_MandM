ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"HC_PWM.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HC_PWM_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	HC_PWM_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	HC_PWM_Enable, %function
  24              	HC_PWM_Enable:
  25              	.LFB2:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\HC_PWM.c"
   1:.\Generated_Source\PSoC5/HC_PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/HC_PWM.c **** * File Name: HC_PWM.c
   3:.\Generated_Source\PSoC5/HC_PWM.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/HC_PWM.c **** *
   5:.\Generated_Source\PSoC5/HC_PWM.c **** * Description:
   6:.\Generated_Source\PSoC5/HC_PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/HC_PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/HC_PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/HC_PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/HC_PWM.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/HC_PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/HC_PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/HC_PWM.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/HC_PWM.c **** *
  15:.\Generated_Source\PSoC5/HC_PWM.c **** * Note:
  16:.\Generated_Source\PSoC5/HC_PWM.c **** *
  17:.\Generated_Source\PSoC5/HC_PWM.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/HC_PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/HC_PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/HC_PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/HC_PWM.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/HC_PWM.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/HC_PWM.c **** 
  24:.\Generated_Source\PSoC5/HC_PWM.c **** #include "HC_PWM.h"
  25:.\Generated_Source\PSoC5/HC_PWM.c **** 
  26:.\Generated_Source\PSoC5/HC_PWM.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/HC_PWM.c **** #ifdef HC_PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/HC_PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/HC_PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* HC_PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/HC_PWM.c **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 2


  32:.\Generated_Source\PSoC5/HC_PWM.c **** uint8 HC_PWM_initVar = 0u;
  33:.\Generated_Source\PSoC5/HC_PWM.c **** 
  34:.\Generated_Source\PSoC5/HC_PWM.c **** 
  35:.\Generated_Source\PSoC5/HC_PWM.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/HC_PWM.c **** * Function Name: HC_PWM_Start
  37:.\Generated_Source\PSoC5/HC_PWM.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/HC_PWM.c **** *
  39:.\Generated_Source\PSoC5/HC_PWM.c **** * Summary:
  40:.\Generated_Source\PSoC5/HC_PWM.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/HC_PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/HC_PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/HC_PWM.c **** *
  44:.\Generated_Source\PSoC5/HC_PWM.c **** * Parameters:
  45:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
  46:.\Generated_Source\PSoC5/HC_PWM.c **** *
  47:.\Generated_Source\PSoC5/HC_PWM.c **** * Return:
  48:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
  49:.\Generated_Source\PSoC5/HC_PWM.c **** *
  50:.\Generated_Source\PSoC5/HC_PWM.c **** * Global variables:
  51:.\Generated_Source\PSoC5/HC_PWM.c **** *  HC_PWM_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/HC_PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/HC_PWM.c **** *
  54:.\Generated_Source\PSoC5/HC_PWM.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/HC_PWM.c **** void HC_PWM_Start(void) 
  56:.\Generated_Source\PSoC5/HC_PWM.c **** {
  57:.\Generated_Source\PSoC5/HC_PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/HC_PWM.c ****     if(HC_PWM_initVar == 0u)
  59:.\Generated_Source\PSoC5/HC_PWM.c ****     {
  60:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_Init();
  61:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_initVar = 1u;
  62:.\Generated_Source\PSoC5/HC_PWM.c ****     }
  63:.\Generated_Source\PSoC5/HC_PWM.c ****     HC_PWM_Enable();
  64:.\Generated_Source\PSoC5/HC_PWM.c **** 
  65:.\Generated_Source\PSoC5/HC_PWM.c **** }
  66:.\Generated_Source\PSoC5/HC_PWM.c **** 
  67:.\Generated_Source\PSoC5/HC_PWM.c **** 
  68:.\Generated_Source\PSoC5/HC_PWM.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/HC_PWM.c **** * Function Name: HC_PWM_Init
  70:.\Generated_Source\PSoC5/HC_PWM.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/HC_PWM.c **** *
  72:.\Generated_Source\PSoC5/HC_PWM.c **** * Summary:
  73:.\Generated_Source\PSoC5/HC_PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/HC_PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/HC_PWM.c **** *  HC_PWM_Start().
  76:.\Generated_Source\PSoC5/HC_PWM.c **** *
  77:.\Generated_Source\PSoC5/HC_PWM.c **** * Parameters:
  78:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
  79:.\Generated_Source\PSoC5/HC_PWM.c **** *
  80:.\Generated_Source\PSoC5/HC_PWM.c **** * Return:
  81:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
  82:.\Generated_Source\PSoC5/HC_PWM.c **** *
  83:.\Generated_Source\PSoC5/HC_PWM.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/HC_PWM.c **** void HC_PWM_Init(void) 
  85:.\Generated_Source\PSoC5/HC_PWM.c **** {
  86:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UsingFixedFunction || HC_PWM_UseControl)
  87:.\Generated_Source\PSoC5/HC_PWM.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UsingFixedFunction || HC_PWM_UseControl) */
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 3


  89:.\Generated_Source\PSoC5/HC_PWM.c **** 
  90:.\Generated_Source\PSoC5/HC_PWM.c ****     #if(!HC_PWM_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(HC_PWM_UseStatus)
  92:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/HC_PWM.c ****             uint8 HC_PWM_interruptState;
  94:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UseStatus) */
  95:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (!HC_PWM_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/HC_PWM.c **** 
  97:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/HC_PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_CONTROL |= HC_PWM_CFG0_MODE;
 100:.\Generated_Source\PSoC5/HC_PWM.c ****         #if (HC_PWM_DeadBand2_4)
 101:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_CONTROL |= HC_PWM_CFG0_DB;
 102:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/HC_PWM.c **** 
 104:.\Generated_Source\PSoC5/HC_PWM.c ****         ctrl = HC_PWM_CONTROL3 & ((uint8 )(~HC_PWM_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_CONTROL3 = ctrl | HC_PWM_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/HC_PWM.c **** 
 107:.\Generated_Source\PSoC5/HC_PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_RT1 &= ((uint8)(~HC_PWM_RT1_MASK));
 109:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_RT1 |= HC_PWM_SYNC;
 110:.\Generated_Source\PSoC5/HC_PWM.c **** 
 111:.\Generated_Source\PSoC5/HC_PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_RT1 &= ((uint8)(~HC_PWM_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_RT1 |= HC_PWM_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/HC_PWM.c **** 
 115:.\Generated_Source\PSoC5/HC_PWM.c ****     #elif (HC_PWM_UseControl)
 116:.\Generated_Source\PSoC5/HC_PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/HC_PWM.c ****         ctrl = HC_PWM_CONTROL & ((uint8)(~HC_PWM_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC5/HC_PWM.c ****                 ((uint8)(~HC_PWM_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_CONTROL = ctrl | HC_PWM_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC5/HC_PWM.c ****                                    HC_PWM_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/HC_PWM.c **** 
 123:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (!HC_PWM_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/HC_PWM.c ****         #if (HC_PWM_Resolution == 8)
 125:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_AUX_CONTROLDP0 |= (HC_PWM_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/HC_PWM.c ****         #else /* (HC_PWM_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_AUX_CONTROLDP0 |= (HC_PWM_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_AUX_CONTROLDP1 |= (HC_PWM_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_Resolution == 8) */
 132:.\Generated_Source\PSoC5/HC_PWM.c **** 
 133:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_WriteCounter(HC_PWM_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (!HC_PWM_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/HC_PWM.c **** 
 136:.\Generated_Source\PSoC5/HC_PWM.c ****     HC_PWM_WritePeriod(HC_PWM_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC5/HC_PWM.c **** 
 138:.\Generated_Source\PSoC5/HC_PWM.c ****         #if (HC_PWM_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_WriteCompare(HC_PWM_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 141:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_WriteCompare1(HC_PWM_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_WriteCompare2(HC_PWM_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/HC_PWM.c **** 
 145:.\Generated_Source\PSoC5/HC_PWM.c ****         #if (HC_PWM_KillModeMinTime)
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 4


 146:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_WriteKillTime(HC_PWM_MinimumKillTime);
 147:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/HC_PWM.c **** 
 149:.\Generated_Source\PSoC5/HC_PWM.c ****         #if (HC_PWM_DeadBandUsed)
 150:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_WriteDeadTime(HC_PWM_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/HC_PWM.c **** 
 153:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UseStatus || HC_PWM_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_SetInterruptMode(HC_PWM_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UseStatus || HC_PWM_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/HC_PWM.c **** 
 157:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/HC_PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_GLOBAL_ENABLE |= HC_PWM_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/HC_PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_CONTROL2 |= HC_PWM_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/HC_PWM.c ****     #else
 163:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(HC_PWM_UseStatus)
 164:.\Generated_Source\PSoC5/HC_PWM.c **** 
 165:.\Generated_Source\PSoC5/HC_PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_STATUS_AUX_CTRL |= HC_PWM_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC5/HC_PWM.c **** 
 171:.\Generated_Source\PSoC5/HC_PWM.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/HC_PWM.c ****             CyExitCriticalSection(HC_PWM_interruptState);
 173:.\Generated_Source\PSoC5/HC_PWM.c **** 
 174:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Clear the FIFO to enable the HC_PWM_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/HC_PWM.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_ClearFIFO();
 177:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UseStatus) */
 178:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/HC_PWM.c **** }
 180:.\Generated_Source\PSoC5/HC_PWM.c **** 
 181:.\Generated_Source\PSoC5/HC_PWM.c **** 
 182:.\Generated_Source\PSoC5/HC_PWM.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/HC_PWM.c **** * Function Name: HC_PWM_Enable
 184:.\Generated_Source\PSoC5/HC_PWM.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/HC_PWM.c **** *
 186:.\Generated_Source\PSoC5/HC_PWM.c **** * Summary:
 187:.\Generated_Source\PSoC5/HC_PWM.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/HC_PWM.c **** *
 189:.\Generated_Source\PSoC5/HC_PWM.c **** * Parameters:
 190:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
 191:.\Generated_Source\PSoC5/HC_PWM.c **** *
 192:.\Generated_Source\PSoC5/HC_PWM.c **** * Return:
 193:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
 194:.\Generated_Source\PSoC5/HC_PWM.c **** *
 195:.\Generated_Source\PSoC5/HC_PWM.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/HC_PWM.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/HC_PWM.c **** *
 198:.\Generated_Source\PSoC5/HC_PWM.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/HC_PWM.c **** void HC_PWM_Enable(void) 
 200:.\Generated_Source\PSoC5/HC_PWM.c **** {
  27              		.loc 1 200 0
  28              		.cfi_startproc
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 201:.\Generated_Source\PSoC5/HC_PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_GLOBAL_ENABLE |= HC_PWM_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_GLOBAL_STBY_ENABLE |= HC_PWM_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/HC_PWM.c **** 
 207:.\Generated_Source\PSoC5/HC_PWM.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UseControl || HC_PWM_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_CONTROL |= HC_PWM_CTRL_ENABLE;
  32              		.loc 1 209 0
  33 0000 024B     		ldr	r3, .L2
  34 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  35 0004 42F08002 		orr	r2, r2, #128
  36 0008 1A70     		strb	r2, [r3]
  37 000a 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 000c 74650040 		.word	1073767796
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	HC_PWM_Enable, .-HC_PWM_Enable
  45              		.section	.text.HC_PWM_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	HC_PWM_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	HC_PWM_Stop, %function
  51              	HC_PWM_Stop:
  52              	.LFB3:
 210:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UseControl || HC_PWM_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/HC_PWM.c **** }
 212:.\Generated_Source\PSoC5/HC_PWM.c **** 
 213:.\Generated_Source\PSoC5/HC_PWM.c **** 
 214:.\Generated_Source\PSoC5/HC_PWM.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/HC_PWM.c **** * Function Name: HC_PWM_Stop
 216:.\Generated_Source\PSoC5/HC_PWM.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/HC_PWM.c **** *
 218:.\Generated_Source\PSoC5/HC_PWM.c **** * Summary:
 219:.\Generated_Source\PSoC5/HC_PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/HC_PWM.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/HC_PWM.c **** *
 222:.\Generated_Source\PSoC5/HC_PWM.c **** * Parameters:
 223:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
 224:.\Generated_Source\PSoC5/HC_PWM.c **** *
 225:.\Generated_Source\PSoC5/HC_PWM.c **** * Return:
 226:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
 227:.\Generated_Source\PSoC5/HC_PWM.c **** *
 228:.\Generated_Source\PSoC5/HC_PWM.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/HC_PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/HC_PWM.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/HC_PWM.c **** *
 232:.\Generated_Source\PSoC5/HC_PWM.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/HC_PWM.c **** void HC_PWM_Stop(void) 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 6


 234:.\Generated_Source\PSoC5/HC_PWM.c **** {
  53              		.loc 1 234 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 235:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UseControl || HC_PWM_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_CONTROL &= ((uint8)(~HC_PWM_CTRL_ENABLE));
  58              		.loc 1 236 0
  59 0000 024B     		ldr	r3, .L5
  60 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  61 0004 02F07F02 		and	r2, r2, #127
  62 0008 1A70     		strb	r2, [r3]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 74650040 		.word	1073767796
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	HC_PWM_Stop, .-HC_PWM_Stop
  71              		.section	.text.HC_PWM_WriteCounter,"ax",%progbits
  72              		.align	2
  73              		.global	HC_PWM_WriteCounter
  74              		.thumb
  75              		.thumb_func
  76              		.type	HC_PWM_WriteCounter, %function
  77              	HC_PWM_WriteCounter:
  78              	.LFB4:
 237:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UseControl || HC_PWM_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/HC_PWM.c **** 
 239:.\Generated_Source\PSoC5/HC_PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_GLOBAL_ENABLE &= ((uint8)(~HC_PWM_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~HC_PWM_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/HC_PWM.c **** }
 245:.\Generated_Source\PSoC5/HC_PWM.c **** 
 246:.\Generated_Source\PSoC5/HC_PWM.c **** #if (HC_PWM_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_CompareMode1SW)
 248:.\Generated_Source\PSoC5/HC_PWM.c **** 
 249:.\Generated_Source\PSoC5/HC_PWM.c **** 
 250:.\Generated_Source\PSoC5/HC_PWM.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/HC_PWM.c ****         * Function Name: HC_PWM_SetCompareMode
 252:.\Generated_Source\PSoC5/HC_PWM.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 254:.\Generated_Source\PSoC5/HC_PWM.c ****         * Summary:
 255:.\Generated_Source\PSoC5/HC_PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/HC_PWM.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 258:.\Generated_Source\PSoC5/HC_PWM.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/HC_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/HC_PWM.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 262:.\Generated_Source\PSoC5/HC_PWM.c ****         * Return:
 263:.\Generated_Source\PSoC5/HC_PWM.c ****         *  None
 264:.\Generated_Source\PSoC5/HC_PWM.c ****         *
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 7


 265:.\Generated_Source\PSoC5/HC_PWM.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/HC_PWM.c ****         void HC_PWM_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/HC_PWM.c ****         {
 268:.\Generated_Source\PSoC5/HC_PWM.c ****             #if(HC_PWM_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/HC_PWM.c **** 
 270:.\Generated_Source\PSoC5/HC_PWM.c ****                 #if(0 != HC_PWM_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/HC_PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << HC_PWM_CTRL_CMPMODE1_S
 272:.\Generated_Source\PSoC5/HC_PWM.c ****                 #else
 273:.\Generated_Source\PSoC5/HC_PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/HC_PWM.c ****                 #endif /* (0 != HC_PWM_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/HC_PWM.c **** 
 276:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_CONTROL3 &= ((uint8)(~HC_PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/HC_PWM.c **** 
 279:.\Generated_Source\PSoC5/HC_PWM.c ****             #elif (HC_PWM_UseControl)
 280:.\Generated_Source\PSoC5/HC_PWM.c **** 
 281:.\Generated_Source\PSoC5/HC_PWM.c ****                 #if(0 != HC_PWM_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/HC_PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << HC_PWM_CTRL_CMPMODE1_
 283:.\Generated_Source\PSoC5/HC_PWM.c ****                                                 HC_PWM_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/HC_PWM.c ****                 #else
 285:.\Generated_Source\PSoC5/HC_PWM.c ****                     uint8 comparemode1masked = comparemode & HC_PWM_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/HC_PWM.c ****                 #endif /* (0 != HC_PWM_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/HC_PWM.c **** 
 288:.\Generated_Source\PSoC5/HC_PWM.c ****                 #if(0 != HC_PWM_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/HC_PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << HC_PWM_CTRL_CMPMODE2_
 290:.\Generated_Source\PSoC5/HC_PWM.c ****                                                HC_PWM_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/HC_PWM.c ****                 #else
 292:.\Generated_Source\PSoC5/HC_PWM.c ****                     uint8 comparemode2masked = comparemode & HC_PWM_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/HC_PWM.c ****                 #endif /* (0 != HC_PWM_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/HC_PWM.c **** 
 295:.\Generated_Source\PSoC5/HC_PWM.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_CONTROL &= ((uint8)(~(HC_PWM_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/HC_PWM.c ****                                             HC_PWM_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/HC_PWM.c **** 
 300:.\Generated_Source\PSoC5/HC_PWM.c ****             #else
 301:.\Generated_Source\PSoC5/HC_PWM.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/HC_PWM.c ****             #endif /* (HC_PWM_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/HC_PWM.c ****         }
 304:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* HC_PWM_CompareMode1SW */
 305:.\Generated_Source\PSoC5/HC_PWM.c **** 
 306:.\Generated_Source\PSoC5/HC_PWM.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/HC_PWM.c **** 
 308:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_CompareMode1SW)
 309:.\Generated_Source\PSoC5/HC_PWM.c **** 
 310:.\Generated_Source\PSoC5/HC_PWM.c **** 
 311:.\Generated_Source\PSoC5/HC_PWM.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/HC_PWM.c ****         * Function Name: HC_PWM_SetCompareMode1
 313:.\Generated_Source\PSoC5/HC_PWM.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 315:.\Generated_Source\PSoC5/HC_PWM.c ****         * Summary:
 316:.\Generated_Source\PSoC5/HC_PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 318:.\Generated_Source\PSoC5/HC_PWM.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/HC_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/HC_PWM.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/HC_PWM.c ****         *
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 8


 322:.\Generated_Source\PSoC5/HC_PWM.c ****         * Return:
 323:.\Generated_Source\PSoC5/HC_PWM.c ****         *  None
 324:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 325:.\Generated_Source\PSoC5/HC_PWM.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/HC_PWM.c ****         void HC_PWM_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/HC_PWM.c ****         {
 328:.\Generated_Source\PSoC5/HC_PWM.c ****             #if(0 != HC_PWM_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/HC_PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << HC_PWM_CTRL_CMPMODE1_SHIFT
 330:.\Generated_Source\PSoC5/HC_PWM.c ****                                            HC_PWM_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/HC_PWM.c ****             #else
 332:.\Generated_Source\PSoC5/HC_PWM.c ****                 uint8 comparemodemasked = comparemode & HC_PWM_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/HC_PWM.c ****             #endif /* (0 != HC_PWM_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/HC_PWM.c **** 
 335:.\Generated_Source\PSoC5/HC_PWM.c ****             #if (HC_PWM_UseControl)
 336:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_CONTROL &= ((uint8)(~HC_PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/HC_PWM.c ****             #endif /* (HC_PWM_UseControl) */
 339:.\Generated_Source\PSoC5/HC_PWM.c ****         }
 340:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* HC_PWM_CompareMode1SW */
 341:.\Generated_Source\PSoC5/HC_PWM.c **** 
 342:.\Generated_Source\PSoC5/HC_PWM.c **** #if (HC_PWM_CompareMode2SW)
 343:.\Generated_Source\PSoC5/HC_PWM.c **** 
 344:.\Generated_Source\PSoC5/HC_PWM.c **** 
 345:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_SetCompareMode2
 347:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 349:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 350:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 352:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/HC_PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/HC_PWM.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 356:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 357:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 358:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 359:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 362:.\Generated_Source\PSoC5/HC_PWM.c **** 
 363:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(0 != HC_PWM_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/HC_PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << HC_PWM_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC5/HC_PWM.c ****                                                  HC_PWM_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 367:.\Generated_Source\PSoC5/HC_PWM.c ****             uint8 comparemodemasked = comparemode & HC_PWM_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (0 != HC_PWM_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/HC_PWM.c **** 
 370:.\Generated_Source\PSoC5/HC_PWM.c ****         #if (HC_PWM_UseControl)
 371:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_CONTROL &= ((uint8)(~HC_PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UseControl) */
 374:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 375:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /*HC_PWM_CompareMode2SW */
 376:.\Generated_Source\PSoC5/HC_PWM.c **** 
 377:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/HC_PWM.c **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 9


 379:.\Generated_Source\PSoC5/HC_PWM.c **** 
 380:.\Generated_Source\PSoC5/HC_PWM.c **** #if (!HC_PWM_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/HC_PWM.c **** 
 382:.\Generated_Source\PSoC5/HC_PWM.c **** 
 383:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_WriteCounter
 385:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 387:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 388:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/HC_PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/HC_PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/HC_PWM.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 393:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/HC_PWM.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 396:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 397:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 398:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 399:.\Generated_Source\PSoC5/HC_PWM.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/HC_PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 402:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/HC_PWM.c ****                                        
 405:.\Generated_Source\PSoC5/HC_PWM.c ****     {
  79              		.loc 1 405 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 406:.\Generated_Source\PSoC5/HC_PWM.c ****         CY_SET_REG16(HC_PWM_COUNTER_LSB_PTR, counter);
  85              		.loc 1 406 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1880     		strh	r0, [r3]	@ movhi
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 0C6A0040 		.word	1073768972
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	HC_PWM_WriteCounter, .-HC_PWM_WriteCounter
  96              		.section	.text.HC_PWM_ReadCounter,"ax",%progbits
  97              		.align	2
  98              		.global	HC_PWM_ReadCounter
  99              		.thumb
 100              		.thumb_func
 101              		.type	HC_PWM_ReadCounter, %function
 102              	HC_PWM_ReadCounter:
 103              	.LFB5:
 407:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 408:.\Generated_Source\PSoC5/HC_PWM.c **** 
 409:.\Generated_Source\PSoC5/HC_PWM.c **** 
 410:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 10


 411:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadCounter
 412:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 414:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 415:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/HC_PWM.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 418:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 420:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 421:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 422:.\Generated_Source\PSoC5/HC_PWM.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 424:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/HC_PWM.c ****     uint16 HC_PWM_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 104              		.loc 1 426 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 427:.\Generated_Source\PSoC5/HC_PWM.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/HC_PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/HC_PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/HC_PWM.c ****           (void)CY_GET_REG8(HC_PWM_COUNTERCAP_LSB_PTR_8BIT);
 109              		.loc 1 430 0
 110 0000 024B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:.\Generated_Source\PSoC5/HC_PWM.c **** 
 432:.\Generated_Source\PSoC5/HC_PWM.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/HC_PWM.c ****         return (CY_GET_REG16(HC_PWM_CAPTURE_LSB_PTR));
 112              		.loc 1 433 0
 113 0004 024B     		ldr	r3, .L11+4
 114 0006 1888     		ldrh	r0, [r3]
 434:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 115              		.loc 1 434 0
 116 0008 80B2     		uxth	r0, r0
 117 000a 7047     		bx	lr
 118              	.L12:
 119              		.align	2
 120              	.L11:
 121 000c 16650040 		.word	1073767702
 122 0010 AC6A0040 		.word	1073769132
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	HC_PWM_ReadCounter, .-HC_PWM_ReadCounter
 126              		.section	.text.HC_PWM_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	HC_PWM_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	HC_PWM_WritePeriod, %function
 132              	HC_PWM_WritePeriod:
 133              	.LFB7:
 435:.\Generated_Source\PSoC5/HC_PWM.c **** 
 436:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UseStatus)
 437:.\Generated_Source\PSoC5/HC_PWM.c **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 11


 438:.\Generated_Source\PSoC5/HC_PWM.c **** 
 439:.\Generated_Source\PSoC5/HC_PWM.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/HC_PWM.c ****         * Function Name: HC_PWM_ClearFIFO
 441:.\Generated_Source\PSoC5/HC_PWM.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 443:.\Generated_Source\PSoC5/HC_PWM.c ****         * Summary:
 444:.\Generated_Source\PSoC5/HC_PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 446:.\Generated_Source\PSoC5/HC_PWM.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/HC_PWM.c ****         *  None
 448:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 449:.\Generated_Source\PSoC5/HC_PWM.c ****         * Return:
 450:.\Generated_Source\PSoC5/HC_PWM.c ****         *  None
 451:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 452:.\Generated_Source\PSoC5/HC_PWM.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/HC_PWM.c ****         void HC_PWM_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/HC_PWM.c ****         {
 455:.\Generated_Source\PSoC5/HC_PWM.c ****             while(0u != (HC_PWM_ReadStatusRegister() & HC_PWM_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC5/HC_PWM.c ****             {
 457:.\Generated_Source\PSoC5/HC_PWM.c ****                 (void)HC_PWM_ReadCapture();
 458:.\Generated_Source\PSoC5/HC_PWM.c ****             }
 459:.\Generated_Source\PSoC5/HC_PWM.c ****         }
 460:.\Generated_Source\PSoC5/HC_PWM.c **** 
 461:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* HC_PWM_UseStatus */
 462:.\Generated_Source\PSoC5/HC_PWM.c **** 
 463:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* !HC_PWM_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/HC_PWM.c **** 
 465:.\Generated_Source\PSoC5/HC_PWM.c **** 
 466:.\Generated_Source\PSoC5/HC_PWM.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/HC_PWM.c **** * Function Name: HC_PWM_WritePeriod
 468:.\Generated_Source\PSoC5/HC_PWM.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/HC_PWM.c **** *
 470:.\Generated_Source\PSoC5/HC_PWM.c **** * Summary:
 471:.\Generated_Source\PSoC5/HC_PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/HC_PWM.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/HC_PWM.c **** *
 474:.\Generated_Source\PSoC5/HC_PWM.c **** * Parameters:
 475:.\Generated_Source\PSoC5/HC_PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/HC_PWM.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/HC_PWM.c **** *
 478:.\Generated_Source\PSoC5/HC_PWM.c **** * Return:
 479:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
 480:.\Generated_Source\PSoC5/HC_PWM.c **** *
 481:.\Generated_Source\PSoC5/HC_PWM.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/HC_PWM.c **** void HC_PWM_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/HC_PWM.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:.\Generated_Source\PSoC5/HC_PWM.c ****     #if(HC_PWM_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/HC_PWM.c ****         CY_SET_REG16(HC_PWM_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/HC_PWM.c ****     #else
 487:.\Generated_Source\PSoC5/HC_PWM.c ****         CY_SET_REG16(HC_PWM_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1880     		strh	r0, [r3]	@ movhi
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 8C6A0040 		.word	1073769100
 148              		.cfi_endproc
 149              	.LFE7:
 150              		.size	HC_PWM_WritePeriod, .-HC_PWM_WritePeriod
 151              		.section	.text.HC_PWM_WriteCompare1,"ax",%progbits
 152              		.align	2
 153              		.global	HC_PWM_WriteCompare1
 154              		.thumb
 155              		.thumb_func
 156              		.type	HC_PWM_WriteCompare1, %function
 157              	HC_PWM_WriteCompare1:
 158              	.LFB8:
 488:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/HC_PWM.c **** }
 490:.\Generated_Source\PSoC5/HC_PWM.c **** 
 491:.\Generated_Source\PSoC5/HC_PWM.c **** #if (HC_PWM_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/HC_PWM.c **** 
 493:.\Generated_Source\PSoC5/HC_PWM.c **** 
 494:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_WriteCompare
 496:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 498:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 499:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/HC_PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/HC_PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/HC_PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 505:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/HC_PWM.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 508:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 509:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 510:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 511:.\Generated_Source\PSoC5/HC_PWM.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 515:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/HC_PWM.c ****                                        
 518:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 519:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(HC_PWM_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/HC_PWM.c ****             CY_SET_REG16(HC_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 522:.\Generated_Source\PSoC5/HC_PWM.c ****             CY_SET_REG16(HC_PWM_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/HC_PWM.c **** 
 525:.\Generated_Source\PSoC5/HC_PWM.c ****         #if (HC_PWM_PWMMode == HC_PWM__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/HC_PWM.c ****             #if(HC_PWM_UsingFixedFunction)
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 13


 527:.\Generated_Source\PSoC5/HC_PWM.c ****                 CY_SET_REG16(HC_PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/HC_PWM.c ****             #else
 529:.\Generated_Source\PSoC5/HC_PWM.c ****                 CY_SET_REG16(HC_PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/HC_PWM.c ****             #endif /* (HC_PWM_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_PWMMode == HC_PWM__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 533:.\Generated_Source\PSoC5/HC_PWM.c **** 
 534:.\Generated_Source\PSoC5/HC_PWM.c **** 
 535:.\Generated_Source\PSoC5/HC_PWM.c **** #else
 536:.\Generated_Source\PSoC5/HC_PWM.c **** 
 537:.\Generated_Source\PSoC5/HC_PWM.c **** 
 538:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_WriteCompare1
 540:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 542:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 543:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/HC_PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/HC_PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/HC_PWM.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 548:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/HC_PWM.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 551:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 552:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 553:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 554:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/HC_PWM.c ****                                         
 557:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 159              		.loc 1 557 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 558:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(HC_PWM_UsingFixedFunction)
 559:.\Generated_Source\PSoC5/HC_PWM.c ****             CY_SET_REG16(HC_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 561:.\Generated_Source\PSoC5/HC_PWM.c ****             CY_SET_REG16(HC_PWM_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 561 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1880     		strh	r0, [r3]	@ movhi
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 4C6A0040 		.word	1073769036
 173              		.cfi_endproc
 174              	.LFE8:
 175              		.size	HC_PWM_WriteCompare1, .-HC_PWM_WriteCompare1
 176              		.section	.text.HC_PWM_WriteCompare2,"ax",%progbits
 177              		.align	2
 178              		.global	HC_PWM_WriteCompare2
 179              		.thumb
 180              		.thumb_func
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 14


 181              		.type	HC_PWM_WriteCompare2, %function
 182              	HC_PWM_WriteCompare2:
 183              	.LFB9:
 562:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 564:.\Generated_Source\PSoC5/HC_PWM.c **** 
 565:.\Generated_Source\PSoC5/HC_PWM.c **** 
 566:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_WriteCompare2
 568:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 570:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 571:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/HC_PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/HC_PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/HC_PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/HC_PWM.c ****     *  mode.
 576:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 577:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/HC_PWM.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 580:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 581:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 582:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 583:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/HC_PWM.c ****                                         
 586:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 184              		.loc 1 586 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL3:
 587:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(HC_PWM_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/HC_PWM.c ****             CY_SET_REG16(HC_PWM_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 590:.\Generated_Source\PSoC5/HC_PWM.c ****             CY_SET_REG16(HC_PWM_COMPARE2_LSB_PTR, compare);
 190              		.loc 1 590 0
 191 0000 014B     		ldr	r3, .L20
 192 0002 1880     		strh	r0, [r3]	@ movhi
 193 0004 7047     		bx	lr
 194              	.L21:
 195 0006 00BF     		.align	2
 196              	.L20:
 197 0008 6C6A0040 		.word	1073769068
 198              		.cfi_endproc
 199              	.LFE9:
 200              		.size	HC_PWM_WriteCompare2, .-HC_PWM_WriteCompare2
 201              		.section	.text.HC_PWM_SetInterruptMode,"ax",%progbits
 202              		.align	2
 203              		.global	HC_PWM_SetInterruptMode
 204              		.thumb
 205              		.thumb_func
 206              		.type	HC_PWM_SetInterruptMode, %function
 207              	HC_PWM_SetInterruptMode:
 208              	.LFB10:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 15


 591:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 593:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/HC_PWM.c **** 
 595:.\Generated_Source\PSoC5/HC_PWM.c **** #if (HC_PWM_DeadBandUsed)
 596:.\Generated_Source\PSoC5/HC_PWM.c **** 
 597:.\Generated_Source\PSoC5/HC_PWM.c **** 
 598:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_WriteDeadTime
 600:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 602:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 603:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 605:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/HC_PWM.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 608:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 609:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 610:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 611:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 614:.\Generated_Source\PSoC5/HC_PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(!HC_PWM_DeadBand2_4)
 616:.\Generated_Source\PSoC5/HC_PWM.c ****             CY_SET_REG8(HC_PWM_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 618:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_DEADBAND_COUNT &= ((uint8)(~HC_PWM_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/HC_PWM.c **** 
 622:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/HC_PWM.c ****             #if(HC_PWM_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << HC_PWM_DEADBAND_COUNT_SHIFT)) 
 625:.\Generated_Source\PSoC5/HC_PWM.c ****                                                     HC_PWM_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/HC_PWM.c ****             #else
 627:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_DEADBAND_COUNT |= deadtime & HC_PWM_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/HC_PWM.c ****             #endif /* (HC_PWM_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/HC_PWM.c **** 
 630:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (!HC_PWM_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 632:.\Generated_Source\PSoC5/HC_PWM.c **** 
 633:.\Generated_Source\PSoC5/HC_PWM.c **** 
 634:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadDeadTime
 636:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 638:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 639:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 641:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 643:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 644:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 645:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 647:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 16


 648:.\Generated_Source\PSoC5/HC_PWM.c ****     uint8 HC_PWM_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 650:.\Generated_Source\PSoC5/HC_PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(!HC_PWM_DeadBand2_4)
 652:.\Generated_Source\PSoC5/HC_PWM.c ****             return (CY_GET_REG8(HC_PWM_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 654:.\Generated_Source\PSoC5/HC_PWM.c **** 
 655:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/HC_PWM.c ****             #if(HC_PWM_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/HC_PWM.c ****                 return ((uint8)(((uint8)(HC_PWM_DEADBAND_COUNT & HC_PWM_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC5/HC_PWM.c ****                                                                            HC_PWM_DEADBAND_COUNT_SH
 659:.\Generated_Source\PSoC5/HC_PWM.c ****             #else
 660:.\Generated_Source\PSoC5/HC_PWM.c ****                 return (HC_PWM_DEADBAND_COUNT & HC_PWM_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/HC_PWM.c ****             #endif /* (HC_PWM_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (!HC_PWM_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 664:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/HC_PWM.c **** 
 666:.\Generated_Source\PSoC5/HC_PWM.c **** #if (HC_PWM_UseStatus || HC_PWM_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/HC_PWM.c **** 
 668:.\Generated_Source\PSoC5/HC_PWM.c **** 
 669:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_SetInterruptMode
 671:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 673:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 674:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/HC_PWM.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 677:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 680:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 681:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 682:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 683:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 209              		.loc 1 685 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214              	.LVL4:
 686:.\Generated_Source\PSoC5/HC_PWM.c ****         CY_SET_REG8(HC_PWM_STATUS_MASK_PTR, interruptMode);
 215              		.loc 1 686 0
 216 0000 014B     		ldr	r3, .L23
 217 0002 1870     		strb	r0, [r3]
 218 0004 7047     		bx	lr
 219              	.L24:
 220 0006 00BF     		.align	2
 221              	.L23:
 222 0008 87650040 		.word	1073767815
 223              		.cfi_endproc
 224              	.LFE10:
 225              		.size	HC_PWM_SetInterruptMode, .-HC_PWM_SetInterruptMode
 226              		.section	.text.HC_PWM_ReadStatusRegister,"ax",%progbits
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 17


 227              		.align	2
 228              		.global	HC_PWM_ReadStatusRegister
 229              		.thumb
 230              		.thumb_func
 231              		.type	HC_PWM_ReadStatusRegister, %function
 232              	HC_PWM_ReadStatusRegister:
 233              	.LFB11:
 687:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 688:.\Generated_Source\PSoC5/HC_PWM.c **** 
 689:.\Generated_Source\PSoC5/HC_PWM.c **** 
 690:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadStatusRegister
 692:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 694:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 695:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 697:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 699:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 700:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 701:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 710:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/HC_PWM.c ****     uint8 HC_PWM_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 234              		.loc 1 712 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 713:.\Generated_Source\PSoC5/HC_PWM.c ****         return (CY_GET_REG8(HC_PWM_STATUS_PTR));
 239              		.loc 1 713 0
 240 0000 014B     		ldr	r3, .L26
 241 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 242              		.loc 1 714 0
 243 0004 7047     		bx	lr
 244              	.L27:
 245 0006 00BF     		.align	2
 246              	.L26:
 247 0008 67650040 		.word	1073767783
 248              		.cfi_endproc
 249              	.LFE11:
 250              		.size	HC_PWM_ReadStatusRegister, .-HC_PWM_ReadStatusRegister
 251              		.section	.text.HC_PWM_ReadControlRegister,"ax",%progbits
 252              		.align	2
 253              		.global	HC_PWM_ReadControlRegister
 254              		.thumb
 255              		.thumb_func
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 18


 256              		.type	HC_PWM_ReadControlRegister, %function
 257              	HC_PWM_ReadControlRegister:
 258              	.LFB12:
 715:.\Generated_Source\PSoC5/HC_PWM.c **** 
 716:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* (HC_PWM_UseStatus || HC_PWM_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/HC_PWM.c **** 
 718:.\Generated_Source\PSoC5/HC_PWM.c **** 
 719:.\Generated_Source\PSoC5/HC_PWM.c **** #if (HC_PWM_UseControl)
 720:.\Generated_Source\PSoC5/HC_PWM.c **** 
 721:.\Generated_Source\PSoC5/HC_PWM.c **** 
 722:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadControlRegister
 724:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 726:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 727:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/HC_PWM.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 730:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 732:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 733:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 734:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 736:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC5/HC_PWM.c ****     uint8 HC_PWM_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 259              		.loc 1 738 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 739:.\Generated_Source\PSoC5/HC_PWM.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/HC_PWM.c **** 
 741:.\Generated_Source\PSoC5/HC_PWM.c ****         result = CY_GET_REG8(HC_PWM_CONTROL_PTR);
 264              		.loc 1 741 0
 265 0000 014B     		ldr	r3, .L29
 266 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 267              	.LVL5:
 742:.\Generated_Source\PSoC5/HC_PWM.c ****         return (result);
 743:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 268              		.loc 1 743 0
 269 0004 7047     		bx	lr
 270              	.L30:
 271 0006 00BF     		.align	2
 272              	.L29:
 273 0008 74650040 		.word	1073767796
 274              		.cfi_endproc
 275              	.LFE12:
 276              		.size	HC_PWM_ReadControlRegister, .-HC_PWM_ReadControlRegister
 277              		.section	.text.HC_PWM_WriteControlRegister,"ax",%progbits
 278              		.align	2
 279              		.global	HC_PWM_WriteControlRegister
 280              		.thumb
 281              		.thumb_func
 282              		.type	HC_PWM_WriteControlRegister, %function
 283              	HC_PWM_WriteControlRegister:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 19


 284              	.LFB13:
 744:.\Generated_Source\PSoC5/HC_PWM.c **** 
 745:.\Generated_Source\PSoC5/HC_PWM.c **** 
 746:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_WriteControlRegister
 748:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 750:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 751:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/HC_PWM.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 754:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 761:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 762:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 763:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 764:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 285              		.loc 1 766 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290              	.LVL6:
 767:.\Generated_Source\PSoC5/HC_PWM.c ****         CY_SET_REG8(HC_PWM_CONTROL_PTR, control);
 291              		.loc 1 767 0
 292 0000 014B     		ldr	r3, .L32
 293 0002 1870     		strb	r0, [r3]
 294 0004 7047     		bx	lr
 295              	.L33:
 296 0006 00BF     		.align	2
 297              	.L32:
 298 0008 74650040 		.word	1073767796
 299              		.cfi_endproc
 300              	.LFE13:
 301              		.size	HC_PWM_WriteControlRegister, .-HC_PWM_WriteControlRegister
 302              		.section	.text.HC_PWM_ReadCapture,"ax",%progbits
 303              		.align	2
 304              		.global	HC_PWM_ReadCapture
 305              		.thumb
 306              		.thumb_func
 307              		.type	HC_PWM_ReadCapture, %function
 308              	HC_PWM_ReadCapture:
 309              	.LFB14:
 768:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 769:.\Generated_Source\PSoC5/HC_PWM.c **** 
 770:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* (HC_PWM_UseControl) */
 771:.\Generated_Source\PSoC5/HC_PWM.c **** 
 772:.\Generated_Source\PSoC5/HC_PWM.c **** 
 773:.\Generated_Source\PSoC5/HC_PWM.c **** #if (!HC_PWM_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/HC_PWM.c **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 20


 775:.\Generated_Source\PSoC5/HC_PWM.c **** 
 776:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadCapture
 778:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 780:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 781:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 783:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 785:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 786:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 787:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 789:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/HC_PWM.c ****     uint16 HC_PWM_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 310              		.loc 1 791 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 792:.\Generated_Source\PSoC5/HC_PWM.c ****         return (CY_GET_REG16(HC_PWM_CAPTURE_LSB_PTR));
 315              		.loc 1 792 0
 316 0000 014B     		ldr	r3, .L35
 317 0002 1888     		ldrh	r0, [r3]
 793:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 318              		.loc 1 793 0
 319 0004 80B2     		uxth	r0, r0
 320 0006 7047     		bx	lr
 321              	.L36:
 322              		.align	2
 323              	.L35:
 324 0008 AC6A0040 		.word	1073769132
 325              		.cfi_endproc
 326              	.LFE14:
 327              		.size	HC_PWM_ReadCapture, .-HC_PWM_ReadCapture
 328              		.section	.text.HC_PWM_ClearFIFO,"ax",%progbits
 329              		.align	2
 330              		.global	HC_PWM_ClearFIFO
 331              		.thumb
 332              		.thumb_func
 333              		.type	HC_PWM_ClearFIFO, %function
 334              	HC_PWM_ClearFIFO:
 335              	.LFB6:
 454:.\Generated_Source\PSoC5/HC_PWM.c ****         {
 336              		.loc 1 454 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340 0000 08B5     		push	{r3, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 3, -8
 343              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC5/HC_PWM.c ****             while(0u != (HC_PWM_ReadStatusRegister() & HC_PWM_STATUS_FIFONEMPTY))
 344              		.loc 1 455 0
 345 0002 01E0     		b	.L38
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 21


 346              	.L39:
 457:.\Generated_Source\PSoC5/HC_PWM.c ****                 (void)HC_PWM_ReadCapture();
 347              		.loc 1 457 0
 348 0004 FFF7FEFF 		bl	HC_PWM_ReadCapture
 349              	.LVL7:
 350              	.L38:
 455:.\Generated_Source\PSoC5/HC_PWM.c ****             while(0u != (HC_PWM_ReadStatusRegister() & HC_PWM_STATUS_FIFONEMPTY))
 351              		.loc 1 455 0 discriminator 1
 352 0008 FFF7FEFF 		bl	HC_PWM_ReadStatusRegister
 353              	.LVL8:
 354 000c 10F0100F 		tst	r0, #16
 355 0010 F8D1     		bne	.L39
 459:.\Generated_Source\PSoC5/HC_PWM.c ****         }
 356              		.loc 1 459 0
 357 0012 08BD     		pop	{r3, pc}
 358              		.cfi_endproc
 359              	.LFE6:
 360              		.size	HC_PWM_ClearFIFO, .-HC_PWM_ClearFIFO
 361              		.section	.text.HC_PWM_Init,"ax",%progbits
 362              		.align	2
 363              		.global	HC_PWM_Init
 364              		.thumb
 365              		.thumb_func
 366              		.type	HC_PWM_Init, %function
 367              	HC_PWM_Init:
 368              	.LFB1:
  85:.\Generated_Source\PSoC5/HC_PWM.c **** {
 369              		.loc 1 85 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373 0000 10B5     		push	{r4, lr}
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC5/HC_PWM.c ****         ctrl = HC_PWM_CONTROL & ((uint8)(~HC_PWM_CTRL_CMPMODE2_MASK)) &
 377              		.loc 1 117 0
 378 0002 174B     		ldr	r3, .L41
 379 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 380 0006 02F0C002 		and	r2, r2, #192
 381              	.LVL9:
 119:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_CONTROL = ctrl | HC_PWM_DEFAULT_COMPARE2_MODE |
 382              		.loc 1 119 0
 383 000a 42F00C02 		orr	r2, r2, #12
 384              	.LVL10:
 385 000e 1A70     		strb	r2, [r3]
 129:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_AUX_CONTROLDP0 |= (HC_PWM_AUX_CTRL_FIFO0_CLR);
 386              		.loc 1 129 0
 387 0010 2233     		adds	r3, r3, #34
 388 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 389 0014 42F00102 		orr	r2, r2, #1
 390 0018 1A70     		strb	r2, [r3]
 130:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_AUX_CONTROLDP1 |= (HC_PWM_AUX_CTRL_FIFO0_CLR);
 391              		.loc 1 130 0
 392 001a 124C     		ldr	r4, .L41+4
 393 001c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 394 001e 43F00103 		orr	r3, r3, #1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 22


 395 0022 2370     		strb	r3, [r4]
 133:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_WriteCounter(HC_PWM_INIT_PERIOD_VALUE);
 396              		.loc 1 133 0
 397 0024 4CF24F30 		movw	r0, #49999
 398 0028 FFF7FEFF 		bl	HC_PWM_WriteCounter
 399              	.LVL11:
 136:.\Generated_Source\PSoC5/HC_PWM.c ****     HC_PWM_WritePeriod(HC_PWM_INIT_PERIOD_VALUE);
 400              		.loc 1 136 0
 401 002c 4CF24F30 		movw	r0, #49999
 402 0030 FFF7FEFF 		bl	HC_PWM_WritePeriod
 403              	.LVL12:
 141:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_WriteCompare1(HC_PWM_INIT_COMPARE_VALUE1);
 404              		.loc 1 141 0
 405 0034 4AF6B370 		movw	r0, #44979
 406 0038 FFF7FEFF 		bl	HC_PWM_WriteCompare1
 407              	.LVL13:
 142:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_WriteCompare2(HC_PWM_INIT_COMPARE_VALUE2);
 408              		.loc 1 142 0
 409 003c 42F21070 		movw	r0, #10000
 410 0040 FFF7FEFF 		bl	HC_PWM_WriteCompare2
 411              	.LVL14:
 154:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_SetInterruptMode(HC_PWM_INIT_INTERRUPTS_MODE);
 412              		.loc 1 154 0
 413 0044 0020     		movs	r0, #0
 414 0046 FFF7FEFF 		bl	HC_PWM_SetInterruptMode
 415              	.LVL15:
 167:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_interruptState = CyEnterCriticalSection();
 416              		.loc 1 167 0
 417 004a FFF7FEFF 		bl	CyEnterCriticalSection
 418              	.LVL16:
 169:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_STATUS_AUX_CTRL |= HC_PWM_STATUS_ACTL_INT_EN_MASK;
 419              		.loc 1 169 0
 420 004e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 421 0050 43F01003 		orr	r3, r3, #16
 422 0054 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC5/HC_PWM.c ****             CyExitCriticalSection(HC_PWM_interruptState);
 423              		.loc 1 172 0
 424 0056 FFF7FEFF 		bl	CyExitCriticalSection
 425              	.LVL17:
 176:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_ClearFIFO();
 426              		.loc 1 176 0
 427 005a FFF7FEFF 		bl	HC_PWM_ClearFIFO
 428              	.LVL18:
 429 005e 10BD     		pop	{r4, pc}
 430              	.L42:
 431              		.align	2
 432              	.L41:
 433 0060 74650040 		.word	1073767796
 434 0064 97650040 		.word	1073767831
 435              		.cfi_endproc
 436              	.LFE1:
 437              		.size	HC_PWM_Init, .-HC_PWM_Init
 438              		.section	.text.HC_PWM_Start,"ax",%progbits
 439              		.align	2
 440              		.global	HC_PWM_Start
 441              		.thumb
 442              		.thumb_func
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 23


 443              		.type	HC_PWM_Start, %function
 444              	HC_PWM_Start:
 445              	.LFB0:
  56:.\Generated_Source\PSoC5/HC_PWM.c **** {
 446              		.loc 1 56 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450 0000 08B5     		push	{r3, lr}
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 3, -8
 453              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC5/HC_PWM.c ****     if(HC_PWM_initVar == 0u)
 454              		.loc 1 58 0
 455 0002 054B     		ldr	r3, .L45
 456 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 457 0006 23B9     		cbnz	r3, .L44
  60:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_Init();
 458              		.loc 1 60 0
 459 0008 FFF7FEFF 		bl	HC_PWM_Init
 460              	.LVL19:
  61:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_initVar = 1u;
 461              		.loc 1 61 0
 462 000c 0122     		movs	r2, #1
 463 000e 024B     		ldr	r3, .L45
 464 0010 1A70     		strb	r2, [r3]
 465              	.L44:
  63:.\Generated_Source\PSoC5/HC_PWM.c ****     HC_PWM_Enable();
 466              		.loc 1 63 0
 467 0012 FFF7FEFF 		bl	HC_PWM_Enable
 468              	.LVL20:
 469 0016 08BD     		pop	{r3, pc}
 470              	.L46:
 471              		.align	2
 472              	.L45:
 473 0018 00000000 		.word	.LANCHOR0
 474              		.cfi_endproc
 475              	.LFE0:
 476              		.size	HC_PWM_Start, .-HC_PWM_Start
 477              		.section	.text.HC_PWM_ReadCompare1,"ax",%progbits
 478              		.align	2
 479              		.global	HC_PWM_ReadCompare1
 480              		.thumb
 481              		.thumb_func
 482              		.type	HC_PWM_ReadCompare1, %function
 483              	HC_PWM_ReadCompare1:
 484              	.LFB15:
 794:.\Generated_Source\PSoC5/HC_PWM.c **** 
 795:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* (!HC_PWM_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/HC_PWM.c **** 
 797:.\Generated_Source\PSoC5/HC_PWM.c **** 
 798:.\Generated_Source\PSoC5/HC_PWM.c **** #if (HC_PWM_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/HC_PWM.c **** 
 800:.\Generated_Source\PSoC5/HC_PWM.c **** 
 801:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadCompare
 803:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 24


 804:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 805:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 806:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/HC_PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 809:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 811:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 812:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 813:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 815:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/HC_PWM.c ****     uint16 HC_PWM_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 818:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(HC_PWM_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/HC_PWM.c ****             return ((uint16)CY_GET_REG16(HC_PWM_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 821:.\Generated_Source\PSoC5/HC_PWM.c ****             return (CY_GET_REG16(HC_PWM_COMPARE1_LSB_PTR));
 822:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 824:.\Generated_Source\PSoC5/HC_PWM.c **** 
 825:.\Generated_Source\PSoC5/HC_PWM.c **** #else
 826:.\Generated_Source\PSoC5/HC_PWM.c **** 
 827:.\Generated_Source\PSoC5/HC_PWM.c **** 
 828:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadCompare1
 830:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 832:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 833:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 835:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 837:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 838:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 839:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 841:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/HC_PWM.c ****     uint16 HC_PWM_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 485              		.loc 1 843 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 844:.\Generated_Source\PSoC5/HC_PWM.c ****         return (CY_GET_REG16(HC_PWM_COMPARE1_LSB_PTR));
 490              		.loc 1 844 0
 491 0000 014B     		ldr	r3, .L48
 492 0002 1888     		ldrh	r0, [r3]
 845:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 493              		.loc 1 845 0
 494 0004 80B2     		uxth	r0, r0
 495 0006 7047     		bx	lr
 496              	.L49:
 497              		.align	2
 498              	.L48:
 499 0008 4C6A0040 		.word	1073769036
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 25


 500              		.cfi_endproc
 501              	.LFE15:
 502              		.size	HC_PWM_ReadCompare1, .-HC_PWM_ReadCompare1
 503              		.section	.text.HC_PWM_ReadCompare2,"ax",%progbits
 504              		.align	2
 505              		.global	HC_PWM_ReadCompare2
 506              		.thumb
 507              		.thumb_func
 508              		.type	HC_PWM_ReadCompare2, %function
 509              	HC_PWM_ReadCompare2:
 510              	.LFB16:
 846:.\Generated_Source\PSoC5/HC_PWM.c **** 
 847:.\Generated_Source\PSoC5/HC_PWM.c **** 
 848:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadCompare2
 850:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 852:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 853:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 855:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 857:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 858:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 859:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 861:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/HC_PWM.c ****     uint16 HC_PWM_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 511              		.loc 1 863 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              		@ link register save eliminated.
 864:.\Generated_Source\PSoC5/HC_PWM.c ****         return (CY_GET_REG16(HC_PWM_COMPARE2_LSB_PTR));
 516              		.loc 1 864 0
 517 0000 014B     		ldr	r3, .L51
 518 0002 1888     		ldrh	r0, [r3]
 865:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 519              		.loc 1 865 0
 520 0004 80B2     		uxth	r0, r0
 521 0006 7047     		bx	lr
 522              	.L52:
 523              		.align	2
 524              	.L51:
 525 0008 6C6A0040 		.word	1073769068
 526              		.cfi_endproc
 527              	.LFE16:
 528              		.size	HC_PWM_ReadCompare2, .-HC_PWM_ReadCompare2
 529              		.section	.text.HC_PWM_ReadPeriod,"ax",%progbits
 530              		.align	2
 531              		.global	HC_PWM_ReadPeriod
 532              		.thumb
 533              		.thumb_func
 534              		.type	HC_PWM_ReadPeriod, %function
 535              	HC_PWM_ReadPeriod:
 536              	.LFB17:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 26


 866:.\Generated_Source\PSoC5/HC_PWM.c **** 
 867:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* (HC_PWM_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/HC_PWM.c **** 
 869:.\Generated_Source\PSoC5/HC_PWM.c **** 
 870:.\Generated_Source\PSoC5/HC_PWM.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/HC_PWM.c **** * Function Name: HC_PWM_ReadPeriod
 872:.\Generated_Source\PSoC5/HC_PWM.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/HC_PWM.c **** *
 874:.\Generated_Source\PSoC5/HC_PWM.c **** * Summary:
 875:.\Generated_Source\PSoC5/HC_PWM.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/HC_PWM.c **** *
 877:.\Generated_Source\PSoC5/HC_PWM.c **** * Parameters:
 878:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
 879:.\Generated_Source\PSoC5/HC_PWM.c **** *
 880:.\Generated_Source\PSoC5/HC_PWM.c **** * Return:
 881:.\Generated_Source\PSoC5/HC_PWM.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/HC_PWM.c **** *
 883:.\Generated_Source\PSoC5/HC_PWM.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/HC_PWM.c **** uint16 HC_PWM_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/HC_PWM.c **** {
 537              		.loc 1 885 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 886:.\Generated_Source\PSoC5/HC_PWM.c ****     #if(HC_PWM_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/HC_PWM.c ****         return ((uint16)CY_GET_REG16(HC_PWM_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/HC_PWM.c ****     #else
 889:.\Generated_Source\PSoC5/HC_PWM.c ****         return (CY_GET_REG16(HC_PWM_PERIOD_LSB_PTR));
 542              		.loc 1 889 0
 543 0000 014B     		ldr	r3, .L54
 544 0002 1888     		ldrh	r0, [r3]
 890:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/HC_PWM.c **** }
 545              		.loc 1 891 0
 546 0004 80B2     		uxth	r0, r0
 547 0006 7047     		bx	lr
 548              	.L55:
 549              		.align	2
 550              	.L54:
 551 0008 8C6A0040 		.word	1073769100
 552              		.cfi_endproc
 553              	.LFE17:
 554              		.size	HC_PWM_ReadPeriod, .-HC_PWM_ReadPeriod
 555              		.global	HC_PWM_initVar
 556              		.bss
 557              		.set	.LANCHOR0,. + 0
 558              		.type	HC_PWM_initVar, %object
 559              		.size	HC_PWM_initVar, 1
 560              	HC_PWM_initVar:
 561 0000 00       		.space	1
 562              		.text
 563              	.Letext0:
 564              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 565              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 566              		.section	.debug_info,"",%progbits
 567              	.Ldebug_info0:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 27


 568 0000 99030000 		.4byte	0x399
 569 0004 0400     		.2byte	0x4
 570 0006 00000000 		.4byte	.Ldebug_abbrev0
 571 000a 04       		.byte	0x4
 572 000b 01       		.uleb128 0x1
 573 000c 32020000 		.4byte	.LASF42
 574 0010 01       		.byte	0x1
 575 0011 34010000 		.4byte	.LASF43
 576 0015 B0010000 		.4byte	.LASF44
 577 0019 00000000 		.4byte	.Ldebug_ranges0+0
 578 001d 00000000 		.4byte	0
 579 0021 00000000 		.4byte	.Ldebug_line0
 580 0025 02       		.uleb128 0x2
 581 0026 01       		.byte	0x1
 582 0027 06       		.byte	0x6
 583 0028 65030000 		.4byte	.LASF0
 584 002c 02       		.uleb128 0x2
 585 002d 01       		.byte	0x1
 586 002e 08       		.byte	0x8
 587 002f CC000000 		.4byte	.LASF1
 588 0033 02       		.uleb128 0x2
 589 0034 02       		.byte	0x2
 590 0035 05       		.byte	0x5
 591 0036 FA020000 		.4byte	.LASF2
 592 003a 02       		.uleb128 0x2
 593 003b 02       		.byte	0x2
 594 003c 07       		.byte	0x7
 595 003d 49000000 		.4byte	.LASF3
 596 0041 02       		.uleb128 0x2
 597 0042 04       		.byte	0x4
 598 0043 05       		.byte	0x5
 599 0044 3E030000 		.4byte	.LASF4
 600 0048 02       		.uleb128 0x2
 601 0049 04       		.byte	0x4
 602 004a 07       		.byte	0x7
 603 004b DF000000 		.4byte	.LASF5
 604 004f 02       		.uleb128 0x2
 605 0050 08       		.byte	0x8
 606 0051 05       		.byte	0x5
 607 0052 B7020000 		.4byte	.LASF6
 608 0056 02       		.uleb128 0x2
 609 0057 08       		.byte	0x8
 610 0058 07       		.byte	0x7
 611 0059 B5000000 		.4byte	.LASF7
 612 005d 03       		.uleb128 0x3
 613 005e 04       		.byte	0x4
 614 005f 05       		.byte	0x5
 615 0060 696E7400 		.ascii	"int\000"
 616 0064 02       		.uleb128 0x2
 617 0065 04       		.byte	0x4
 618 0066 07       		.byte	0x7
 619 0067 A3010000 		.4byte	.LASF8
 620 006b 04       		.uleb128 0x4
 621 006c F1000000 		.4byte	.LASF9
 622 0070 02       		.byte	0x2
 623 0071 B3       		.byte	0xb3
 624 0072 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 28


 625 0076 04       		.uleb128 0x4
 626 0077 79010000 		.4byte	.LASF10
 627 007b 02       		.byte	0x2
 628 007c B4       		.byte	0xb4
 629 007d 3A000000 		.4byte	0x3a
 630 0081 02       		.uleb128 0x2
 631 0082 04       		.byte	0x4
 632 0083 04       		.byte	0x4
 633 0084 A7000000 		.4byte	.LASF11
 634 0088 02       		.uleb128 0x2
 635 0089 08       		.byte	0x8
 636 008a 04       		.byte	0x4
 637 008b 56010000 		.4byte	.LASF12
 638 008f 02       		.uleb128 0x2
 639 0090 01       		.byte	0x1
 640 0091 08       		.byte	0x8
 641 0092 47030000 		.4byte	.LASF13
 642 0096 05       		.uleb128 0x5
 643 0097 DA000000 		.4byte	.LASF14
 644 009b 02       		.byte	0x2
 645 009c 5D01     		.2byte	0x15d
 646 009e A2000000 		.4byte	0xa2
 647 00a2 06       		.uleb128 0x6
 648 00a3 6B000000 		.4byte	0x6b
 649 00a7 05       		.uleb128 0x5
 650 00a8 00000000 		.4byte	.LASF15
 651 00ac 02       		.byte	0x2
 652 00ad 5E01     		.2byte	0x15e
 653 00af B3000000 		.4byte	0xb3
 654 00b3 06       		.uleb128 0x6
 655 00b4 76000000 		.4byte	0x76
 656 00b8 02       		.uleb128 0x2
 657 00b9 04       		.byte	0x4
 658 00ba 07       		.byte	0x7
 659 00bb AE020000 		.4byte	.LASF16
 660 00bf 07       		.uleb128 0x7
 661 00c0 86000000 		.4byte	.LASF17
 662 00c4 01       		.byte	0x1
 663 00c5 C7       		.byte	0xc7
 664 00c6 00000000 		.4byte	.LFB2
 665 00ca 10000000 		.4byte	.LFE2-.LFB2
 666 00ce 01       		.uleb128 0x1
 667 00cf 9C       		.byte	0x9c
 668 00d0 07       		.uleb128 0x7
 669 00d1 4C030000 		.4byte	.LASF18
 670 00d5 01       		.byte	0x1
 671 00d6 E9       		.byte	0xe9
 672 00d7 00000000 		.4byte	.LFB3
 673 00db 10000000 		.4byte	.LFE3-.LFB3
 674 00df 01       		.uleb128 0x1
 675 00e0 9C       		.byte	0x9c
 676 00e1 08       		.uleb128 0x8
 677 00e2 D3020000 		.4byte	.LASF19
 678 00e6 01       		.byte	0x1
 679 00e7 9301     		.2byte	0x193
 680 00e9 00000000 		.4byte	.LFB4
 681 00ed 0C000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 29


 682 00f1 01       		.uleb128 0x1
 683 00f2 9C       		.byte	0x9c
 684 00f3 06010000 		.4byte	0x106
 685 00f7 09       		.uleb128 0x9
 686 00f8 AD000000 		.4byte	.LASF21
 687 00fc 01       		.byte	0x1
 688 00fd 9301     		.2byte	0x193
 689 00ff 76000000 		.4byte	0x76
 690 0103 01       		.uleb128 0x1
 691 0104 50       		.byte	0x50
 692 0105 00       		.byte	0
 693 0106 0A       		.uleb128 0xa
 694 0107 1E000000 		.4byte	.LASF28
 695 010b 01       		.byte	0x1
 696 010c A901     		.2byte	0x1a9
 697 010e 76000000 		.4byte	0x76
 698 0112 00000000 		.4byte	.LFB5
 699 0116 14000000 		.4byte	.LFE5-.LFB5
 700 011a 01       		.uleb128 0x1
 701 011b 9C       		.byte	0x9c
 702 011c 08       		.uleb128 0x8
 703 011d 94000000 		.4byte	.LASF20
 704 0121 01       		.byte	0x1
 705 0122 E201     		.2byte	0x1e2
 706 0124 00000000 		.4byte	.LFB7
 707 0128 0C000000 		.4byte	.LFE7-.LFB7
 708 012c 01       		.uleb128 0x1
 709 012d 9C       		.byte	0x9c
 710 012e 41010000 		.4byte	0x141
 711 0132 09       		.uleb128 0x9
 712 0133 31000000 		.4byte	.LASF22
 713 0137 01       		.byte	0x1
 714 0138 E201     		.2byte	0x1e2
 715 013a 76000000 		.4byte	0x76
 716 013e 01       		.uleb128 0x1
 717 013f 50       		.byte	0x50
 718 0140 00       		.byte	0
 719 0141 08       		.uleb128 0x8
 720 0142 5C000000 		.4byte	.LASF23
 721 0146 01       		.byte	0x1
 722 0147 2B02     		.2byte	0x22b
 723 0149 00000000 		.4byte	.LFB8
 724 014d 0C000000 		.4byte	.LFE8-.LFB8
 725 0151 01       		.uleb128 0x1
 726 0152 9C       		.byte	0x9c
 727 0153 66010000 		.4byte	0x166
 728 0157 09       		.uleb128 0x9
 729 0158 71030000 		.4byte	.LASF24
 730 015c 01       		.byte	0x1
 731 015d 2B02     		.2byte	0x22b
 732 015f 76000000 		.4byte	0x76
 733 0163 01       		.uleb128 0x1
 734 0164 50       		.byte	0x50
 735 0165 00       		.byte	0
 736 0166 08       		.uleb128 0x8
 737 0167 71000000 		.4byte	.LASF25
 738 016b 01       		.byte	0x1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 30


 739 016c 4802     		.2byte	0x248
 740 016e 00000000 		.4byte	.LFB9
 741 0172 0C000000 		.4byte	.LFE9-.LFB9
 742 0176 01       		.uleb128 0x1
 743 0177 9C       		.byte	0x9c
 744 0178 8B010000 		.4byte	0x18b
 745 017c 09       		.uleb128 0x9
 746 017d 71030000 		.4byte	.LASF24
 747 0181 01       		.byte	0x1
 748 0182 4802     		.2byte	0x248
 749 0184 76000000 		.4byte	0x76
 750 0188 01       		.uleb128 0x1
 751 0189 50       		.byte	0x50
 752 018a 00       		.byte	0
 753 018b 08       		.uleb128 0x8
 754 018c 06000000 		.4byte	.LASF26
 755 0190 01       		.byte	0x1
 756 0191 AC02     		.2byte	0x2ac
 757 0193 00000000 		.4byte	.LFB10
 758 0197 0C000000 		.4byte	.LFE10-.LFB10
 759 019b 01       		.uleb128 0x1
 760 019c 9C       		.byte	0x9c
 761 019d B0010000 		.4byte	0x1b0
 762 01a1 09       		.uleb128 0x9
 763 01a2 C5020000 		.4byte	.LASF27
 764 01a6 01       		.byte	0x1
 765 01a7 AC02     		.2byte	0x2ac
 766 01a9 6B000000 		.4byte	0x6b
 767 01ad 01       		.uleb128 0x1
 768 01ae 50       		.byte	0x50
 769 01af 00       		.byte	0
 770 01b0 0A       		.uleb128 0xa
 771 01b1 1A010000 		.4byte	.LASF29
 772 01b5 01       		.byte	0x1
 773 01b6 C702     		.2byte	0x2c7
 774 01b8 6B000000 		.4byte	0x6b
 775 01bc 00000000 		.4byte	.LFB11
 776 01c0 0C000000 		.4byte	.LFE11-.LFB11
 777 01c4 01       		.uleb128 0x1
 778 01c5 9C       		.byte	0x9c
 779 01c6 0B       		.uleb128 0xb
 780 01c7 FF000000 		.4byte	.LASF45
 781 01cb 01       		.byte	0x1
 782 01cc E102     		.2byte	0x2e1
 783 01ce 6B000000 		.4byte	0x6b
 784 01d2 00000000 		.4byte	.LFB12
 785 01d6 0C000000 		.4byte	.LFE12-.LFB12
 786 01da 01       		.uleb128 0x1
 787 01db 9C       		.byte	0x9c
 788 01dc EF010000 		.4byte	0x1ef
 789 01e0 0C       		.uleb128 0xc
 790 01e1 17020000 		.4byte	.LASF35
 791 01e5 01       		.byte	0x1
 792 01e6 E302     		.2byte	0x2e3
 793 01e8 6B000000 		.4byte	0x6b
 794 01ec 01       		.uleb128 0x1
 795 01ed 50       		.byte	0x50
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 31


 796 01ee 00       		.byte	0
 797 01ef 08       		.uleb128 0x8
 798 01f0 5D010000 		.4byte	.LASF30
 799 01f4 01       		.byte	0x1
 800 01f5 FD02     		.2byte	0x2fd
 801 01f7 00000000 		.4byte	.LFB13
 802 01fb 0C000000 		.4byte	.LFE13-.LFB13
 803 01ff 01       		.uleb128 0x1
 804 0200 9C       		.byte	0x9c
 805 0201 14020000 		.4byte	0x214
 806 0205 09       		.uleb128 0x9
 807 0206 F7000000 		.4byte	.LASF31
 808 020a 01       		.byte	0x1
 809 020b FD02     		.2byte	0x2fd
 810 020d 6B000000 		.4byte	0x6b
 811 0211 01       		.uleb128 0x1
 812 0212 50       		.byte	0x50
 813 0213 00       		.byte	0
 814 0214 0A       		.uleb128 0xa
 815 0215 E7020000 		.4byte	.LASF32
 816 0219 01       		.byte	0x1
 817 021a 1603     		.2byte	0x316
 818 021c 76000000 		.4byte	0x76
 819 0220 00000000 		.4byte	.LFB14
 820 0224 0C000000 		.4byte	.LFE14-.LFB14
 821 0228 01       		.uleb128 0x1
 822 0229 9C       		.byte	0x9c
 823 022a 08       		.uleb128 0x8
 824 022b 38000000 		.4byte	.LASF33
 825 022f 01       		.byte	0x1
 826 0230 C501     		.2byte	0x1c5
 827 0232 00000000 		.4byte	.LFB6
 828 0236 14000000 		.4byte	.LFE6-.LFB6
 829 023a 01       		.uleb128 0x1
 830 023b 9C       		.byte	0x9c
 831 023c 53020000 		.4byte	0x253
 832 0240 0D       		.uleb128 0xd
 833 0241 08000000 		.4byte	.LVL7
 834 0245 14020000 		.4byte	0x214
 835 0249 0D       		.uleb128 0xd
 836 024a 0C000000 		.4byte	.LVL8
 837 024e B0010000 		.4byte	0x1b0
 838 0252 00       		.byte	0
 839 0253 0E       		.uleb128 0xe
 840 0254 97010000 		.4byte	.LASF34
 841 0258 01       		.byte	0x1
 842 0259 54       		.byte	0x54
 843 025a 00000000 		.4byte	.LFB1
 844 025e 68000000 		.4byte	.LFE1-.LFB1
 845 0262 01       		.uleb128 0x1
 846 0263 9C       		.byte	0x9c
 847 0264 09030000 		.4byte	0x309
 848 0268 0F       		.uleb128 0xf
 849 0269 2D020000 		.4byte	.LASF36
 850 026d 01       		.byte	0x1
 851 026e 57       		.byte	0x57
 852 026f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 32


 853 0273 00000000 		.4byte	.LLST0
 854 0277 0F       		.uleb128 0xf
 855 0278 79030000 		.4byte	.LASF37
 856 027c 01       		.byte	0x1
 857 027d 5D       		.byte	0x5d
 858 027e 6B000000 		.4byte	0x6b
 859 0282 13000000 		.4byte	.LLST1
 860 0286 10       		.uleb128 0x10
 861 0287 2C000000 		.4byte	.LVL11
 862 028b E1000000 		.4byte	0xe1
 863 028f 9B020000 		.4byte	0x29b
 864 0293 11       		.uleb128 0x11
 865 0294 01       		.uleb128 0x1
 866 0295 50       		.byte	0x50
 867 0296 03       		.uleb128 0x3
 868 0297 0B       		.byte	0xb
 869 0298 4FC3     		.2byte	0xc34f
 870 029a 00       		.byte	0
 871 029b 10       		.uleb128 0x10
 872 029c 34000000 		.4byte	.LVL12
 873 02a0 1C010000 		.4byte	0x11c
 874 02a4 B0020000 		.4byte	0x2b0
 875 02a8 11       		.uleb128 0x11
 876 02a9 01       		.uleb128 0x1
 877 02aa 50       		.byte	0x50
 878 02ab 03       		.uleb128 0x3
 879 02ac 0B       		.byte	0xb
 880 02ad 4FC3     		.2byte	0xc34f
 881 02af 00       		.byte	0
 882 02b0 10       		.uleb128 0x10
 883 02b1 3C000000 		.4byte	.LVL13
 884 02b5 41010000 		.4byte	0x141
 885 02b9 C5020000 		.4byte	0x2c5
 886 02bd 11       		.uleb128 0x11
 887 02be 01       		.uleb128 0x1
 888 02bf 50       		.byte	0x50
 889 02c0 03       		.uleb128 0x3
 890 02c1 0B       		.byte	0xb
 891 02c2 B3AF     		.2byte	0xafb3
 892 02c4 00       		.byte	0
 893 02c5 10       		.uleb128 0x10
 894 02c6 44000000 		.4byte	.LVL14
 895 02ca 66010000 		.4byte	0x166
 896 02ce DA020000 		.4byte	0x2da
 897 02d2 11       		.uleb128 0x11
 898 02d3 01       		.uleb128 0x1
 899 02d4 50       		.byte	0x50
 900 02d5 03       		.uleb128 0x3
 901 02d6 0A       		.byte	0xa
 902 02d7 1027     		.2byte	0x2710
 903 02d9 00       		.byte	0
 904 02da 10       		.uleb128 0x10
 905 02db 4A000000 		.4byte	.LVL15
 906 02df 8B010000 		.4byte	0x18b
 907 02e3 ED020000 		.4byte	0x2ed
 908 02e7 11       		.uleb128 0x11
 909 02e8 01       		.uleb128 0x1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 33


 910 02e9 50       		.byte	0x50
 911 02ea 01       		.uleb128 0x1
 912 02eb 30       		.byte	0x30
 913 02ec 00       		.byte	0
 914 02ed 0D       		.uleb128 0xd
 915 02ee 4E000000 		.4byte	.LVL16
 916 02f2 84030000 		.4byte	0x384
 917 02f6 0D       		.uleb128 0xd
 918 02f7 5A000000 		.4byte	.LVL17
 919 02fb 8F030000 		.4byte	0x38f
 920 02ff 0D       		.uleb128 0xd
 921 0300 5E000000 		.4byte	.LVL18
 922 0304 2A020000 		.4byte	0x22a
 923 0308 00       		.byte	0
 924 0309 0E       		.uleb128 0xe
 925 030a 58030000 		.4byte	.LASF38
 926 030e 01       		.byte	0x1
 927 030f 37       		.byte	0x37
 928 0310 00000000 		.4byte	.LFB0
 929 0314 1C000000 		.4byte	.LFE0-.LFB0
 930 0318 01       		.uleb128 0x1
 931 0319 9C       		.byte	0x9c
 932 031a 31030000 		.4byte	0x331
 933 031e 0D       		.uleb128 0xd
 934 031f 0C000000 		.4byte	.LVL19
 935 0323 53020000 		.4byte	0x253
 936 0327 0D       		.uleb128 0xd
 937 0328 16000000 		.4byte	.LVL20
 938 032c BF000000 		.4byte	0xbf
 939 0330 00       		.byte	0
 940 0331 0A       		.uleb128 0xa
 941 0332 04030000 		.4byte	.LASF39
 942 0336 01       		.byte	0x1
 943 0337 4A03     		.2byte	0x34a
 944 0339 76000000 		.4byte	0x76
 945 033d 00000000 		.4byte	.LFB15
 946 0341 0C000000 		.4byte	.LFE15-.LFB15
 947 0345 01       		.uleb128 0x1
 948 0346 9C       		.byte	0x9c
 949 0347 0A       		.uleb128 0xa
 950 0348 18030000 		.4byte	.LASF40
 951 034c 01       		.byte	0x1
 952 034d 5E03     		.2byte	0x35e
 953 034f 76000000 		.4byte	0x76
 954 0353 00000000 		.4byte	.LFB16
 955 0357 0C000000 		.4byte	.LFE16-.LFB16
 956 035b 01       		.uleb128 0x1
 957 035c 9C       		.byte	0x9c
 958 035d 0A       		.uleb128 0xa
 959 035e 2C030000 		.4byte	.LASF41
 960 0362 01       		.byte	0x1
 961 0363 7403     		.2byte	0x374
 962 0365 76000000 		.4byte	0x76
 963 0369 00000000 		.4byte	.LFB17
 964 036d 0C000000 		.4byte	.LFE17-.LFB17
 965 0371 01       		.uleb128 0x1
 966 0372 9C       		.byte	0x9c
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 34


 967 0373 12       		.uleb128 0x12
 968 0374 1E020000 		.4byte	.LASF46
 969 0378 01       		.byte	0x1
 970 0379 20       		.byte	0x20
 971 037a 6B000000 		.4byte	0x6b
 972 037e 05       		.uleb128 0x5
 973 037f 03       		.byte	0x3
 974 0380 00000000 		.4byte	HC_PWM_initVar
 975 0384 13       		.uleb128 0x13
 976 0385 80010000 		.4byte	.LASF47
 977 0389 03       		.byte	0x3
 978 038a 7E       		.byte	0x7e
 979 038b 6B000000 		.4byte	0x6b
 980 038f 14       		.uleb128 0x14
 981 0390 01020000 		.4byte	.LASF48
 982 0394 03       		.byte	0x3
 983 0395 7F       		.byte	0x7f
 984 0396 15       		.uleb128 0x15
 985 0397 6B000000 		.4byte	0x6b
 986 039b 00       		.byte	0
 987 039c 00       		.byte	0
 988              		.section	.debug_abbrev,"",%progbits
 989              	.Ldebug_abbrev0:
 990 0000 01       		.uleb128 0x1
 991 0001 11       		.uleb128 0x11
 992 0002 01       		.byte	0x1
 993 0003 25       		.uleb128 0x25
 994 0004 0E       		.uleb128 0xe
 995 0005 13       		.uleb128 0x13
 996 0006 0B       		.uleb128 0xb
 997 0007 03       		.uleb128 0x3
 998 0008 0E       		.uleb128 0xe
 999 0009 1B       		.uleb128 0x1b
 1000 000a 0E       		.uleb128 0xe
 1001 000b 55       		.uleb128 0x55
 1002 000c 17       		.uleb128 0x17
 1003 000d 11       		.uleb128 0x11
 1004 000e 01       		.uleb128 0x1
 1005 000f 10       		.uleb128 0x10
 1006 0010 17       		.uleb128 0x17
 1007 0011 00       		.byte	0
 1008 0012 00       		.byte	0
 1009 0013 02       		.uleb128 0x2
 1010 0014 24       		.uleb128 0x24
 1011 0015 00       		.byte	0
 1012 0016 0B       		.uleb128 0xb
 1013 0017 0B       		.uleb128 0xb
 1014 0018 3E       		.uleb128 0x3e
 1015 0019 0B       		.uleb128 0xb
 1016 001a 03       		.uleb128 0x3
 1017 001b 0E       		.uleb128 0xe
 1018 001c 00       		.byte	0
 1019 001d 00       		.byte	0
 1020 001e 03       		.uleb128 0x3
 1021 001f 24       		.uleb128 0x24
 1022 0020 00       		.byte	0
 1023 0021 0B       		.uleb128 0xb
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 35


 1024 0022 0B       		.uleb128 0xb
 1025 0023 3E       		.uleb128 0x3e
 1026 0024 0B       		.uleb128 0xb
 1027 0025 03       		.uleb128 0x3
 1028 0026 08       		.uleb128 0x8
 1029 0027 00       		.byte	0
 1030 0028 00       		.byte	0
 1031 0029 04       		.uleb128 0x4
 1032 002a 16       		.uleb128 0x16
 1033 002b 00       		.byte	0
 1034 002c 03       		.uleb128 0x3
 1035 002d 0E       		.uleb128 0xe
 1036 002e 3A       		.uleb128 0x3a
 1037 002f 0B       		.uleb128 0xb
 1038 0030 3B       		.uleb128 0x3b
 1039 0031 0B       		.uleb128 0xb
 1040 0032 49       		.uleb128 0x49
 1041 0033 13       		.uleb128 0x13
 1042 0034 00       		.byte	0
 1043 0035 00       		.byte	0
 1044 0036 05       		.uleb128 0x5
 1045 0037 16       		.uleb128 0x16
 1046 0038 00       		.byte	0
 1047 0039 03       		.uleb128 0x3
 1048 003a 0E       		.uleb128 0xe
 1049 003b 3A       		.uleb128 0x3a
 1050 003c 0B       		.uleb128 0xb
 1051 003d 3B       		.uleb128 0x3b
 1052 003e 05       		.uleb128 0x5
 1053 003f 49       		.uleb128 0x49
 1054 0040 13       		.uleb128 0x13
 1055 0041 00       		.byte	0
 1056 0042 00       		.byte	0
 1057 0043 06       		.uleb128 0x6
 1058 0044 35       		.uleb128 0x35
 1059 0045 00       		.byte	0
 1060 0046 49       		.uleb128 0x49
 1061 0047 13       		.uleb128 0x13
 1062 0048 00       		.byte	0
 1063 0049 00       		.byte	0
 1064 004a 07       		.uleb128 0x7
 1065 004b 2E       		.uleb128 0x2e
 1066 004c 00       		.byte	0
 1067 004d 3F       		.uleb128 0x3f
 1068 004e 19       		.uleb128 0x19
 1069 004f 03       		.uleb128 0x3
 1070 0050 0E       		.uleb128 0xe
 1071 0051 3A       		.uleb128 0x3a
 1072 0052 0B       		.uleb128 0xb
 1073 0053 3B       		.uleb128 0x3b
 1074 0054 0B       		.uleb128 0xb
 1075 0055 27       		.uleb128 0x27
 1076 0056 19       		.uleb128 0x19
 1077 0057 11       		.uleb128 0x11
 1078 0058 01       		.uleb128 0x1
 1079 0059 12       		.uleb128 0x12
 1080 005a 06       		.uleb128 0x6
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 36


 1081 005b 40       		.uleb128 0x40
 1082 005c 18       		.uleb128 0x18
 1083 005d 9742     		.uleb128 0x2117
 1084 005f 19       		.uleb128 0x19
 1085 0060 00       		.byte	0
 1086 0061 00       		.byte	0
 1087 0062 08       		.uleb128 0x8
 1088 0063 2E       		.uleb128 0x2e
 1089 0064 01       		.byte	0x1
 1090 0065 3F       		.uleb128 0x3f
 1091 0066 19       		.uleb128 0x19
 1092 0067 03       		.uleb128 0x3
 1093 0068 0E       		.uleb128 0xe
 1094 0069 3A       		.uleb128 0x3a
 1095 006a 0B       		.uleb128 0xb
 1096 006b 3B       		.uleb128 0x3b
 1097 006c 05       		.uleb128 0x5
 1098 006d 27       		.uleb128 0x27
 1099 006e 19       		.uleb128 0x19
 1100 006f 11       		.uleb128 0x11
 1101 0070 01       		.uleb128 0x1
 1102 0071 12       		.uleb128 0x12
 1103 0072 06       		.uleb128 0x6
 1104 0073 40       		.uleb128 0x40
 1105 0074 18       		.uleb128 0x18
 1106 0075 9742     		.uleb128 0x2117
 1107 0077 19       		.uleb128 0x19
 1108 0078 01       		.uleb128 0x1
 1109 0079 13       		.uleb128 0x13
 1110 007a 00       		.byte	0
 1111 007b 00       		.byte	0
 1112 007c 09       		.uleb128 0x9
 1113 007d 05       		.uleb128 0x5
 1114 007e 00       		.byte	0
 1115 007f 03       		.uleb128 0x3
 1116 0080 0E       		.uleb128 0xe
 1117 0081 3A       		.uleb128 0x3a
 1118 0082 0B       		.uleb128 0xb
 1119 0083 3B       		.uleb128 0x3b
 1120 0084 05       		.uleb128 0x5
 1121 0085 49       		.uleb128 0x49
 1122 0086 13       		.uleb128 0x13
 1123 0087 02       		.uleb128 0x2
 1124 0088 18       		.uleb128 0x18
 1125 0089 00       		.byte	0
 1126 008a 00       		.byte	0
 1127 008b 0A       		.uleb128 0xa
 1128 008c 2E       		.uleb128 0x2e
 1129 008d 00       		.byte	0
 1130 008e 3F       		.uleb128 0x3f
 1131 008f 19       		.uleb128 0x19
 1132 0090 03       		.uleb128 0x3
 1133 0091 0E       		.uleb128 0xe
 1134 0092 3A       		.uleb128 0x3a
 1135 0093 0B       		.uleb128 0xb
 1136 0094 3B       		.uleb128 0x3b
 1137 0095 05       		.uleb128 0x5
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 37


 1138 0096 27       		.uleb128 0x27
 1139 0097 19       		.uleb128 0x19
 1140 0098 49       		.uleb128 0x49
 1141 0099 13       		.uleb128 0x13
 1142 009a 11       		.uleb128 0x11
 1143 009b 01       		.uleb128 0x1
 1144 009c 12       		.uleb128 0x12
 1145 009d 06       		.uleb128 0x6
 1146 009e 40       		.uleb128 0x40
 1147 009f 18       		.uleb128 0x18
 1148 00a0 9742     		.uleb128 0x2117
 1149 00a2 19       		.uleb128 0x19
 1150 00a3 00       		.byte	0
 1151 00a4 00       		.byte	0
 1152 00a5 0B       		.uleb128 0xb
 1153 00a6 2E       		.uleb128 0x2e
 1154 00a7 01       		.byte	0x1
 1155 00a8 3F       		.uleb128 0x3f
 1156 00a9 19       		.uleb128 0x19
 1157 00aa 03       		.uleb128 0x3
 1158 00ab 0E       		.uleb128 0xe
 1159 00ac 3A       		.uleb128 0x3a
 1160 00ad 0B       		.uleb128 0xb
 1161 00ae 3B       		.uleb128 0x3b
 1162 00af 05       		.uleb128 0x5
 1163 00b0 27       		.uleb128 0x27
 1164 00b1 19       		.uleb128 0x19
 1165 00b2 49       		.uleb128 0x49
 1166 00b3 13       		.uleb128 0x13
 1167 00b4 11       		.uleb128 0x11
 1168 00b5 01       		.uleb128 0x1
 1169 00b6 12       		.uleb128 0x12
 1170 00b7 06       		.uleb128 0x6
 1171 00b8 40       		.uleb128 0x40
 1172 00b9 18       		.uleb128 0x18
 1173 00ba 9742     		.uleb128 0x2117
 1174 00bc 19       		.uleb128 0x19
 1175 00bd 01       		.uleb128 0x1
 1176 00be 13       		.uleb128 0x13
 1177 00bf 00       		.byte	0
 1178 00c0 00       		.byte	0
 1179 00c1 0C       		.uleb128 0xc
 1180 00c2 34       		.uleb128 0x34
 1181 00c3 00       		.byte	0
 1182 00c4 03       		.uleb128 0x3
 1183 00c5 0E       		.uleb128 0xe
 1184 00c6 3A       		.uleb128 0x3a
 1185 00c7 0B       		.uleb128 0xb
 1186 00c8 3B       		.uleb128 0x3b
 1187 00c9 05       		.uleb128 0x5
 1188 00ca 49       		.uleb128 0x49
 1189 00cb 13       		.uleb128 0x13
 1190 00cc 02       		.uleb128 0x2
 1191 00cd 18       		.uleb128 0x18
 1192 00ce 00       		.byte	0
 1193 00cf 00       		.byte	0
 1194 00d0 0D       		.uleb128 0xd
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 38


 1195 00d1 898201   		.uleb128 0x4109
 1196 00d4 00       		.byte	0
 1197 00d5 11       		.uleb128 0x11
 1198 00d6 01       		.uleb128 0x1
 1199 00d7 31       		.uleb128 0x31
 1200 00d8 13       		.uleb128 0x13
 1201 00d9 00       		.byte	0
 1202 00da 00       		.byte	0
 1203 00db 0E       		.uleb128 0xe
 1204 00dc 2E       		.uleb128 0x2e
 1205 00dd 01       		.byte	0x1
 1206 00de 3F       		.uleb128 0x3f
 1207 00df 19       		.uleb128 0x19
 1208 00e0 03       		.uleb128 0x3
 1209 00e1 0E       		.uleb128 0xe
 1210 00e2 3A       		.uleb128 0x3a
 1211 00e3 0B       		.uleb128 0xb
 1212 00e4 3B       		.uleb128 0x3b
 1213 00e5 0B       		.uleb128 0xb
 1214 00e6 27       		.uleb128 0x27
 1215 00e7 19       		.uleb128 0x19
 1216 00e8 11       		.uleb128 0x11
 1217 00e9 01       		.uleb128 0x1
 1218 00ea 12       		.uleb128 0x12
 1219 00eb 06       		.uleb128 0x6
 1220 00ec 40       		.uleb128 0x40
 1221 00ed 18       		.uleb128 0x18
 1222 00ee 9742     		.uleb128 0x2117
 1223 00f0 19       		.uleb128 0x19
 1224 00f1 01       		.uleb128 0x1
 1225 00f2 13       		.uleb128 0x13
 1226 00f3 00       		.byte	0
 1227 00f4 00       		.byte	0
 1228 00f5 0F       		.uleb128 0xf
 1229 00f6 34       		.uleb128 0x34
 1230 00f7 00       		.byte	0
 1231 00f8 03       		.uleb128 0x3
 1232 00f9 0E       		.uleb128 0xe
 1233 00fa 3A       		.uleb128 0x3a
 1234 00fb 0B       		.uleb128 0xb
 1235 00fc 3B       		.uleb128 0x3b
 1236 00fd 0B       		.uleb128 0xb
 1237 00fe 49       		.uleb128 0x49
 1238 00ff 13       		.uleb128 0x13
 1239 0100 02       		.uleb128 0x2
 1240 0101 17       		.uleb128 0x17
 1241 0102 00       		.byte	0
 1242 0103 00       		.byte	0
 1243 0104 10       		.uleb128 0x10
 1244 0105 898201   		.uleb128 0x4109
 1245 0108 01       		.byte	0x1
 1246 0109 11       		.uleb128 0x11
 1247 010a 01       		.uleb128 0x1
 1248 010b 31       		.uleb128 0x31
 1249 010c 13       		.uleb128 0x13
 1250 010d 01       		.uleb128 0x1
 1251 010e 13       		.uleb128 0x13
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 39


 1252 010f 00       		.byte	0
 1253 0110 00       		.byte	0
 1254 0111 11       		.uleb128 0x11
 1255 0112 8A8201   		.uleb128 0x410a
 1256 0115 00       		.byte	0
 1257 0116 02       		.uleb128 0x2
 1258 0117 18       		.uleb128 0x18
 1259 0118 9142     		.uleb128 0x2111
 1260 011a 18       		.uleb128 0x18
 1261 011b 00       		.byte	0
 1262 011c 00       		.byte	0
 1263 011d 12       		.uleb128 0x12
 1264 011e 34       		.uleb128 0x34
 1265 011f 00       		.byte	0
 1266 0120 03       		.uleb128 0x3
 1267 0121 0E       		.uleb128 0xe
 1268 0122 3A       		.uleb128 0x3a
 1269 0123 0B       		.uleb128 0xb
 1270 0124 3B       		.uleb128 0x3b
 1271 0125 0B       		.uleb128 0xb
 1272 0126 49       		.uleb128 0x49
 1273 0127 13       		.uleb128 0x13
 1274 0128 3F       		.uleb128 0x3f
 1275 0129 19       		.uleb128 0x19
 1276 012a 02       		.uleb128 0x2
 1277 012b 18       		.uleb128 0x18
 1278 012c 00       		.byte	0
 1279 012d 00       		.byte	0
 1280 012e 13       		.uleb128 0x13
 1281 012f 2E       		.uleb128 0x2e
 1282 0130 00       		.byte	0
 1283 0131 3F       		.uleb128 0x3f
 1284 0132 19       		.uleb128 0x19
 1285 0133 03       		.uleb128 0x3
 1286 0134 0E       		.uleb128 0xe
 1287 0135 3A       		.uleb128 0x3a
 1288 0136 0B       		.uleb128 0xb
 1289 0137 3B       		.uleb128 0x3b
 1290 0138 0B       		.uleb128 0xb
 1291 0139 27       		.uleb128 0x27
 1292 013a 19       		.uleb128 0x19
 1293 013b 49       		.uleb128 0x49
 1294 013c 13       		.uleb128 0x13
 1295 013d 3C       		.uleb128 0x3c
 1296 013e 19       		.uleb128 0x19
 1297 013f 00       		.byte	0
 1298 0140 00       		.byte	0
 1299 0141 14       		.uleb128 0x14
 1300 0142 2E       		.uleb128 0x2e
 1301 0143 01       		.byte	0x1
 1302 0144 3F       		.uleb128 0x3f
 1303 0145 19       		.uleb128 0x19
 1304 0146 03       		.uleb128 0x3
 1305 0147 0E       		.uleb128 0xe
 1306 0148 3A       		.uleb128 0x3a
 1307 0149 0B       		.uleb128 0xb
 1308 014a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 40


 1309 014b 0B       		.uleb128 0xb
 1310 014c 27       		.uleb128 0x27
 1311 014d 19       		.uleb128 0x19
 1312 014e 3C       		.uleb128 0x3c
 1313 014f 19       		.uleb128 0x19
 1314 0150 00       		.byte	0
 1315 0151 00       		.byte	0
 1316 0152 15       		.uleb128 0x15
 1317 0153 05       		.uleb128 0x5
 1318 0154 00       		.byte	0
 1319 0155 49       		.uleb128 0x49
 1320 0156 13       		.uleb128 0x13
 1321 0157 00       		.byte	0
 1322 0158 00       		.byte	0
 1323 0159 00       		.byte	0
 1324              		.section	.debug_loc,"",%progbits
 1325              	.Ldebug_loc0:
 1326              	.LLST0:
 1327 0000 0A000000 		.4byte	.LVL9
 1328 0004 0E000000 		.4byte	.LVL10
 1329 0008 0100     		.2byte	0x1
 1330 000a 52       		.byte	0x52
 1331 000b 00000000 		.4byte	0
 1332 000f 00000000 		.4byte	0
 1333              	.LLST1:
 1334 0013 4E000000 		.4byte	.LVL16
 1335 0017 59000000 		.4byte	.LVL17-1
 1336 001b 0100     		.2byte	0x1
 1337 001d 50       		.byte	0x50
 1338 001e 00000000 		.4byte	0
 1339 0022 00000000 		.4byte	0
 1340              		.section	.debug_aranges,"",%progbits
 1341 0000 A4000000 		.4byte	0xa4
 1342 0004 0200     		.2byte	0x2
 1343 0006 00000000 		.4byte	.Ldebug_info0
 1344 000a 04       		.byte	0x4
 1345 000b 00       		.byte	0
 1346 000c 0000     		.2byte	0
 1347 000e 0000     		.2byte	0
 1348 0010 00000000 		.4byte	.LFB2
 1349 0014 10000000 		.4byte	.LFE2-.LFB2
 1350 0018 00000000 		.4byte	.LFB3
 1351 001c 10000000 		.4byte	.LFE3-.LFB3
 1352 0020 00000000 		.4byte	.LFB4
 1353 0024 0C000000 		.4byte	.LFE4-.LFB4
 1354 0028 00000000 		.4byte	.LFB5
 1355 002c 14000000 		.4byte	.LFE5-.LFB5
 1356 0030 00000000 		.4byte	.LFB7
 1357 0034 0C000000 		.4byte	.LFE7-.LFB7
 1358 0038 00000000 		.4byte	.LFB8
 1359 003c 0C000000 		.4byte	.LFE8-.LFB8
 1360 0040 00000000 		.4byte	.LFB9
 1361 0044 0C000000 		.4byte	.LFE9-.LFB9
 1362 0048 00000000 		.4byte	.LFB10
 1363 004c 0C000000 		.4byte	.LFE10-.LFB10
 1364 0050 00000000 		.4byte	.LFB11
 1365 0054 0C000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 41


 1366 0058 00000000 		.4byte	.LFB12
 1367 005c 0C000000 		.4byte	.LFE12-.LFB12
 1368 0060 00000000 		.4byte	.LFB13
 1369 0064 0C000000 		.4byte	.LFE13-.LFB13
 1370 0068 00000000 		.4byte	.LFB14
 1371 006c 0C000000 		.4byte	.LFE14-.LFB14
 1372 0070 00000000 		.4byte	.LFB6
 1373 0074 14000000 		.4byte	.LFE6-.LFB6
 1374 0078 00000000 		.4byte	.LFB1
 1375 007c 68000000 		.4byte	.LFE1-.LFB1
 1376 0080 00000000 		.4byte	.LFB0
 1377 0084 1C000000 		.4byte	.LFE0-.LFB0
 1378 0088 00000000 		.4byte	.LFB15
 1379 008c 0C000000 		.4byte	.LFE15-.LFB15
 1380 0090 00000000 		.4byte	.LFB16
 1381 0094 0C000000 		.4byte	.LFE16-.LFB16
 1382 0098 00000000 		.4byte	.LFB17
 1383 009c 0C000000 		.4byte	.LFE17-.LFB17
 1384 00a0 00000000 		.4byte	0
 1385 00a4 00000000 		.4byte	0
 1386              		.section	.debug_ranges,"",%progbits
 1387              	.Ldebug_ranges0:
 1388 0000 00000000 		.4byte	.LFB2
 1389 0004 10000000 		.4byte	.LFE2
 1390 0008 00000000 		.4byte	.LFB3
 1391 000c 10000000 		.4byte	.LFE3
 1392 0010 00000000 		.4byte	.LFB4
 1393 0014 0C000000 		.4byte	.LFE4
 1394 0018 00000000 		.4byte	.LFB5
 1395 001c 14000000 		.4byte	.LFE5
 1396 0020 00000000 		.4byte	.LFB7
 1397 0024 0C000000 		.4byte	.LFE7
 1398 0028 00000000 		.4byte	.LFB8
 1399 002c 0C000000 		.4byte	.LFE8
 1400 0030 00000000 		.4byte	.LFB9
 1401 0034 0C000000 		.4byte	.LFE9
 1402 0038 00000000 		.4byte	.LFB10
 1403 003c 0C000000 		.4byte	.LFE10
 1404 0040 00000000 		.4byte	.LFB11
 1405 0044 0C000000 		.4byte	.LFE11
 1406 0048 00000000 		.4byte	.LFB12
 1407 004c 0C000000 		.4byte	.LFE12
 1408 0050 00000000 		.4byte	.LFB13
 1409 0054 0C000000 		.4byte	.LFE13
 1410 0058 00000000 		.4byte	.LFB14
 1411 005c 0C000000 		.4byte	.LFE14
 1412 0060 00000000 		.4byte	.LFB6
 1413 0064 14000000 		.4byte	.LFE6
 1414 0068 00000000 		.4byte	.LFB1
 1415 006c 68000000 		.4byte	.LFE1
 1416 0070 00000000 		.4byte	.LFB0
 1417 0074 1C000000 		.4byte	.LFE0
 1418 0078 00000000 		.4byte	.LFB15
 1419 007c 0C000000 		.4byte	.LFE15
 1420 0080 00000000 		.4byte	.LFB16
 1421 0084 0C000000 		.4byte	.LFE16
 1422 0088 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 42


 1423 008c 0C000000 		.4byte	.LFE17
 1424 0090 00000000 		.4byte	0
 1425 0094 00000000 		.4byte	0
 1426              		.section	.debug_line,"",%progbits
 1427              	.Ldebug_line0:
 1428 0000 AF010000 		.section	.debug_str,"MS",%progbits,1
 1428      02005000 
 1428      00000201 
 1428      FB0E0D00 
 1428      01010101 
 1429              	.LASF15:
 1430 0000 72656731 		.ascii	"reg16\000"
 1430      3600
 1431              	.LASF26:
 1432 0006 48435F50 		.ascii	"HC_PWM_SetInterruptMode\000"
 1432      574D5F53 
 1432      6574496E 
 1432      74657272 
 1432      7570744D 
 1433              	.LASF28:
 1434 001e 48435F50 		.ascii	"HC_PWM_ReadCounter\000"
 1434      574D5F52 
 1434      65616443 
 1434      6F756E74 
 1434      657200
 1435              	.LASF22:
 1436 0031 70657269 		.ascii	"period\000"
 1436      6F6400
 1437              	.LASF33:
 1438 0038 48435F50 		.ascii	"HC_PWM_ClearFIFO\000"
 1438      574D5F43 
 1438      6C656172 
 1438      4649464F 
 1438      00
 1439              	.LASF3:
 1440 0049 73686F72 		.ascii	"short unsigned int\000"
 1440      7420756E 
 1440      7369676E 
 1440      65642069 
 1440      6E7400
 1441              	.LASF23:
 1442 005c 48435F50 		.ascii	"HC_PWM_WriteCompare1\000"
 1442      574D5F57 
 1442      72697465 
 1442      436F6D70 
 1442      61726531 
 1443              	.LASF25:
 1444 0071 48435F50 		.ascii	"HC_PWM_WriteCompare2\000"
 1444      574D5F57 
 1444      72697465 
 1444      436F6D70 
 1444      61726532 
 1445              	.LASF17:
 1446 0086 48435F50 		.ascii	"HC_PWM_Enable\000"
 1446      574D5F45 
 1446      6E61626C 
 1446      6500
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 43


 1447              	.LASF20:
 1448 0094 48435F50 		.ascii	"HC_PWM_WritePeriod\000"
 1448      574D5F57 
 1448      72697465 
 1448      50657269 
 1448      6F6400
 1449              	.LASF11:
 1450 00a7 666C6F61 		.ascii	"float\000"
 1450      7400
 1451              	.LASF21:
 1452 00ad 636F756E 		.ascii	"counter\000"
 1452      74657200 
 1453              	.LASF7:
 1454 00b5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1454      206C6F6E 
 1454      6720756E 
 1454      7369676E 
 1454      65642069 
 1455              	.LASF1:
 1456 00cc 756E7369 		.ascii	"unsigned char\000"
 1456      676E6564 
 1456      20636861 
 1456      7200
 1457              	.LASF14:
 1458 00da 72656738 		.ascii	"reg8\000"
 1458      00
 1459              	.LASF5:
 1460 00df 6C6F6E67 		.ascii	"long unsigned int\000"
 1460      20756E73 
 1460      69676E65 
 1460      6420696E 
 1460      7400
 1461              	.LASF9:
 1462 00f1 75696E74 		.ascii	"uint8\000"
 1462      3800
 1463              	.LASF31:
 1464 00f7 636F6E74 		.ascii	"control\000"
 1464      726F6C00 
 1465              	.LASF45:
 1466 00ff 48435F50 		.ascii	"HC_PWM_ReadControlRegister\000"
 1466      574D5F52 
 1466      65616443 
 1466      6F6E7472 
 1466      6F6C5265 
 1467              	.LASF29:
 1468 011a 48435F50 		.ascii	"HC_PWM_ReadStatusRegister\000"
 1468      574D5F52 
 1468      65616453 
 1468      74617475 
 1468      73526567 
 1469              	.LASF43:
 1470 0134 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\HC_PWM.c\000"
 1470      6E657261 
 1470      7465645F 
 1470      536F7572 
 1470      63655C50 
 1471              	.LASF12:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 44


 1472 0156 646F7562 		.ascii	"double\000"
 1472      6C6500
 1473              	.LASF30:
 1474 015d 48435F50 		.ascii	"HC_PWM_WriteControlRegister\000"
 1474      574D5F57 
 1474      72697465 
 1474      436F6E74 
 1474      726F6C52 
 1475              	.LASF10:
 1476 0179 75696E74 		.ascii	"uint16\000"
 1476      313600
 1477              	.LASF47:
 1478 0180 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1478      74657243 
 1478      72697469 
 1478      63616C53 
 1478      65637469 
 1479              	.LASF34:
 1480 0197 48435F50 		.ascii	"HC_PWM_Init\000"
 1480      574D5F49 
 1480      6E697400 
 1481              	.LASF8:
 1482 01a3 756E7369 		.ascii	"unsigned int\000"
 1482      676E6564 
 1482      20696E74 
 1482      00
 1483              	.LASF44:
 1484 01b0 433A5C55 		.ascii	"C:\\Users\\xavieran\\Desktop\\ECE3091\\PSOCProjects"
 1484      73657273 
 1484      5C786176 
 1484      69657261 
 1484      6E5C4465 
 1485 01de 5C454E47 		.ascii	"\\ENG3091_MandM\\ENG3091_MandM.cydsn\000"
 1485      33303931 
 1485      5F4D616E 
 1485      644D5C45 
 1485      4E473330 
 1486              	.LASF48:
 1487 0201 43794578 		.ascii	"CyExitCriticalSection\000"
 1487      69744372 
 1487      69746963 
 1487      616C5365 
 1487      6374696F 
 1488              	.LASF35:
 1489 0217 72657375 		.ascii	"result\000"
 1489      6C7400
 1490              	.LASF46:
 1491 021e 48435F50 		.ascii	"HC_PWM_initVar\000"
 1491      574D5F69 
 1491      6E697456 
 1491      617200
 1492              	.LASF36:
 1493 022d 6374726C 		.ascii	"ctrl\000"
 1493      00
 1494              	.LASF42:
 1495 0232 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1495      4320342E 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 45


 1495      382E3420 
 1495      32303134 
 1495      30353236 
 1496 0265 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1496      20726576 
 1496      6973696F 
 1496      6E203231 
 1496      31333538 
 1497 0298 67202D66 		.ascii	"g -ffunction-sections\000"
 1497      66756E63 
 1497      74696F6E 
 1497      2D736563 
 1497      74696F6E 
 1498              	.LASF16:
 1499 02ae 73697A65 		.ascii	"sizetype\000"
 1499      74797065 
 1499      00
 1500              	.LASF6:
 1501 02b7 6C6F6E67 		.ascii	"long long int\000"
 1501      206C6F6E 
 1501      6720696E 
 1501      7400
 1502              	.LASF27:
 1503 02c5 696E7465 		.ascii	"interruptMode\000"
 1503      72727570 
 1503      744D6F64 
 1503      6500
 1504              	.LASF19:
 1505 02d3 48435F50 		.ascii	"HC_PWM_WriteCounter\000"
 1505      574D5F57 
 1505      72697465 
 1505      436F756E 
 1505      74657200 
 1506              	.LASF32:
 1507 02e7 48435F50 		.ascii	"HC_PWM_ReadCapture\000"
 1507      574D5F52 
 1507      65616443 
 1507      61707475 
 1507      726500
 1508              	.LASF2:
 1509 02fa 73686F72 		.ascii	"short int\000"
 1509      7420696E 
 1509      7400
 1510              	.LASF39:
 1511 0304 48435F50 		.ascii	"HC_PWM_ReadCompare1\000"
 1511      574D5F52 
 1511      65616443 
 1511      6F6D7061 
 1511      72653100 
 1512              	.LASF40:
 1513 0318 48435F50 		.ascii	"HC_PWM_ReadCompare2\000"
 1513      574D5F52 
 1513      65616443 
 1513      6F6D7061 
 1513      72653200 
 1514              	.LASF41:
 1515 032c 48435F50 		.ascii	"HC_PWM_ReadPeriod\000"
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccY59hKa.s 			page 46


 1515      574D5F52 
 1515      65616450 
 1515      6572696F 
 1515      6400
 1516              	.LASF4:
 1517 033e 6C6F6E67 		.ascii	"long int\000"
 1517      20696E74 
 1517      00
 1518              	.LASF13:
 1519 0347 63686172 		.ascii	"char\000"
 1519      00
 1520              	.LASF18:
 1521 034c 48435F50 		.ascii	"HC_PWM_Stop\000"
 1521      574D5F53 
 1521      746F7000 
 1522              	.LASF38:
 1523 0358 48435F50 		.ascii	"HC_PWM_Start\000"
 1523      574D5F53 
 1523      74617274 
 1523      00
 1524              	.LASF0:
 1525 0365 7369676E 		.ascii	"signed char\000"
 1525      65642063 
 1525      68617200 
 1526              	.LASF24:
 1527 0371 636F6D70 		.ascii	"compare\000"
 1527      61726500 
 1528              	.LASF37:
 1529 0379 48435F50 		.ascii	"HC_PWM_interruptState\000"
 1529      574D5F69 
 1529      6E746572 
 1529      72757074 
 1529      53746174 
 1530              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
