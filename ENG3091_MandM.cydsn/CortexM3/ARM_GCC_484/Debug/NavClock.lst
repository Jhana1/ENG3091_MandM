ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"NavClock.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NavClock_Start,"ax",%progbits
  19              		.align	2
  20              		.global	NavClock_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	NavClock_Start, %function
  24              	NavClock_Start:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\NavClock.c"
   1:.\Generated_Source\PSoC5/NavClock.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/NavClock.c **** * File Name: NavClock.c
   3:.\Generated_Source\PSoC5/NavClock.c **** * Version 2.20
   4:.\Generated_Source\PSoC5/NavClock.c **** *
   5:.\Generated_Source\PSoC5/NavClock.c **** *  Description:
   6:.\Generated_Source\PSoC5/NavClock.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/NavClock.c **** *
   8:.\Generated_Source\PSoC5/NavClock.c **** *  Note:
   9:.\Generated_Source\PSoC5/NavClock.c **** *
  10:.\Generated_Source\PSoC5/NavClock.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/NavClock.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/NavClock.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/NavClock.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/NavClock.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/NavClock.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/NavClock.c **** 
  17:.\Generated_Source\PSoC5/NavClock.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/NavClock.c **** #include "NavClock.h"
  19:.\Generated_Source\PSoC5/NavClock.c **** 
  20:.\Generated_Source\PSoC5/NavClock.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/NavClock.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/NavClock.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:.\Generated_Source\PSoC5/NavClock.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/NavClock.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/NavClock.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/NavClock.c **** 
  27:.\Generated_Source\PSoC5/NavClock.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/NavClock.c **** 
  29:.\Generated_Source\PSoC5/NavClock.c **** 
  30:.\Generated_Source\PSoC5/NavClock.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/NavClock.c **** * Function Name: NavClock_Start
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 2


  32:.\Generated_Source\PSoC5/NavClock.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/NavClock.c **** *
  34:.\Generated_Source\PSoC5/NavClock.c **** * Summary:
  35:.\Generated_Source\PSoC5/NavClock.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/NavClock.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/NavClock.c **** *
  38:.\Generated_Source\PSoC5/NavClock.c **** * Parameters:
  39:.\Generated_Source\PSoC5/NavClock.c **** *  None
  40:.\Generated_Source\PSoC5/NavClock.c **** *
  41:.\Generated_Source\PSoC5/NavClock.c **** * Returns:
  42:.\Generated_Source\PSoC5/NavClock.c **** *  None
  43:.\Generated_Source\PSoC5/NavClock.c **** *
  44:.\Generated_Source\PSoC5/NavClock.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/NavClock.c **** void NavClock_Start(void) 
  46:.\Generated_Source\PSoC5/NavClock.c **** {
  27              		.loc 1 46 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  47:.\Generated_Source\PSoC5/NavClock.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/NavClock.c ****     NavClock_CLKEN |= NavClock_CLKEN_MASK;
  32              		.loc 1 48 0
  33 0000 054B     		ldr	r3, .L2
  34 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  35 0004 42F08002 		orr	r2, r2, #128
  36 0008 1A70     		strb	r2, [r3]
  49:.\Generated_Source\PSoC5/NavClock.c **** 	NavClock_CLKSTBY |= NavClock_CLKSTBY_MASK;
  37              		.loc 1 49 0
  38 000a 1033     		adds	r3, r3, #16
  39 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  40 000e 42F08002 		orr	r2, r2, #128
  41 0012 1A70     		strb	r2, [r3]
  42 0014 7047     		bx	lr
  43              	.L3:
  44 0016 00BF     		.align	2
  45              	.L2:
  46 0018 A2430040 		.word	1073759138
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	NavClock_Start, .-NavClock_Start
  50              		.section	.text.NavClock_Stop,"ax",%progbits
  51              		.align	2
  52              		.global	NavClock_Stop
  53              		.thumb
  54              		.thumb_func
  55              		.type	NavClock_Stop, %function
  56              	NavClock_Stop:
  57              	.LFB1:
  50:.\Generated_Source\PSoC5/NavClock.c **** }
  51:.\Generated_Source\PSoC5/NavClock.c **** 
  52:.\Generated_Source\PSoC5/NavClock.c **** 
  53:.\Generated_Source\PSoC5/NavClock.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/NavClock.c **** * Function Name: NavClock_Stop
  55:.\Generated_Source\PSoC5/NavClock.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/NavClock.c **** *
  57:.\Generated_Source\PSoC5/NavClock.c **** * Summary:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 3


  58:.\Generated_Source\PSoC5/NavClock.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/NavClock.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/NavClock.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/NavClock.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/NavClock.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/NavClock.c **** *
  64:.\Generated_Source\PSoC5/NavClock.c **** * Parameters:
  65:.\Generated_Source\PSoC5/NavClock.c **** *  None
  66:.\Generated_Source\PSoC5/NavClock.c **** *
  67:.\Generated_Source\PSoC5/NavClock.c **** * Returns:
  68:.\Generated_Source\PSoC5/NavClock.c **** *  None
  69:.\Generated_Source\PSoC5/NavClock.c **** *
  70:.\Generated_Source\PSoC5/NavClock.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/NavClock.c **** void NavClock_Stop(void) 
  72:.\Generated_Source\PSoC5/NavClock.c **** {
  58              		.loc 1 72 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  73:.\Generated_Source\PSoC5/NavClock.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/NavClock.c ****     NavClock_CLKEN &= (uint8)(~NavClock_CLKEN_MASK);
  63              		.loc 1 74 0
  64 0000 054B     		ldr	r3, .L5
  65 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  66 0004 02F07F02 		and	r2, r2, #127
  67 0008 1A70     		strb	r2, [r3]
  75:.\Generated_Source\PSoC5/NavClock.c **** 	NavClock_CLKSTBY &= (uint8)(~NavClock_CLKSTBY_MASK);
  68              		.loc 1 75 0
  69 000a 1033     		adds	r3, r3, #16
  70 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  71 000e 02F07F02 		and	r2, r2, #127
  72 0012 1A70     		strb	r2, [r3]
  73 0014 7047     		bx	lr
  74              	.L6:
  75 0016 00BF     		.align	2
  76              	.L5:
  77 0018 A2430040 		.word	1073759138
  78              		.cfi_endproc
  79              	.LFE1:
  80              		.size	NavClock_Stop, .-NavClock_Stop
  81              		.section	.text.NavClock_StopBlock,"ax",%progbits
  82              		.align	2
  83              		.global	NavClock_StopBlock
  84              		.thumb
  85              		.thumb_func
  86              		.type	NavClock_StopBlock, %function
  87              	NavClock_StopBlock:
  88              	.LFB2:
  76:.\Generated_Source\PSoC5/NavClock.c **** }
  77:.\Generated_Source\PSoC5/NavClock.c **** 
  78:.\Generated_Source\PSoC5/NavClock.c **** 
  79:.\Generated_Source\PSoC5/NavClock.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/NavClock.c **** 
  81:.\Generated_Source\PSoC5/NavClock.c **** 
  82:.\Generated_Source\PSoC5/NavClock.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/NavClock.c **** * Function Name: NavClock_StopBlock
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 4


  84:.\Generated_Source\PSoC5/NavClock.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/NavClock.c **** *
  86:.\Generated_Source\PSoC5/NavClock.c **** * Summary:
  87:.\Generated_Source\PSoC5/NavClock.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/NavClock.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/NavClock.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/NavClock.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/NavClock.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/NavClock.c **** *
  93:.\Generated_Source\PSoC5/NavClock.c **** * Parameters:
  94:.\Generated_Source\PSoC5/NavClock.c **** *  None
  95:.\Generated_Source\PSoC5/NavClock.c **** *
  96:.\Generated_Source\PSoC5/NavClock.c **** * Returns:
  97:.\Generated_Source\PSoC5/NavClock.c **** *  None
  98:.\Generated_Source\PSoC5/NavClock.c **** *
  99:.\Generated_Source\PSoC5/NavClock.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/NavClock.c **** void NavClock_StopBlock(void) 
 101:.\Generated_Source\PSoC5/NavClock.c **** {
  89              		.loc 1 101 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 102:.\Generated_Source\PSoC5/NavClock.c ****     if ((NavClock_CLKEN & NavClock_CLKEN_MASK) != 0u)
  94              		.loc 1 102 0
  95 0000 174B     		ldr	r3, .L11
  96 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  97 0004 13F0800F 		tst	r3, #128
  98 0008 28D0     		beq	.L7
  99              	.LBB2:
 103:.\Generated_Source\PSoC5/NavClock.c ****     {
 104:.\Generated_Source\PSoC5/NavClock.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/NavClock.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/NavClock.c **** 
 107:.\Generated_Source\PSoC5/NavClock.c ****         CLK_DIST_LD = 0u;
 100              		.loc 1 107 0
 101 000a 164B     		ldr	r3, .L11+4
 102 000c 0022     		movs	r2, #0
 103 000e 1A70     		strb	r2, [r3]
 108:.\Generated_Source\PSoC5/NavClock.c **** 
 109:.\Generated_Source\PSoC5/NavClock.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/NavClock.c **** #if defined(NavClock__CFG3)
 111:.\Generated_Source\PSoC5/NavClock.c ****         CLK_DIST_AMASK = NavClock_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/NavClock.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/NavClock.c **** #else
 114:.\Generated_Source\PSoC5/NavClock.c ****         CLK_DIST_DMASK = NavClock_CLKEN_MASK;
 104              		.loc 1 114 0
 105 0010 8020     		movs	r0, #128
 106 0012 1549     		ldr	r1, .L11+8
 107 0014 0870     		strb	r0, [r1]
 115:.\Generated_Source\PSoC5/NavClock.c ****         CLK_DIST_AMASK = 0x00u;
 108              		.loc 1 115 0
 109 0016 0431     		adds	r1, r1, #4
 110 0018 0A70     		strb	r2, [r1]
 116:.\Generated_Source\PSoC5/NavClock.c **** #endif /* NavClock__CFG3 */
 117:.\Generated_Source\PSoC5/NavClock.c **** 
 118:.\Generated_Source\PSoC5/NavClock.c ****         /* Clear mask of bus clock. */
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 5


 119:.\Generated_Source\PSoC5/NavClock.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 111              		.loc 1 119 0
 112 001a 144A     		ldr	r2, .L11+12
 113 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 114 001e 01F07F01 		and	r1, r1, #127
 115 0022 1170     		strb	r1, [r2]
 120:.\Generated_Source\PSoC5/NavClock.c **** 
 121:.\Generated_Source\PSoC5/NavClock.c ****         oldDivider = CY_GET_REG16(NavClock_DIV_PTR);
 116              		.loc 1 121 0
 117 0024 9432     		adds	r2, r2, #148
 118 0026 1188     		ldrh	r1, [r2]
 119 0028 89B2     		uxth	r1, r1
 120              	.LVL0:
 122:.\Generated_Source\PSoC5/NavClock.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 121              		.loc 1 122 0
 122 002a 9A3A     		subs	r2, r2, #154
 123 002c 1180     		strh	r1, [r2]	@ movhi
 123:.\Generated_Source\PSoC5/NavClock.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 124              		.loc 1 123 0
 125 002e 0722     		movs	r2, #7
 126 0030 1A70     		strb	r2, [r3]
 124:.\Generated_Source\PSoC5/NavClock.c **** 
 125:.\Generated_Source\PSoC5/NavClock.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/NavClock.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 127              		.loc 1 126 0
 128 0032 1A46     		mov	r2, r3
 129              	.L9:
 130              		.loc 1 126 0 is_stmt 0 discriminator 1
 131 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 132 0036 13F0010F 		tst	r3, #1
 133 003a FBD1     		bne	.L9
 127:.\Generated_Source\PSoC5/NavClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/NavClock.c **** 
 129:.\Generated_Source\PSoC5/NavClock.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/NavClock.c ****         NavClock_CLKEN &= (uint8)(~NavClock_CLKEN_MASK);
 134              		.loc 1 130 0 is_stmt 1
 135 003c 084B     		ldr	r3, .L11
 136 003e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 137 0040 02F07F02 		and	r2, r2, #127
 138 0044 1A70     		strb	r2, [r3]
 131:.\Generated_Source\PSoC5/NavClock.c ****         NavClock_CLKSTBY &= (uint8)(~NavClock_CLKSTBY_MASK);
 139              		.loc 1 131 0
 140 0046 1033     		adds	r3, r3, #16
 141 0048 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 142 004a 02F07F02 		and	r2, r2, #127
 143 004e 1A70     		strb	r2, [r3]
 132:.\Generated_Source\PSoC5/NavClock.c **** 
 133:.\Generated_Source\PSoC5/NavClock.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/NavClock.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/NavClock.c ****         CLK_DIST_LD = 0x00u;
 144              		.loc 1 135 0
 145 0050 0022     		movs	r2, #0
 146 0052 A3F2B133 		subw	r3, r3, #945
 147 0056 1A70     		strb	r2, [r3]
 136:.\Generated_Source\PSoC5/NavClock.c ****         CY_SET_REG16(NavClock_DIV_PTR, oldDivider);
 148              		.loc 1 136 0
 149 0058 9B33     		adds	r3, r3, #155
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 6


 150 005a 1980     		strh	r1, [r3]	@ movhi
 151              	.LVL1:
 152              	.L7:
 153 005c 7047     		bx	lr
 154              	.L12:
 155 005e 00BF     		.align	2
 156              	.L11:
 157 0060 A2430040 		.word	1073759138
 158 0064 01400040 		.word	1073758209
 159 0068 10400040 		.word	1073758224
 160 006c 08400040 		.word	1073758216
 161              	.LBE2:
 162              		.cfi_endproc
 163              	.LFE2:
 164              		.size	NavClock_StopBlock, .-NavClock_StopBlock
 165              		.section	.text.NavClock_StandbyPower,"ax",%progbits
 166              		.align	2
 167              		.global	NavClock_StandbyPower
 168              		.thumb
 169              		.thumb_func
 170              		.type	NavClock_StandbyPower, %function
 171              	NavClock_StandbyPower:
 172              	.LFB3:
 137:.\Generated_Source\PSoC5/NavClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/NavClock.c ****     }
 139:.\Generated_Source\PSoC5/NavClock.c **** }
 140:.\Generated_Source\PSoC5/NavClock.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/NavClock.c **** 
 142:.\Generated_Source\PSoC5/NavClock.c **** 
 143:.\Generated_Source\PSoC5/NavClock.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/NavClock.c **** * Function Name: NavClock_StandbyPower
 145:.\Generated_Source\PSoC5/NavClock.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/NavClock.c **** *
 147:.\Generated_Source\PSoC5/NavClock.c **** * Summary:
 148:.\Generated_Source\PSoC5/NavClock.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/NavClock.c **** *
 150:.\Generated_Source\PSoC5/NavClock.c **** * Parameters:
 151:.\Generated_Source\PSoC5/NavClock.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/NavClock.c **** *
 153:.\Generated_Source\PSoC5/NavClock.c **** * Returns:
 154:.\Generated_Source\PSoC5/NavClock.c **** *  None
 155:.\Generated_Source\PSoC5/NavClock.c **** *
 156:.\Generated_Source\PSoC5/NavClock.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/NavClock.c **** void NavClock_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/NavClock.c **** {
 173              		.loc 1 158 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL2:
 159:.\Generated_Source\PSoC5/NavClock.c ****     if(state == 0u)
 179              		.loc 1 159 0
 180 0000 28B9     		cbnz	r0, .L14
 160:.\Generated_Source\PSoC5/NavClock.c ****     {
 161:.\Generated_Source\PSoC5/NavClock.c ****         NavClock_CLKSTBY &= (uint8)(~NavClock_CLKSTBY_MASK);
 181              		.loc 1 161 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 7


 182 0002 064B     		ldr	r3, .L16
 183 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 184 0006 02F07F02 		and	r2, r2, #127
 185 000a 1A70     		strb	r2, [r3]
 186 000c 7047     		bx	lr
 187              	.L14:
 162:.\Generated_Source\PSoC5/NavClock.c ****     }
 163:.\Generated_Source\PSoC5/NavClock.c ****     else
 164:.\Generated_Source\PSoC5/NavClock.c ****     {
 165:.\Generated_Source\PSoC5/NavClock.c ****         NavClock_CLKSTBY |= NavClock_CLKSTBY_MASK;
 188              		.loc 1 165 0
 189 000e 034B     		ldr	r3, .L16
 190 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 191 0012 42F08002 		orr	r2, r2, #128
 192 0016 1A70     		strb	r2, [r3]
 193 0018 7047     		bx	lr
 194              	.L17:
 195 001a 00BF     		.align	2
 196              	.L16:
 197 001c B2430040 		.word	1073759154
 198              		.cfi_endproc
 199              	.LFE3:
 200              		.size	NavClock_StandbyPower, .-NavClock_StandbyPower
 201              		.section	.text.NavClock_GetDividerRegister,"ax",%progbits
 202              		.align	2
 203              		.global	NavClock_GetDividerRegister
 204              		.thumb
 205              		.thumb_func
 206              		.type	NavClock_GetDividerRegister, %function
 207              	NavClock_GetDividerRegister:
 208              	.LFB5:
 166:.\Generated_Source\PSoC5/NavClock.c ****     }
 167:.\Generated_Source\PSoC5/NavClock.c **** }
 168:.\Generated_Source\PSoC5/NavClock.c **** 
 169:.\Generated_Source\PSoC5/NavClock.c **** 
 170:.\Generated_Source\PSoC5/NavClock.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/NavClock.c **** * Function Name: NavClock_SetDividerRegister
 172:.\Generated_Source\PSoC5/NavClock.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/NavClock.c **** *
 174:.\Generated_Source\PSoC5/NavClock.c **** * Summary:
 175:.\Generated_Source\PSoC5/NavClock.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/NavClock.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/NavClock.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/NavClock.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/NavClock.c **** *
 180:.\Generated_Source\PSoC5/NavClock.c **** * Parameters:
 181:.\Generated_Source\PSoC5/NavClock.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/NavClock.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/NavClock.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/NavClock.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/NavClock.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/NavClock.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/NavClock.c **** *   cycle.
 188:.\Generated_Source\PSoC5/NavClock.c **** *
 189:.\Generated_Source\PSoC5/NavClock.c **** * Returns:
 190:.\Generated_Source\PSoC5/NavClock.c **** *  None
 191:.\Generated_Source\PSoC5/NavClock.c **** *
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 8


 192:.\Generated_Source\PSoC5/NavClock.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/NavClock.c **** void NavClock_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/NavClock.c ****                                 
 195:.\Generated_Source\PSoC5/NavClock.c **** {
 196:.\Generated_Source\PSoC5/NavClock.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/NavClock.c **** 
 198:.\Generated_Source\PSoC5/NavClock.c ****     uint8 currSrc = NavClock_GetSourceRegister();
 199:.\Generated_Source\PSoC5/NavClock.c ****     uint16 oldDivider = NavClock_GetDividerRegister();
 200:.\Generated_Source\PSoC5/NavClock.c **** 
 201:.\Generated_Source\PSoC5/NavClock.c ****     if (clkDivider != oldDivider)
 202:.\Generated_Source\PSoC5/NavClock.c ****     {
 203:.\Generated_Source\PSoC5/NavClock.c ****         enabled = NavClock_CLKEN & NavClock_CLKEN_MASK;
 204:.\Generated_Source\PSoC5/NavClock.c **** 
 205:.\Generated_Source\PSoC5/NavClock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:.\Generated_Source\PSoC5/NavClock.c ****         {
 207:.\Generated_Source\PSoC5/NavClock.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/NavClock.c ****             if (oldDivider == 0u)
 209:.\Generated_Source\PSoC5/NavClock.c ****             {
 210:.\Generated_Source\PSoC5/NavClock.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/NavClock.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/NavClock.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/NavClock.c ****                 CY_SET_REG16(NavClock_DIV_PTR, clkDivider);
 214:.\Generated_Source\PSoC5/NavClock.c ****                 NavClock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:.\Generated_Source\PSoC5/NavClock.c ****             }
 216:.\Generated_Source\PSoC5/NavClock.c ****             else
 217:.\Generated_Source\PSoC5/NavClock.c ****             {
 218:.\Generated_Source\PSoC5/NavClock.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/NavClock.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/NavClock.c ****                 NavClock_MOD_SRC |= CYCLK_SSS;
 221:.\Generated_Source\PSoC5/NavClock.c ****                 CY_SET_REG16(NavClock_DIV_PTR, clkDivider);
 222:.\Generated_Source\PSoC5/NavClock.c ****             }
 223:.\Generated_Source\PSoC5/NavClock.c ****         }
 224:.\Generated_Source\PSoC5/NavClock.c ****         else
 225:.\Generated_Source\PSoC5/NavClock.c ****         {
 226:.\Generated_Source\PSoC5/NavClock.c **** 			
 227:.\Generated_Source\PSoC5/NavClock.c ****             if (enabled != 0u)
 228:.\Generated_Source\PSoC5/NavClock.c ****             {
 229:.\Generated_Source\PSoC5/NavClock.c ****                 CLK_DIST_LD = 0x00u;
 230:.\Generated_Source\PSoC5/NavClock.c **** 
 231:.\Generated_Source\PSoC5/NavClock.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/NavClock.c **** #if defined(NavClock__CFG3)
 233:.\Generated_Source\PSoC5/NavClock.c ****                 CLK_DIST_AMASK = NavClock_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/NavClock.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/NavClock.c **** #else
 236:.\Generated_Source\PSoC5/NavClock.c ****                 CLK_DIST_DMASK = NavClock_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/NavClock.c ****                 CLK_DIST_AMASK = 0x00u;
 238:.\Generated_Source\PSoC5/NavClock.c **** #endif /* NavClock__CFG3 */
 239:.\Generated_Source\PSoC5/NavClock.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/NavClock.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:.\Generated_Source\PSoC5/NavClock.c **** 
 242:.\Generated_Source\PSoC5/NavClock.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/NavClock.c ****                 if (((NavClock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:.\Generated_Source\PSoC5/NavClock.c ****                 {
 245:.\Generated_Source\PSoC5/NavClock.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/NavClock.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/NavClock.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/NavClock.c **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 9


 249:.\Generated_Source\PSoC5/NavClock.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/NavClock.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/NavClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/NavClock.c **** 
 253:.\Generated_Source\PSoC5/NavClock.c ****                     NavClock_CLKEN &= (uint8)(~NavClock_CLKEN_MASK);
 254:.\Generated_Source\PSoC5/NavClock.c **** 
 255:.\Generated_Source\PSoC5/NavClock.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/NavClock.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/NavClock.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/NavClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/NavClock.c ****                 }
 260:.\Generated_Source\PSoC5/NavClock.c ****             }
 261:.\Generated_Source\PSoC5/NavClock.c **** 
 262:.\Generated_Source\PSoC5/NavClock.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/NavClock.c ****             if ((NavClock_CLKEN & NavClock_CLKEN_MASK) != 0u)
 264:.\Generated_Source\PSoC5/NavClock.c ****             {
 265:.\Generated_Source\PSoC5/NavClock.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/NavClock.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:.\Generated_Source\PSoC5/NavClock.c **** 
 268:.\Generated_Source\PSoC5/NavClock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:.\Generated_Source\PSoC5/NavClock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:.\Generated_Source\PSoC5/NavClock.c ****             }
 271:.\Generated_Source\PSoC5/NavClock.c ****             else
 272:.\Generated_Source\PSoC5/NavClock.c ****             {
 273:.\Generated_Source\PSoC5/NavClock.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/NavClock.c ****                 CY_SET_REG16(NavClock_DIV_PTR, clkDivider);
 275:.\Generated_Source\PSoC5/NavClock.c **** 				NavClock_CLKEN |= enabled;
 276:.\Generated_Source\PSoC5/NavClock.c ****             }
 277:.\Generated_Source\PSoC5/NavClock.c ****         }
 278:.\Generated_Source\PSoC5/NavClock.c ****     }
 279:.\Generated_Source\PSoC5/NavClock.c **** }
 280:.\Generated_Source\PSoC5/NavClock.c **** 
 281:.\Generated_Source\PSoC5/NavClock.c **** 
 282:.\Generated_Source\PSoC5/NavClock.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/NavClock.c **** * Function Name: NavClock_GetDividerRegister
 284:.\Generated_Source\PSoC5/NavClock.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/NavClock.c **** *
 286:.\Generated_Source\PSoC5/NavClock.c **** * Summary:
 287:.\Generated_Source\PSoC5/NavClock.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/NavClock.c **** *
 289:.\Generated_Source\PSoC5/NavClock.c **** * Parameters:
 290:.\Generated_Source\PSoC5/NavClock.c **** *  None
 291:.\Generated_Source\PSoC5/NavClock.c **** *
 292:.\Generated_Source\PSoC5/NavClock.c **** * Returns:
 293:.\Generated_Source\PSoC5/NavClock.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/NavClock.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/NavClock.c **** *
 296:.\Generated_Source\PSoC5/NavClock.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/NavClock.c **** uint16 NavClock_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/NavClock.c **** {
 209              		.loc 1 298 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 299:.\Generated_Source\PSoC5/NavClock.c ****     return CY_GET_REG16(NavClock_DIV_PTR);
 214              		.loc 1 299 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 10


 215 0000 014B     		ldr	r3, .L19
 216 0002 1888     		ldrh	r0, [r3]
 300:.\Generated_Source\PSoC5/NavClock.c **** }
 217              		.loc 1 300 0
 218 0004 80B2     		uxth	r0, r0
 219 0006 7047     		bx	lr
 220              	.L20:
 221              		.align	2
 222              	.L19:
 223 0008 9C400040 		.word	1073758364
 224              		.cfi_endproc
 225              	.LFE5:
 226              		.size	NavClock_GetDividerRegister, .-NavClock_GetDividerRegister
 227              		.section	.text.NavClock_SetModeRegister,"ax",%progbits
 228              		.align	2
 229              		.global	NavClock_SetModeRegister
 230              		.thumb
 231              		.thumb_func
 232              		.type	NavClock_SetModeRegister, %function
 233              	NavClock_SetModeRegister:
 234              	.LFB6:
 301:.\Generated_Source\PSoC5/NavClock.c **** 
 302:.\Generated_Source\PSoC5/NavClock.c **** 
 303:.\Generated_Source\PSoC5/NavClock.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/NavClock.c **** * Function Name: NavClock_SetModeRegister
 305:.\Generated_Source\PSoC5/NavClock.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/NavClock.c **** *
 307:.\Generated_Source\PSoC5/NavClock.c **** * Summary:
 308:.\Generated_Source\PSoC5/NavClock.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/NavClock.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/NavClock.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/NavClock.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/NavClock.c **** *
 313:.\Generated_Source\PSoC5/NavClock.c **** * Parameters:
 314:.\Generated_Source\PSoC5/NavClock.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/NavClock.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/NavClock.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/NavClock.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/NavClock.c **** *                 value.
 319:.\Generated_Source\PSoC5/NavClock.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/NavClock.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/NavClock.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/NavClock.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/NavClock.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/NavClock.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/NavClock.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/NavClock.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/NavClock.c **** *
 328:.\Generated_Source\PSoC5/NavClock.c **** * Returns:
 329:.\Generated_Source\PSoC5/NavClock.c **** *  None
 330:.\Generated_Source\PSoC5/NavClock.c **** *
 331:.\Generated_Source\PSoC5/NavClock.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/NavClock.c **** void NavClock_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/NavClock.c **** {
 235              		.loc 1 333 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 11


 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LVL3:
 334:.\Generated_Source\PSoC5/NavClock.c ****     NavClock_MOD_SRC |= modeBitMask & (uint8)NavClock_MODE_MASK;
 241              		.loc 1 334 0
 242 0000 034B     		ldr	r3, .L22
 243 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 244 0004 00F0F800 		and	r0, r0, #248
 245              	.LVL4:
 246 0008 0243     		orrs	r2, r2, r0
 247 000a 1A70     		strb	r2, [r3]
 248 000c 7047     		bx	lr
 249              	.L23:
 250 000e 00BF     		.align	2
 251              	.L22:
 252 0010 9E400040 		.word	1073758366
 253              		.cfi_endproc
 254              	.LFE6:
 255              		.size	NavClock_SetModeRegister, .-NavClock_SetModeRegister
 256              		.section	.text.NavClock_ClearModeRegister,"ax",%progbits
 257              		.align	2
 258              		.global	NavClock_ClearModeRegister
 259              		.thumb
 260              		.thumb_func
 261              		.type	NavClock_ClearModeRegister, %function
 262              	NavClock_ClearModeRegister:
 263              	.LFB7:
 335:.\Generated_Source\PSoC5/NavClock.c **** }
 336:.\Generated_Source\PSoC5/NavClock.c **** 
 337:.\Generated_Source\PSoC5/NavClock.c **** 
 338:.\Generated_Source\PSoC5/NavClock.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/NavClock.c **** * Function Name: NavClock_ClearModeRegister
 340:.\Generated_Source\PSoC5/NavClock.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/NavClock.c **** *
 342:.\Generated_Source\PSoC5/NavClock.c **** * Summary:
 343:.\Generated_Source\PSoC5/NavClock.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/NavClock.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/NavClock.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/NavClock.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/NavClock.c **** *
 348:.\Generated_Source\PSoC5/NavClock.c **** * Parameters:
 349:.\Generated_Source\PSoC5/NavClock.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/NavClock.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/NavClock.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/NavClock.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/NavClock.c **** *                 value.
 354:.\Generated_Source\PSoC5/NavClock.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/NavClock.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/NavClock.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/NavClock.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/NavClock.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/NavClock.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/NavClock.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/NavClock.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/NavClock.c **** *
 363:.\Generated_Source\PSoC5/NavClock.c **** * Returns:
 364:.\Generated_Source\PSoC5/NavClock.c **** *  None
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 12


 365:.\Generated_Source\PSoC5/NavClock.c **** *
 366:.\Generated_Source\PSoC5/NavClock.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/NavClock.c **** void NavClock_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/NavClock.c **** {
 264              		.loc 1 368 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269              	.LVL5:
 369:.\Generated_Source\PSoC5/NavClock.c ****     NavClock_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(NavClock_MODE_MASK));
 270              		.loc 1 369 0
 271 0000 044B     		ldr	r3, .L25
 272 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 273 0004 C043     		mvns	r0, r0
 274              	.LVL6:
 275 0006 C1B2     		uxtb	r1, r0
 276 0008 41F00701 		orr	r1, r1, #7
 277 000c 0A40     		ands	r2, r2, r1
 278 000e 1A70     		strb	r2, [r3]
 279 0010 7047     		bx	lr
 280              	.L26:
 281 0012 00BF     		.align	2
 282              	.L25:
 283 0014 9E400040 		.word	1073758366
 284              		.cfi_endproc
 285              	.LFE7:
 286              		.size	NavClock_ClearModeRegister, .-NavClock_ClearModeRegister
 287              		.section	.text.NavClock_GetModeRegister,"ax",%progbits
 288              		.align	2
 289              		.global	NavClock_GetModeRegister
 290              		.thumb
 291              		.thumb_func
 292              		.type	NavClock_GetModeRegister, %function
 293              	NavClock_GetModeRegister:
 294              	.LFB8:
 370:.\Generated_Source\PSoC5/NavClock.c **** }
 371:.\Generated_Source\PSoC5/NavClock.c **** 
 372:.\Generated_Source\PSoC5/NavClock.c **** 
 373:.\Generated_Source\PSoC5/NavClock.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/NavClock.c **** * Function Name: NavClock_GetModeRegister
 375:.\Generated_Source\PSoC5/NavClock.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/NavClock.c **** *
 377:.\Generated_Source\PSoC5/NavClock.c **** * Summary:
 378:.\Generated_Source\PSoC5/NavClock.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/NavClock.c **** *
 380:.\Generated_Source\PSoC5/NavClock.c **** * Parameters:
 381:.\Generated_Source\PSoC5/NavClock.c **** *  None
 382:.\Generated_Source\PSoC5/NavClock.c **** *
 383:.\Generated_Source\PSoC5/NavClock.c **** * Returns:
 384:.\Generated_Source\PSoC5/NavClock.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/NavClock.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/NavClock.c **** *
 387:.\Generated_Source\PSoC5/NavClock.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/NavClock.c **** uint8 NavClock_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/NavClock.c **** {
 295              		.loc 1 389 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 13


 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 390:.\Generated_Source\PSoC5/NavClock.c ****     return NavClock_MOD_SRC & (uint8)(NavClock_MODE_MASK);
 300              		.loc 1 390 0
 301 0000 024B     		ldr	r3, .L28
 302 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391:.\Generated_Source\PSoC5/NavClock.c **** }
 303              		.loc 1 391 0
 304 0004 00F0F800 		and	r0, r0, #248
 305 0008 7047     		bx	lr
 306              	.L29:
 307 000a 00BF     		.align	2
 308              	.L28:
 309 000c 9E400040 		.word	1073758366
 310              		.cfi_endproc
 311              	.LFE8:
 312              		.size	NavClock_GetModeRegister, .-NavClock_GetModeRegister
 313              		.section	.text.NavClock_GetSourceRegister,"ax",%progbits
 314              		.align	2
 315              		.global	NavClock_GetSourceRegister
 316              		.thumb
 317              		.thumb_func
 318              		.type	NavClock_GetSourceRegister, %function
 319              	NavClock_GetSourceRegister:
 320              	.LFB10:
 392:.\Generated_Source\PSoC5/NavClock.c **** 
 393:.\Generated_Source\PSoC5/NavClock.c **** 
 394:.\Generated_Source\PSoC5/NavClock.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/NavClock.c **** * Function Name: NavClock_SetSourceRegister
 396:.\Generated_Source\PSoC5/NavClock.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/NavClock.c **** *
 398:.\Generated_Source\PSoC5/NavClock.c **** * Summary:
 399:.\Generated_Source\PSoC5/NavClock.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/NavClock.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/NavClock.c **** *
 402:.\Generated_Source\PSoC5/NavClock.c **** * Parameters:
 403:.\Generated_Source\PSoC5/NavClock.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/NavClock.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/NavClock.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/NavClock.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/NavClock.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/NavClock.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/NavClock.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/NavClock.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/NavClock.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/NavClock.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/NavClock.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/NavClock.c **** *
 415:.\Generated_Source\PSoC5/NavClock.c **** * Returns:
 416:.\Generated_Source\PSoC5/NavClock.c **** *  None
 417:.\Generated_Source\PSoC5/NavClock.c **** *
 418:.\Generated_Source\PSoC5/NavClock.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/NavClock.c **** void NavClock_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/NavClock.c **** {
 421:.\Generated_Source\PSoC5/NavClock.c ****     uint16 currDiv = NavClock_GetDividerRegister();
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 14


 422:.\Generated_Source\PSoC5/NavClock.c ****     uint8 oldSrc = NavClock_GetSourceRegister();
 423:.\Generated_Source\PSoC5/NavClock.c **** 
 424:.\Generated_Source\PSoC5/NavClock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:.\Generated_Source\PSoC5/NavClock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/NavClock.c ****     {
 427:.\Generated_Source\PSoC5/NavClock.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/NavClock.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/NavClock.c ****         NavClock_MOD_SRC |= CYCLK_SSS;
 430:.\Generated_Source\PSoC5/NavClock.c ****         NavClock_MOD_SRC =
 431:.\Generated_Source\PSoC5/NavClock.c ****             (NavClock_MOD_SRC & (uint8)(~NavClock_SRC_SEL_MSK)) | clkSource;
 432:.\Generated_Source\PSoC5/NavClock.c ****     }
 433:.\Generated_Source\PSoC5/NavClock.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:.\Generated_Source\PSoC5/NavClock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/NavClock.c ****     {
 436:.\Generated_Source\PSoC5/NavClock.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/NavClock.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/NavClock.c ****         NavClock_MOD_SRC =
 439:.\Generated_Source\PSoC5/NavClock.c ****             (NavClock_MOD_SRC & (uint8)(~NavClock_SRC_SEL_MSK)) | clkSource;
 440:.\Generated_Source\PSoC5/NavClock.c ****         NavClock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:.\Generated_Source\PSoC5/NavClock.c ****     }
 442:.\Generated_Source\PSoC5/NavClock.c ****     else
 443:.\Generated_Source\PSoC5/NavClock.c ****     {
 444:.\Generated_Source\PSoC5/NavClock.c ****         NavClock_MOD_SRC =
 445:.\Generated_Source\PSoC5/NavClock.c ****             (NavClock_MOD_SRC & (uint8)(~NavClock_SRC_SEL_MSK)) | clkSource;
 446:.\Generated_Source\PSoC5/NavClock.c ****     }
 447:.\Generated_Source\PSoC5/NavClock.c **** }
 448:.\Generated_Source\PSoC5/NavClock.c **** 
 449:.\Generated_Source\PSoC5/NavClock.c **** 
 450:.\Generated_Source\PSoC5/NavClock.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/NavClock.c **** * Function Name: NavClock_GetSourceRegister
 452:.\Generated_Source\PSoC5/NavClock.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/NavClock.c **** *
 454:.\Generated_Source\PSoC5/NavClock.c **** * Summary:
 455:.\Generated_Source\PSoC5/NavClock.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/NavClock.c **** *
 457:.\Generated_Source\PSoC5/NavClock.c **** * Parameters:
 458:.\Generated_Source\PSoC5/NavClock.c **** *  None
 459:.\Generated_Source\PSoC5/NavClock.c **** *
 460:.\Generated_Source\PSoC5/NavClock.c **** * Returns:
 461:.\Generated_Source\PSoC5/NavClock.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/NavClock.c **** *
 463:.\Generated_Source\PSoC5/NavClock.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/NavClock.c **** uint8 NavClock_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/NavClock.c **** {
 321              		.loc 1 465 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
 466:.\Generated_Source\PSoC5/NavClock.c ****     return NavClock_MOD_SRC & NavClock_SRC_SEL_MSK;
 326              		.loc 1 466 0
 327 0000 024B     		ldr	r3, .L31
 328 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 467:.\Generated_Source\PSoC5/NavClock.c **** }
 329              		.loc 1 467 0
 330 0004 00F00700 		and	r0, r0, #7
 331 0008 7047     		bx	lr
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 15


 332              	.L32:
 333 000a 00BF     		.align	2
 334              	.L31:
 335 000c 9E400040 		.word	1073758366
 336              		.cfi_endproc
 337              	.LFE10:
 338              		.size	NavClock_GetSourceRegister, .-NavClock_GetSourceRegister
 339              		.section	.text.NavClock_SetDividerRegister,"ax",%progbits
 340              		.align	2
 341              		.global	NavClock_SetDividerRegister
 342              		.thumb
 343              		.thumb_func
 344              		.type	NavClock_SetDividerRegister, %function
 345              	NavClock_SetDividerRegister:
 346              	.LFB4:
 195:.\Generated_Source\PSoC5/NavClock.c **** {
 347              		.loc 1 195 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              	.LVL7:
 352 0000 70B5     		push	{r4, r5, r6, lr}
 353              		.cfi_def_cfa_offset 16
 354              		.cfi_offset 4, -16
 355              		.cfi_offset 5, -12
 356              		.cfi_offset 6, -8
 357              		.cfi_offset 14, -4
 358 0002 0446     		mov	r4, r0
 359 0004 0E46     		mov	r6, r1
 198:.\Generated_Source\PSoC5/NavClock.c ****     uint8 currSrc = NavClock_GetSourceRegister();
 360              		.loc 1 198 0
 361 0006 FFF7FEFF 		bl	NavClock_GetSourceRegister
 362              	.LVL8:
 363 000a 0546     		mov	r5, r0
 364              	.LVL9:
 199:.\Generated_Source\PSoC5/NavClock.c ****     uint16 oldDivider = NavClock_GetDividerRegister();
 365              		.loc 1 199 0
 366 000c FFF7FEFF 		bl	NavClock_GetDividerRegister
 367              	.LVL10:
 368 0010 0346     		mov	r3, r0
 369              	.LVL11:
 201:.\Generated_Source\PSoC5/NavClock.c ****     if (clkDivider != oldDivider)
 370              		.loc 1 201 0
 371 0012 8442     		cmp	r4, r0
 372 0014 59D0     		beq	.L33
 203:.\Generated_Source\PSoC5/NavClock.c ****         enabled = NavClock_CLKEN & NavClock_CLKEN_MASK;
 373              		.loc 1 203 0
 374 0016 2D4A     		ldr	r2, .L47
 375 0018 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 376              	.LVL12:
 377 001a 00F08000 		and	r0, r0, #128
 378 001e C0B2     		uxtb	r0, r0
 379              	.LVL13:
 205:.\Generated_Source\PSoC5/NavClock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 380              		.loc 1 205 0
 381 0020 95B9     		cbnz	r5, .L35
 205:.\Generated_Source\PSoC5/NavClock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 16


 382              		.loc 1 205 0 is_stmt 0 discriminator 1
 383 0022 03B1     		cbz	r3, .L36
 384 0024 84B9     		cbnz	r4, .L35
 385              	.L36:
 208:.\Generated_Source\PSoC5/NavClock.c ****             if (oldDivider == 0u)
 386              		.loc 1 208 0 is_stmt 1
 387 0026 3BB9     		cbnz	r3, .L37
 213:.\Generated_Source\PSoC5/NavClock.c ****                 CY_SET_REG16(NavClock_DIV_PTR, clkDivider);
 388              		.loc 1 213 0
 389 0028 294B     		ldr	r3, .L47+4
 390              	.LVL14:
 391 002a 1C80     		strh	r4, [r3]	@ movhi
 214:.\Generated_Source\PSoC5/NavClock.c ****                 NavClock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 392              		.loc 1 214 0
 393 002c 0233     		adds	r3, r3, #2
 394 002e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 395 0030 02F0BF02 		and	r2, r2, #191
 396 0034 1A70     		strb	r2, [r3]
 397 0036 70BD     		pop	{r4, r5, r6, pc}
 398              	.LVL15:
 399              	.L37:
 220:.\Generated_Source\PSoC5/NavClock.c ****                 NavClock_MOD_SRC |= CYCLK_SSS;
 400              		.loc 1 220 0
 401 0038 264B     		ldr	r3, .L47+8
 402              	.LVL16:
 403 003a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 404 003c 42F04002 		orr	r2, r2, #64
 405 0040 1A70     		strb	r2, [r3]
 221:.\Generated_Source\PSoC5/NavClock.c ****                 CY_SET_REG16(NavClock_DIV_PTR, clkDivider);
 406              		.loc 1 221 0
 407 0042 023B     		subs	r3, r3, #2
 408 0044 1C80     		strh	r4, [r3]	@ movhi
 409 0046 70BD     		pop	{r4, r5, r6, pc}
 410              	.LVL17:
 411              	.L35:
 227:.\Generated_Source\PSoC5/NavClock.c ****             if (enabled != 0u)
 412              		.loc 1 227 0
 413 0048 28B3     		cbz	r0, .L38
 229:.\Generated_Source\PSoC5/NavClock.c ****                 CLK_DIST_LD = 0x00u;
 414              		.loc 1 229 0
 415 004a 0022     		movs	r2, #0
 416 004c 2249     		ldr	r1, .L47+12
 417 004e 0A70     		strb	r2, [r1]
 236:.\Generated_Source\PSoC5/NavClock.c ****                 CLK_DIST_DMASK = NavClock_CLKEN_MASK;
 418              		.loc 1 236 0
 419 0050 8025     		movs	r5, #128
 420              	.LVL18:
 421 0052 0F31     		adds	r1, r1, #15
 422 0054 0D70     		strb	r5, [r1]
 237:.\Generated_Source\PSoC5/NavClock.c ****                 CLK_DIST_AMASK = 0x00u;
 423              		.loc 1 237 0
 424 0056 0431     		adds	r1, r1, #4
 425 0058 0A70     		strb	r2, [r1]
 240:.\Generated_Source\PSoC5/NavClock.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 426              		.loc 1 240 0
 427 005a 204A     		ldr	r2, .L47+16
 428 005c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 17


 429 005e 01F07F01 		and	r1, r1, #127
 430 0062 1170     		strb	r1, [r2]
 243:.\Generated_Source\PSoC5/NavClock.c ****                 if (((NavClock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 431              		.loc 1 243 0
 432 0064 9632     		adds	r2, r2, #150
 433 0066 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 434 0068 12F0080F 		tst	r2, #8
 435 006c 00D0     		beq	.L39
 243:.\Generated_Source\PSoC5/NavClock.c ****                 if (((NavClock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 436              		.loc 1 243 0 is_stmt 0 discriminator 1
 437 006e 94B9     		cbnz	r4, .L38
 438              	.L39:
 246:.\Generated_Source\PSoC5/NavClock.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 439              		.loc 1 246 0 is_stmt 1
 440 0070 1B4A     		ldr	r2, .L47+20
 441 0072 1380     		strh	r3, [r2]	@ movhi
 247:.\Generated_Source\PSoC5/NavClock.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 442              		.loc 1 247 0
 443 0074 0722     		movs	r2, #7
 444 0076 184B     		ldr	r3, .L47+12
 445              	.LVL19:
 446 0078 1A70     		strb	r2, [r3]
 250:.\Generated_Source\PSoC5/NavClock.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 447              		.loc 1 250 0
 448 007a 1A46     		mov	r2, r3
 449              	.L40:
 250:.\Generated_Source\PSoC5/NavClock.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 450              		.loc 1 250 0 is_stmt 0 discriminator 1
 451 007c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 452 007e 13F0010F 		tst	r3, #1
 453 0082 FBD1     		bne	.L40
 253:.\Generated_Source\PSoC5/NavClock.c ****                     NavClock_CLKEN &= (uint8)(~NavClock_CLKEN_MASK);
 454              		.loc 1 253 0 is_stmt 1
 455 0084 114B     		ldr	r3, .L47
 456 0086 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 457 0088 02F07F02 		and	r2, r2, #127
 458 008c 1A70     		strb	r2, [r3]
 257:.\Generated_Source\PSoC5/NavClock.c ****                     CLK_DIST_LD = 0x00u;
 459              		.loc 1 257 0
 460 008e 0022     		movs	r2, #0
 461 0090 A3F2A133 		subw	r3, r3, #929
 462 0094 1A70     		strb	r2, [r3]
 463              	.L38:
 263:.\Generated_Source\PSoC5/NavClock.c ****             if ((NavClock_CLKEN & NavClock_CLKEN_MASK) != 0u)
 464              		.loc 1 263 0
 465 0096 0D4B     		ldr	r3, .L47
 466 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 467 009a 13F0800F 		tst	r3, #128
 468 009e 0DD0     		beq	.L41
 266:.\Generated_Source\PSoC5/NavClock.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 469              		.loc 1 266 0
 470 00a0 0F4B     		ldr	r3, .L47+20
 471 00a2 1C80     		strh	r4, [r3]	@ movhi
 268:.\Generated_Source\PSoC5/NavClock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 472              		.loc 1 268 0
 473 00a4 0EB1     		cbz	r6, .L44
 474 00a6 0322     		movs	r2, #3
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 18


 475 00a8 00E0     		b	.L42
 476              	.L44:
 477 00aa 0122     		movs	r2, #1
 478              	.L42:
 268:.\Generated_Source\PSoC5/NavClock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 479              		.loc 1 268 0 is_stmt 0 discriminator 3
 480 00ac 0A4B     		ldr	r3, .L47+12
 481 00ae 1A70     		strb	r2, [r3]
 269:.\Generated_Source\PSoC5/NavClock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 482              		.loc 1 269 0 is_stmt 1 discriminator 3
 483 00b0 1A46     		mov	r2, r3
 484              	.L43:
 269:.\Generated_Source\PSoC5/NavClock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 485              		.loc 1 269 0 is_stmt 0 discriminator 1
 486 00b2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 487 00b4 13F0010F 		tst	r3, #1
 488 00b8 FBD1     		bne	.L43
 489 00ba 70BD     		pop	{r4, r5, r6, pc}
 490              	.L41:
 274:.\Generated_Source\PSoC5/NavClock.c ****                 CY_SET_REG16(NavClock_DIV_PTR, clkDivider);
 491              		.loc 1 274 0 is_stmt 1
 492 00bc 044B     		ldr	r3, .L47+4
 493 00be 1C80     		strh	r4, [r3]	@ movhi
 275:.\Generated_Source\PSoC5/NavClock.c **** 				NavClock_CLKEN |= enabled;
 494              		.loc 1 275 0
 495 00c0 03F20633 		addw	r3, r3, #774
 496 00c4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 497 00c6 1043     		orrs	r0, r0, r2
 498              	.LVL20:
 499 00c8 1870     		strb	r0, [r3]
 500              	.L33:
 501 00ca 70BD     		pop	{r4, r5, r6, pc}
 502              	.L48:
 503              		.align	2
 504              	.L47:
 505 00cc A2430040 		.word	1073759138
 506 00d0 9C400040 		.word	1073758364
 507 00d4 9E400040 		.word	1073758366
 508 00d8 01400040 		.word	1073758209
 509 00dc 08400040 		.word	1073758216
 510 00e0 02400040 		.word	1073758210
 511              		.cfi_endproc
 512              	.LFE4:
 513              		.size	NavClock_SetDividerRegister, .-NavClock_SetDividerRegister
 514              		.section	.text.NavClock_SetSourceRegister,"ax",%progbits
 515              		.align	2
 516              		.global	NavClock_SetSourceRegister
 517              		.thumb
 518              		.thumb_func
 519              		.type	NavClock_SetSourceRegister, %function
 520              	NavClock_SetSourceRegister:
 521              	.LFB9:
 420:.\Generated_Source\PSoC5/NavClock.c **** {
 522              		.loc 1 420 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 19


 526              	.LVL21:
 527 0000 38B5     		push	{r3, r4, r5, lr}
 528              		.cfi_def_cfa_offset 16
 529              		.cfi_offset 3, -16
 530              		.cfi_offset 4, -12
 531              		.cfi_offset 5, -8
 532              		.cfi_offset 14, -4
 533 0002 0446     		mov	r4, r0
 421:.\Generated_Source\PSoC5/NavClock.c ****     uint16 currDiv = NavClock_GetDividerRegister();
 534              		.loc 1 421 0
 535 0004 FFF7FEFF 		bl	NavClock_GetDividerRegister
 536              	.LVL22:
 537 0008 0546     		mov	r5, r0
 538              	.LVL23:
 422:.\Generated_Source\PSoC5/NavClock.c ****     uint8 oldSrc = NavClock_GetSourceRegister();
 539              		.loc 1 422 0
 540 000a FFF7FEFF 		bl	NavClock_GetSourceRegister
 541              	.LVL24:
 424:.\Generated_Source\PSoC5/NavClock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 542              		.loc 1 424 0
 543 000e 0346     		mov	r3, r0
 544 0010 60B1     		cbz	r0, .L50
 424:.\Generated_Source\PSoC5/NavClock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 545              		.loc 1 424 0 is_stmt 0 discriminator 1
 546 0012 5CB9     		cbnz	r4, .L50
 425:.\Generated_Source\PSoC5/NavClock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 547              		.loc 1 425 0 is_stmt 1
 548 0014 55B9     		cbnz	r5, .L50
 429:.\Generated_Source\PSoC5/NavClock.c ****         NavClock_MOD_SRC |= CYCLK_SSS;
 549              		.loc 1 429 0
 550 0016 104B     		ldr	r3, .L53
 551 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 552 001a 42F04002 		orr	r2, r2, #64
 553 001e 1A70     		strb	r2, [r3]
 431:.\Generated_Source\PSoC5/NavClock.c ****             (NavClock_MOD_SRC & (uint8)(~NavClock_SRC_SEL_MSK)) | clkSource;
 554              		.loc 1 431 0
 555 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 430:.\Generated_Source\PSoC5/NavClock.c ****         NavClock_MOD_SRC =
 556              		.loc 1 430 0
 557 0022 02F0F802 		and	r2, r2, #248
 558 0026 1443     		orrs	r4, r4, r2
 559 0028 1C70     		strb	r4, [r3]
 560 002a 38BD     		pop	{r3, r4, r5, pc}
 561              	.LVL25:
 562              	.L50:
 433:.\Generated_Source\PSoC5/NavClock.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 563              		.loc 1 433 0
 564 002c 63B9     		cbnz	r3, .L52
 433:.\Generated_Source\PSoC5/NavClock.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 565              		.loc 1 433 0 is_stmt 0 discriminator 1
 566 002e 5CB1     		cbz	r4, .L52
 434:.\Generated_Source\PSoC5/NavClock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 567              		.loc 1 434 0 is_stmt 1
 568 0030 55B9     		cbnz	r5, .L52
 439:.\Generated_Source\PSoC5/NavClock.c ****             (NavClock_MOD_SRC & (uint8)(~NavClock_SRC_SEL_MSK)) | clkSource;
 569              		.loc 1 439 0
 570 0032 094B     		ldr	r3, .L53
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 20


 571 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 438:.\Generated_Source\PSoC5/NavClock.c ****         NavClock_MOD_SRC =
 572              		.loc 1 438 0
 573 0036 02F0F802 		and	r2, r2, #248
 574 003a 1443     		orrs	r4, r4, r2
 575 003c 1C70     		strb	r4, [r3]
 440:.\Generated_Source\PSoC5/NavClock.c ****         NavClock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 576              		.loc 1 440 0
 577 003e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 578 0040 02F0BF02 		and	r2, r2, #191
 579 0044 1A70     		strb	r2, [r3]
 580 0046 38BD     		pop	{r3, r4, r5, pc}
 581              	.LVL26:
 582              	.L52:
 445:.\Generated_Source\PSoC5/NavClock.c ****             (NavClock_MOD_SRC & (uint8)(~NavClock_SRC_SEL_MSK)) | clkSource;
 583              		.loc 1 445 0
 584 0048 034B     		ldr	r3, .L53
 585 004a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 444:.\Generated_Source\PSoC5/NavClock.c ****         NavClock_MOD_SRC =
 586              		.loc 1 444 0
 587 004c 02F0F802 		and	r2, r2, #248
 588 0050 1443     		orrs	r4, r4, r2
 589 0052 1C70     		strb	r4, [r3]
 590 0054 38BD     		pop	{r3, r4, r5, pc}
 591              	.LVL27:
 592              	.L54:
 593 0056 00BF     		.align	2
 594              	.L53:
 595 0058 9E400040 		.word	1073758366
 596              		.cfi_endproc
 597              	.LFE9:
 598              		.size	NavClock_SetSourceRegister, .-NavClock_SetSourceRegister
 599              		.text
 600              	.Letext0:
 601              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 602              		.section	.debug_info,"",%progbits
 603              	.Ldebug_info0:
 604 0000 7F020000 		.4byte	0x27f
 605 0004 0400     		.2byte	0x4
 606 0006 00000000 		.4byte	.Ldebug_abbrev0
 607 000a 04       		.byte	0x4
 608 000b 01       		.uleb128 0x1
 609 000c A0000000 		.4byte	.LASF36
 610 0010 01       		.byte	0x1
 611 0011 33000000 		.4byte	.LASF37
 612 0015 25010000 		.4byte	.LASF38
 613 0019 00000000 		.4byte	.Ldebug_ranges0+0
 614 001d 00000000 		.4byte	0
 615 0021 00000000 		.4byte	.Ldebug_line0
 616 0025 02       		.uleb128 0x2
 617 0026 01       		.byte	0x1
 618 0027 06       		.byte	0x6
 619 0028 AF010000 		.4byte	.LASF0
 620 002c 02       		.uleb128 0x2
 621 002d 01       		.byte	0x1
 622 002e 08       		.byte	0x8
 623 002f 95010000 		.4byte	.LASF1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 21


 624 0033 02       		.uleb128 0x2
 625 0034 02       		.byte	0x2
 626 0035 05       		.byte	0x5
 627 0036 29000000 		.4byte	.LASF2
 628 003a 02       		.uleb128 0x2
 629 003b 02       		.byte	0x2
 630 003c 07       		.byte	0x7
 631 003d DF010000 		.4byte	.LASF3
 632 0041 02       		.uleb128 0x2
 633 0042 04       		.byte	0x4
 634 0043 05       		.byte	0x5
 635 0044 1C010000 		.4byte	.LASF4
 636 0048 02       		.uleb128 0x2
 637 0049 04       		.byte	0x4
 638 004a 07       		.byte	0x7
 639 004b 2F020000 		.4byte	.LASF5
 640 004f 02       		.uleb128 0x2
 641 0050 08       		.byte	0x8
 642 0051 05       		.byte	0x5
 643 0052 92000000 		.4byte	.LASF6
 644 0056 02       		.uleb128 0x2
 645 0057 08       		.byte	0x8
 646 0058 07       		.byte	0x7
 647 0059 BB010000 		.4byte	.LASF7
 648 005d 03       		.uleb128 0x3
 649 005e 04       		.byte	0x4
 650 005f 05       		.byte	0x5
 651 0060 696E7400 		.ascii	"int\000"
 652 0064 02       		.uleb128 0x2
 653 0065 04       		.byte	0x4
 654 0066 07       		.byte	0x7
 655 0067 D2010000 		.4byte	.LASF8
 656 006b 04       		.uleb128 0x4
 657 006c 6D000000 		.4byte	.LASF9
 658 0070 02       		.byte	0x2
 659 0071 B3       		.byte	0xb3
 660 0072 2C000000 		.4byte	0x2c
 661 0076 04       		.uleb128 0x4
 662 0077 57000000 		.4byte	.LASF10
 663 007b 02       		.byte	0x2
 664 007c B4       		.byte	0xb4
 665 007d 3A000000 		.4byte	0x3a
 666 0081 02       		.uleb128 0x2
 667 0082 04       		.byte	0x4
 668 0083 04       		.byte	0x4
 669 0084 8C000000 		.4byte	.LASF11
 670 0088 02       		.uleb128 0x2
 671 0089 08       		.byte	0x8
 672 008a 04       		.byte	0x4
 673 008b 5C020000 		.4byte	.LASF12
 674 008f 02       		.uleb128 0x2
 675 0090 01       		.byte	0x1
 676 0091 08       		.byte	0x8
 677 0092 F2010000 		.4byte	.LASF13
 678 0096 05       		.uleb128 0x5
 679 0097 2A020000 		.4byte	.LASF14
 680 009b 02       		.byte	0x2
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 22


 681 009c 5D01     		.2byte	0x15d
 682 009e A2000000 		.4byte	0xa2
 683 00a2 06       		.uleb128 0x6
 684 00a3 6B000000 		.4byte	0x6b
 685 00a7 05       		.uleb128 0x5
 686 00a8 23000000 		.4byte	.LASF15
 687 00ac 02       		.byte	0x2
 688 00ad 5E01     		.2byte	0x15e
 689 00af B3000000 		.4byte	0xb3
 690 00b3 06       		.uleb128 0x6
 691 00b4 76000000 		.4byte	0x76
 692 00b8 07       		.uleb128 0x7
 693 00b9 63020000 		.4byte	.LASF16
 694 00bd 01       		.byte	0x1
 695 00be 2D       		.byte	0x2d
 696 00bf 00000000 		.4byte	.LFB0
 697 00c3 1C000000 		.4byte	.LFE0-.LFB0
 698 00c7 01       		.uleb128 0x1
 699 00c8 9C       		.byte	0x9c
 700 00c9 07       		.uleb128 0x7
 701 00ca 7E000000 		.4byte	.LASF17
 702 00ce 01       		.byte	0x1
 703 00cf 47       		.byte	0x47
 704 00d0 00000000 		.4byte	.LFB1
 705 00d4 1C000000 		.4byte	.LFE1-.LFB1
 706 00d8 01       		.uleb128 0x1
 707 00d9 9C       		.byte	0x9c
 708 00da 08       		.uleb128 0x8
 709 00db 96020000 		.4byte	.LASF18
 710 00df 01       		.byte	0x1
 711 00e0 64       		.byte	0x64
 712 00e1 00000000 		.4byte	.LFB2
 713 00e5 70000000 		.4byte	.LFE2-.LFB2
 714 00e9 01       		.uleb128 0x1
 715 00ea 9C       		.byte	0x9c
 716 00eb 09010000 		.4byte	0x109
 717 00ef 09       		.uleb128 0x9
 718 00f0 0A000000 		.4byte	.LBB2
 719 00f4 66000000 		.4byte	.LBE2-.LBB2
 720 00f8 0A       		.uleb128 0xa
 721 00f9 09020000 		.4byte	.LASF30
 722 00fd 01       		.byte	0x1
 723 00fe 69       		.byte	0x69
 724 00ff 76000000 		.4byte	0x76
 725 0103 00000000 		.4byte	.LLST0
 726 0107 00       		.byte	0
 727 0108 00       		.byte	0
 728 0109 08       		.uleb128 0x8
 729 010a 14020000 		.4byte	.LASF19
 730 010e 01       		.byte	0x1
 731 010f 9D       		.byte	0x9d
 732 0110 00000000 		.4byte	.LFB3
 733 0114 20000000 		.4byte	.LFE3-.LFB3
 734 0118 01       		.uleb128 0x1
 735 0119 9C       		.byte	0x9c
 736 011a 2C010000 		.4byte	0x12c
 737 011e 0B       		.uleb128 0xb
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 23


 738 011f 76010000 		.4byte	.LASF21
 739 0123 01       		.byte	0x1
 740 0124 9D       		.byte	0x9d
 741 0125 6B000000 		.4byte	0x6b
 742 0129 01       		.uleb128 0x1
 743 012a 50       		.byte	0x50
 744 012b 00       		.byte	0
 745 012c 0C       		.uleb128 0xc
 746 012d 7A020000 		.4byte	.LASF24
 747 0131 01       		.byte	0x1
 748 0132 2901     		.2byte	0x129
 749 0134 76000000 		.4byte	0x76
 750 0138 00000000 		.4byte	.LFB5
 751 013c 0C000000 		.4byte	.LFE5-.LFB5
 752 0140 01       		.uleb128 0x1
 753 0141 9C       		.byte	0x9c
 754 0142 0D       		.uleb128 0xd
 755 0143 E0020000 		.4byte	.LASF20
 756 0147 01       		.byte	0x1
 757 0148 4C01     		.2byte	0x14c
 758 014a 00000000 		.4byte	.LFB6
 759 014e 14000000 		.4byte	.LFE6-.LFB6
 760 0152 01       		.uleb128 0x1
 761 0153 9C       		.byte	0x9c
 762 0154 69010000 		.4byte	0x169
 763 0158 0E       		.uleb128 0xe
 764 0159 A3010000 		.4byte	.LASF22
 765 015d 01       		.byte	0x1
 766 015e 4C01     		.2byte	0x14c
 767 0160 6B000000 		.4byte	0x6b
 768 0164 13000000 		.4byte	.LLST1
 769 0168 00       		.byte	0
 770 0169 0D       		.uleb128 0xd
 771 016a 00000000 		.4byte	.LASF23
 772 016e 01       		.byte	0x1
 773 016f 6F01     		.2byte	0x16f
 774 0171 00000000 		.4byte	.LFB7
 775 0175 18000000 		.4byte	.LFE7-.LFB7
 776 0179 01       		.uleb128 0x1
 777 017a 9C       		.byte	0x9c
 778 017b 90010000 		.4byte	0x190
 779 017f 0E       		.uleb128 0xe
 780 0180 A3010000 		.4byte	.LASF22
 781 0184 01       		.byte	0x1
 782 0185 6F01     		.2byte	0x16f
 783 0187 6B000000 		.4byte	0x6b
 784 018b 34000000 		.4byte	.LLST2
 785 018f 00       		.byte	0
 786 0190 0C       		.uleb128 0xc
 787 0191 7C010000 		.4byte	.LASF25
 788 0195 01       		.byte	0x1
 789 0196 8401     		.2byte	0x184
 790 0198 6B000000 		.4byte	0x6b
 791 019c 00000000 		.4byte	.LFB8
 792 01a0 10000000 		.4byte	.LFE8-.LFB8
 793 01a4 01       		.uleb128 0x1
 794 01a5 9C       		.byte	0x9c
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 24


 795 01a6 0C       		.uleb128 0xc
 796 01a7 41020000 		.4byte	.LASF26
 797 01ab 01       		.byte	0x1
 798 01ac D001     		.2byte	0x1d0
 799 01ae 6B000000 		.4byte	0x6b
 800 01b2 00000000 		.4byte	.LFB10
 801 01b6 10000000 		.4byte	.LFE10-.LFB10
 802 01ba 01       		.uleb128 0x1
 803 01bb 9C       		.byte	0x9c
 804 01bc 08       		.uleb128 0x8
 805 01bd C4020000 		.4byte	.LASF27
 806 01c1 01       		.byte	0x1
 807 01c2 C1       		.byte	0xc1
 808 01c3 00000000 		.4byte	.LFB4
 809 01c7 E4000000 		.4byte	.LFE4-.LFB4
 810 01cb 01       		.uleb128 0x1
 811 01cc 9C       		.byte	0x9c
 812 01cd 2F020000 		.4byte	0x22f
 813 01d1 0F       		.uleb128 0xf
 814 01d2 73000000 		.4byte	.LASF28
 815 01d6 01       		.byte	0x1
 816 01d7 C1       		.byte	0xc1
 817 01d8 76000000 		.4byte	0x76
 818 01dc 55000000 		.4byte	.LLST3
 819 01e0 0F       		.uleb128 0xf
 820 01e1 5E000000 		.4byte	.LASF29
 821 01e5 01       		.byte	0x1
 822 01e6 C1       		.byte	0xc1
 823 01e7 6B000000 		.4byte	0x6b
 824 01eb 76000000 		.4byte	.LLST4
 825 01ef 0A       		.uleb128 0xa
 826 01f0 72020000 		.4byte	.LASF31
 827 01f4 01       		.byte	0x1
 828 01f5 C4       		.byte	0xc4
 829 01f6 6B000000 		.4byte	0x6b
 830 01fa 97000000 		.4byte	.LLST5
 831 01fe 0A       		.uleb128 0xa
 832 01ff 01020000 		.4byte	.LASF32
 833 0203 01       		.byte	0x1
 834 0204 C6       		.byte	0xc6
 835 0205 6B000000 		.4byte	0x6b
 836 0209 AA000000 		.4byte	.LLST6
 837 020d 0A       		.uleb128 0xa
 838 020e 09020000 		.4byte	.LASF30
 839 0212 01       		.byte	0x1
 840 0213 C7       		.byte	0xc7
 841 0214 76000000 		.4byte	0x76
 842 0218 C8000000 		.4byte	.LLST7
 843 021c 10       		.uleb128 0x10
 844 021d 0A000000 		.4byte	.LVL8
 845 0221 A6010000 		.4byte	0x1a6
 846 0225 10       		.uleb128 0x10
 847 0226 10000000 		.4byte	.LVL10
 848 022a 2C010000 		.4byte	0x12c
 849 022e 00       		.byte	0
 850 022f 11       		.uleb128 0x11
 851 0230 A9020000 		.4byte	.LASF39
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 25


 852 0234 01       		.byte	0x1
 853 0235 A301     		.2byte	0x1a3
 854 0237 00000000 		.4byte	.LFB9
 855 023b 5C000000 		.4byte	.LFE9-.LFB9
 856 023f 01       		.uleb128 0x1
 857 0240 9C       		.byte	0x9c
 858 0241 0E       		.uleb128 0xe
 859 0242 F7010000 		.4byte	.LASF33
 860 0246 01       		.byte	0x1
 861 0247 A301     		.2byte	0x1a3
 862 0249 6B000000 		.4byte	0x6b
 863 024d FC000000 		.4byte	.LLST8
 864 0251 12       		.uleb128 0x12
 865 0252 1B000000 		.4byte	.LASF34
 866 0256 01       		.byte	0x1
 867 0257 A501     		.2byte	0x1a5
 868 0259 76000000 		.4byte	0x76
 869 025d 1D010000 		.4byte	.LLST9
 870 0261 13       		.uleb128 0x13
 871 0262 66000000 		.4byte	.LASF35
 872 0266 01       		.byte	0x1
 873 0267 A601     		.2byte	0x1a6
 874 0269 6B000000 		.4byte	0x6b
 875 026d 01       		.uleb128 0x1
 876 026e 50       		.byte	0x50
 877 026f 10       		.uleb128 0x10
 878 0270 08000000 		.4byte	.LVL22
 879 0274 2C010000 		.4byte	0x12c
 880 0278 10       		.uleb128 0x10
 881 0279 0E000000 		.4byte	.LVL24
 882 027d A6010000 		.4byte	0x1a6
 883 0281 00       		.byte	0
 884 0282 00       		.byte	0
 885              		.section	.debug_abbrev,"",%progbits
 886              	.Ldebug_abbrev0:
 887 0000 01       		.uleb128 0x1
 888 0001 11       		.uleb128 0x11
 889 0002 01       		.byte	0x1
 890 0003 25       		.uleb128 0x25
 891 0004 0E       		.uleb128 0xe
 892 0005 13       		.uleb128 0x13
 893 0006 0B       		.uleb128 0xb
 894 0007 03       		.uleb128 0x3
 895 0008 0E       		.uleb128 0xe
 896 0009 1B       		.uleb128 0x1b
 897 000a 0E       		.uleb128 0xe
 898 000b 55       		.uleb128 0x55
 899 000c 17       		.uleb128 0x17
 900 000d 11       		.uleb128 0x11
 901 000e 01       		.uleb128 0x1
 902 000f 10       		.uleb128 0x10
 903 0010 17       		.uleb128 0x17
 904 0011 00       		.byte	0
 905 0012 00       		.byte	0
 906 0013 02       		.uleb128 0x2
 907 0014 24       		.uleb128 0x24
 908 0015 00       		.byte	0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 26


 909 0016 0B       		.uleb128 0xb
 910 0017 0B       		.uleb128 0xb
 911 0018 3E       		.uleb128 0x3e
 912 0019 0B       		.uleb128 0xb
 913 001a 03       		.uleb128 0x3
 914 001b 0E       		.uleb128 0xe
 915 001c 00       		.byte	0
 916 001d 00       		.byte	0
 917 001e 03       		.uleb128 0x3
 918 001f 24       		.uleb128 0x24
 919 0020 00       		.byte	0
 920 0021 0B       		.uleb128 0xb
 921 0022 0B       		.uleb128 0xb
 922 0023 3E       		.uleb128 0x3e
 923 0024 0B       		.uleb128 0xb
 924 0025 03       		.uleb128 0x3
 925 0026 08       		.uleb128 0x8
 926 0027 00       		.byte	0
 927 0028 00       		.byte	0
 928 0029 04       		.uleb128 0x4
 929 002a 16       		.uleb128 0x16
 930 002b 00       		.byte	0
 931 002c 03       		.uleb128 0x3
 932 002d 0E       		.uleb128 0xe
 933 002e 3A       		.uleb128 0x3a
 934 002f 0B       		.uleb128 0xb
 935 0030 3B       		.uleb128 0x3b
 936 0031 0B       		.uleb128 0xb
 937 0032 49       		.uleb128 0x49
 938 0033 13       		.uleb128 0x13
 939 0034 00       		.byte	0
 940 0035 00       		.byte	0
 941 0036 05       		.uleb128 0x5
 942 0037 16       		.uleb128 0x16
 943 0038 00       		.byte	0
 944 0039 03       		.uleb128 0x3
 945 003a 0E       		.uleb128 0xe
 946 003b 3A       		.uleb128 0x3a
 947 003c 0B       		.uleb128 0xb
 948 003d 3B       		.uleb128 0x3b
 949 003e 05       		.uleb128 0x5
 950 003f 49       		.uleb128 0x49
 951 0040 13       		.uleb128 0x13
 952 0041 00       		.byte	0
 953 0042 00       		.byte	0
 954 0043 06       		.uleb128 0x6
 955 0044 35       		.uleb128 0x35
 956 0045 00       		.byte	0
 957 0046 49       		.uleb128 0x49
 958 0047 13       		.uleb128 0x13
 959 0048 00       		.byte	0
 960 0049 00       		.byte	0
 961 004a 07       		.uleb128 0x7
 962 004b 2E       		.uleb128 0x2e
 963 004c 00       		.byte	0
 964 004d 3F       		.uleb128 0x3f
 965 004e 19       		.uleb128 0x19
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 27


 966 004f 03       		.uleb128 0x3
 967 0050 0E       		.uleb128 0xe
 968 0051 3A       		.uleb128 0x3a
 969 0052 0B       		.uleb128 0xb
 970 0053 3B       		.uleb128 0x3b
 971 0054 0B       		.uleb128 0xb
 972 0055 27       		.uleb128 0x27
 973 0056 19       		.uleb128 0x19
 974 0057 11       		.uleb128 0x11
 975 0058 01       		.uleb128 0x1
 976 0059 12       		.uleb128 0x12
 977 005a 06       		.uleb128 0x6
 978 005b 40       		.uleb128 0x40
 979 005c 18       		.uleb128 0x18
 980 005d 9742     		.uleb128 0x2117
 981 005f 19       		.uleb128 0x19
 982 0060 00       		.byte	0
 983 0061 00       		.byte	0
 984 0062 08       		.uleb128 0x8
 985 0063 2E       		.uleb128 0x2e
 986 0064 01       		.byte	0x1
 987 0065 3F       		.uleb128 0x3f
 988 0066 19       		.uleb128 0x19
 989 0067 03       		.uleb128 0x3
 990 0068 0E       		.uleb128 0xe
 991 0069 3A       		.uleb128 0x3a
 992 006a 0B       		.uleb128 0xb
 993 006b 3B       		.uleb128 0x3b
 994 006c 0B       		.uleb128 0xb
 995 006d 27       		.uleb128 0x27
 996 006e 19       		.uleb128 0x19
 997 006f 11       		.uleb128 0x11
 998 0070 01       		.uleb128 0x1
 999 0071 12       		.uleb128 0x12
 1000 0072 06       		.uleb128 0x6
 1001 0073 40       		.uleb128 0x40
 1002 0074 18       		.uleb128 0x18
 1003 0075 9742     		.uleb128 0x2117
 1004 0077 19       		.uleb128 0x19
 1005 0078 01       		.uleb128 0x1
 1006 0079 13       		.uleb128 0x13
 1007 007a 00       		.byte	0
 1008 007b 00       		.byte	0
 1009 007c 09       		.uleb128 0x9
 1010 007d 0B       		.uleb128 0xb
 1011 007e 01       		.byte	0x1
 1012 007f 11       		.uleb128 0x11
 1013 0080 01       		.uleb128 0x1
 1014 0081 12       		.uleb128 0x12
 1015 0082 06       		.uleb128 0x6
 1016 0083 00       		.byte	0
 1017 0084 00       		.byte	0
 1018 0085 0A       		.uleb128 0xa
 1019 0086 34       		.uleb128 0x34
 1020 0087 00       		.byte	0
 1021 0088 03       		.uleb128 0x3
 1022 0089 0E       		.uleb128 0xe
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 28


 1023 008a 3A       		.uleb128 0x3a
 1024 008b 0B       		.uleb128 0xb
 1025 008c 3B       		.uleb128 0x3b
 1026 008d 0B       		.uleb128 0xb
 1027 008e 49       		.uleb128 0x49
 1028 008f 13       		.uleb128 0x13
 1029 0090 02       		.uleb128 0x2
 1030 0091 17       		.uleb128 0x17
 1031 0092 00       		.byte	0
 1032 0093 00       		.byte	0
 1033 0094 0B       		.uleb128 0xb
 1034 0095 05       		.uleb128 0x5
 1035 0096 00       		.byte	0
 1036 0097 03       		.uleb128 0x3
 1037 0098 0E       		.uleb128 0xe
 1038 0099 3A       		.uleb128 0x3a
 1039 009a 0B       		.uleb128 0xb
 1040 009b 3B       		.uleb128 0x3b
 1041 009c 0B       		.uleb128 0xb
 1042 009d 49       		.uleb128 0x49
 1043 009e 13       		.uleb128 0x13
 1044 009f 02       		.uleb128 0x2
 1045 00a0 18       		.uleb128 0x18
 1046 00a1 00       		.byte	0
 1047 00a2 00       		.byte	0
 1048 00a3 0C       		.uleb128 0xc
 1049 00a4 2E       		.uleb128 0x2e
 1050 00a5 00       		.byte	0
 1051 00a6 3F       		.uleb128 0x3f
 1052 00a7 19       		.uleb128 0x19
 1053 00a8 03       		.uleb128 0x3
 1054 00a9 0E       		.uleb128 0xe
 1055 00aa 3A       		.uleb128 0x3a
 1056 00ab 0B       		.uleb128 0xb
 1057 00ac 3B       		.uleb128 0x3b
 1058 00ad 05       		.uleb128 0x5
 1059 00ae 27       		.uleb128 0x27
 1060 00af 19       		.uleb128 0x19
 1061 00b0 49       		.uleb128 0x49
 1062 00b1 13       		.uleb128 0x13
 1063 00b2 11       		.uleb128 0x11
 1064 00b3 01       		.uleb128 0x1
 1065 00b4 12       		.uleb128 0x12
 1066 00b5 06       		.uleb128 0x6
 1067 00b6 40       		.uleb128 0x40
 1068 00b7 18       		.uleb128 0x18
 1069 00b8 9742     		.uleb128 0x2117
 1070 00ba 19       		.uleb128 0x19
 1071 00bb 00       		.byte	0
 1072 00bc 00       		.byte	0
 1073 00bd 0D       		.uleb128 0xd
 1074 00be 2E       		.uleb128 0x2e
 1075 00bf 01       		.byte	0x1
 1076 00c0 3F       		.uleb128 0x3f
 1077 00c1 19       		.uleb128 0x19
 1078 00c2 03       		.uleb128 0x3
 1079 00c3 0E       		.uleb128 0xe
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 29


 1080 00c4 3A       		.uleb128 0x3a
 1081 00c5 0B       		.uleb128 0xb
 1082 00c6 3B       		.uleb128 0x3b
 1083 00c7 05       		.uleb128 0x5
 1084 00c8 27       		.uleb128 0x27
 1085 00c9 19       		.uleb128 0x19
 1086 00ca 11       		.uleb128 0x11
 1087 00cb 01       		.uleb128 0x1
 1088 00cc 12       		.uleb128 0x12
 1089 00cd 06       		.uleb128 0x6
 1090 00ce 40       		.uleb128 0x40
 1091 00cf 18       		.uleb128 0x18
 1092 00d0 9742     		.uleb128 0x2117
 1093 00d2 19       		.uleb128 0x19
 1094 00d3 01       		.uleb128 0x1
 1095 00d4 13       		.uleb128 0x13
 1096 00d5 00       		.byte	0
 1097 00d6 00       		.byte	0
 1098 00d7 0E       		.uleb128 0xe
 1099 00d8 05       		.uleb128 0x5
 1100 00d9 00       		.byte	0
 1101 00da 03       		.uleb128 0x3
 1102 00db 0E       		.uleb128 0xe
 1103 00dc 3A       		.uleb128 0x3a
 1104 00dd 0B       		.uleb128 0xb
 1105 00de 3B       		.uleb128 0x3b
 1106 00df 05       		.uleb128 0x5
 1107 00e0 49       		.uleb128 0x49
 1108 00e1 13       		.uleb128 0x13
 1109 00e2 02       		.uleb128 0x2
 1110 00e3 17       		.uleb128 0x17
 1111 00e4 00       		.byte	0
 1112 00e5 00       		.byte	0
 1113 00e6 0F       		.uleb128 0xf
 1114 00e7 05       		.uleb128 0x5
 1115 00e8 00       		.byte	0
 1116 00e9 03       		.uleb128 0x3
 1117 00ea 0E       		.uleb128 0xe
 1118 00eb 3A       		.uleb128 0x3a
 1119 00ec 0B       		.uleb128 0xb
 1120 00ed 3B       		.uleb128 0x3b
 1121 00ee 0B       		.uleb128 0xb
 1122 00ef 49       		.uleb128 0x49
 1123 00f0 13       		.uleb128 0x13
 1124 00f1 02       		.uleb128 0x2
 1125 00f2 17       		.uleb128 0x17
 1126 00f3 00       		.byte	0
 1127 00f4 00       		.byte	0
 1128 00f5 10       		.uleb128 0x10
 1129 00f6 898201   		.uleb128 0x4109
 1130 00f9 00       		.byte	0
 1131 00fa 11       		.uleb128 0x11
 1132 00fb 01       		.uleb128 0x1
 1133 00fc 31       		.uleb128 0x31
 1134 00fd 13       		.uleb128 0x13
 1135 00fe 00       		.byte	0
 1136 00ff 00       		.byte	0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 30


 1137 0100 11       		.uleb128 0x11
 1138 0101 2E       		.uleb128 0x2e
 1139 0102 01       		.byte	0x1
 1140 0103 3F       		.uleb128 0x3f
 1141 0104 19       		.uleb128 0x19
 1142 0105 03       		.uleb128 0x3
 1143 0106 0E       		.uleb128 0xe
 1144 0107 3A       		.uleb128 0x3a
 1145 0108 0B       		.uleb128 0xb
 1146 0109 3B       		.uleb128 0x3b
 1147 010a 05       		.uleb128 0x5
 1148 010b 27       		.uleb128 0x27
 1149 010c 19       		.uleb128 0x19
 1150 010d 11       		.uleb128 0x11
 1151 010e 01       		.uleb128 0x1
 1152 010f 12       		.uleb128 0x12
 1153 0110 06       		.uleb128 0x6
 1154 0111 40       		.uleb128 0x40
 1155 0112 18       		.uleb128 0x18
 1156 0113 9742     		.uleb128 0x2117
 1157 0115 19       		.uleb128 0x19
 1158 0116 00       		.byte	0
 1159 0117 00       		.byte	0
 1160 0118 12       		.uleb128 0x12
 1161 0119 34       		.uleb128 0x34
 1162 011a 00       		.byte	0
 1163 011b 03       		.uleb128 0x3
 1164 011c 0E       		.uleb128 0xe
 1165 011d 3A       		.uleb128 0x3a
 1166 011e 0B       		.uleb128 0xb
 1167 011f 3B       		.uleb128 0x3b
 1168 0120 05       		.uleb128 0x5
 1169 0121 49       		.uleb128 0x49
 1170 0122 13       		.uleb128 0x13
 1171 0123 02       		.uleb128 0x2
 1172 0124 17       		.uleb128 0x17
 1173 0125 00       		.byte	0
 1174 0126 00       		.byte	0
 1175 0127 13       		.uleb128 0x13
 1176 0128 34       		.uleb128 0x34
 1177 0129 00       		.byte	0
 1178 012a 03       		.uleb128 0x3
 1179 012b 0E       		.uleb128 0xe
 1180 012c 3A       		.uleb128 0x3a
 1181 012d 0B       		.uleb128 0xb
 1182 012e 3B       		.uleb128 0x3b
 1183 012f 05       		.uleb128 0x5
 1184 0130 49       		.uleb128 0x49
 1185 0131 13       		.uleb128 0x13
 1186 0132 02       		.uleb128 0x2
 1187 0133 18       		.uleb128 0x18
 1188 0134 00       		.byte	0
 1189 0135 00       		.byte	0
 1190 0136 00       		.byte	0
 1191              		.section	.debug_loc,"",%progbits
 1192              	.Ldebug_loc0:
 1193              	.LLST0:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 31


 1194 0000 2A000000 		.4byte	.LVL0
 1195 0004 5C000000 		.4byte	.LVL1
 1196 0008 0100     		.2byte	0x1
 1197 000a 51       		.byte	0x51
 1198 000b 00000000 		.4byte	0
 1199 000f 00000000 		.4byte	0
 1200              	.LLST1:
 1201 0013 00000000 		.4byte	.LVL3
 1202 0017 08000000 		.4byte	.LVL4
 1203 001b 0100     		.2byte	0x1
 1204 001d 50       		.byte	0x50
 1205 001e 08000000 		.4byte	.LVL4
 1206 0022 14000000 		.4byte	.LFE6
 1207 0026 0400     		.2byte	0x4
 1208 0028 F3       		.byte	0xf3
 1209 0029 01       		.uleb128 0x1
 1210 002a 50       		.byte	0x50
 1211 002b 9F       		.byte	0x9f
 1212 002c 00000000 		.4byte	0
 1213 0030 00000000 		.4byte	0
 1214              	.LLST2:
 1215 0034 00000000 		.4byte	.LVL5
 1216 0038 06000000 		.4byte	.LVL6
 1217 003c 0100     		.2byte	0x1
 1218 003e 50       		.byte	0x50
 1219 003f 06000000 		.4byte	.LVL6
 1220 0043 18000000 		.4byte	.LFE7
 1221 0047 0400     		.2byte	0x4
 1222 0049 F3       		.byte	0xf3
 1223 004a 01       		.uleb128 0x1
 1224 004b 50       		.byte	0x50
 1225 004c 9F       		.byte	0x9f
 1226 004d 00000000 		.4byte	0
 1227 0051 00000000 		.4byte	0
 1228              	.LLST3:
 1229 0055 00000000 		.4byte	.LVL7
 1230 0059 09000000 		.4byte	.LVL8-1
 1231 005d 0100     		.2byte	0x1
 1232 005f 50       		.byte	0x50
 1233 0060 09000000 		.4byte	.LVL8-1
 1234 0064 E4000000 		.4byte	.LFE4
 1235 0068 0400     		.2byte	0x4
 1236 006a F3       		.byte	0xf3
 1237 006b 01       		.uleb128 0x1
 1238 006c 50       		.byte	0x50
 1239 006d 9F       		.byte	0x9f
 1240 006e 00000000 		.4byte	0
 1241 0072 00000000 		.4byte	0
 1242              	.LLST4:
 1243 0076 00000000 		.4byte	.LVL7
 1244 007a 09000000 		.4byte	.LVL8-1
 1245 007e 0100     		.2byte	0x1
 1246 0080 51       		.byte	0x51
 1247 0081 09000000 		.4byte	.LVL8-1
 1248 0085 E4000000 		.4byte	.LFE4
 1249 0089 0400     		.2byte	0x4
 1250 008b F3       		.byte	0xf3
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 32


 1251 008c 01       		.uleb128 0x1
 1252 008d 51       		.byte	0x51
 1253 008e 9F       		.byte	0x9f
 1254 008f 00000000 		.4byte	0
 1255 0093 00000000 		.4byte	0
 1256              	.LLST5:
 1257 0097 20000000 		.4byte	.LVL13
 1258 009b C8000000 		.4byte	.LVL20
 1259 009f 0100     		.2byte	0x1
 1260 00a1 50       		.byte	0x50
 1261 00a2 00000000 		.4byte	0
 1262 00a6 00000000 		.4byte	0
 1263              	.LLST6:
 1264 00aa 0C000000 		.4byte	.LVL9
 1265 00ae 0F000000 		.4byte	.LVL10-1
 1266 00b2 0100     		.2byte	0x1
 1267 00b4 50       		.byte	0x50
 1268 00b5 0F000000 		.4byte	.LVL10-1
 1269 00b9 52000000 		.4byte	.LVL18
 1270 00bd 0100     		.2byte	0x1
 1271 00bf 55       		.byte	0x55
 1272 00c0 00000000 		.4byte	0
 1273 00c4 00000000 		.4byte	0
 1274              	.LLST7:
 1275 00c8 12000000 		.4byte	.LVL11
 1276 00cc 1A000000 		.4byte	.LVL12
 1277 00d0 0100     		.2byte	0x1
 1278 00d2 50       		.byte	0x50
 1279 00d3 1A000000 		.4byte	.LVL12
 1280 00d7 2A000000 		.4byte	.LVL14
 1281 00db 0100     		.2byte	0x1
 1282 00dd 53       		.byte	0x53
 1283 00de 38000000 		.4byte	.LVL15
 1284 00e2 3A000000 		.4byte	.LVL16
 1285 00e6 0100     		.2byte	0x1
 1286 00e8 53       		.byte	0x53
 1287 00e9 48000000 		.4byte	.LVL17
 1288 00ed 78000000 		.4byte	.LVL19
 1289 00f1 0100     		.2byte	0x1
 1290 00f3 53       		.byte	0x53
 1291 00f4 00000000 		.4byte	0
 1292 00f8 00000000 		.4byte	0
 1293              	.LLST8:
 1294 00fc 00000000 		.4byte	.LVL21
 1295 0100 07000000 		.4byte	.LVL22-1
 1296 0104 0100     		.2byte	0x1
 1297 0106 50       		.byte	0x50
 1298 0107 07000000 		.4byte	.LVL22-1
 1299 010b 5C000000 		.4byte	.LFE9
 1300 010f 0400     		.2byte	0x4
 1301 0111 F3       		.byte	0xf3
 1302 0112 01       		.uleb128 0x1
 1303 0113 50       		.byte	0x50
 1304 0114 9F       		.byte	0x9f
 1305 0115 00000000 		.4byte	0
 1306 0119 00000000 		.4byte	0
 1307              	.LLST9:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 33


 1308 011d 0A000000 		.4byte	.LVL23
 1309 0121 0D000000 		.4byte	.LVL24-1
 1310 0125 0100     		.2byte	0x1
 1311 0127 50       		.byte	0x50
 1312 0128 0D000000 		.4byte	.LVL24-1
 1313 012c 56000000 		.4byte	.LVL27
 1314 0130 0100     		.2byte	0x1
 1315 0132 55       		.byte	0x55
 1316 0133 00000000 		.4byte	0
 1317 0137 00000000 		.4byte	0
 1318              		.section	.debug_aranges,"",%progbits
 1319 0000 6C000000 		.4byte	0x6c
 1320 0004 0200     		.2byte	0x2
 1321 0006 00000000 		.4byte	.Ldebug_info0
 1322 000a 04       		.byte	0x4
 1323 000b 00       		.byte	0
 1324 000c 0000     		.2byte	0
 1325 000e 0000     		.2byte	0
 1326 0010 00000000 		.4byte	.LFB0
 1327 0014 1C000000 		.4byte	.LFE0-.LFB0
 1328 0018 00000000 		.4byte	.LFB1
 1329 001c 1C000000 		.4byte	.LFE1-.LFB1
 1330 0020 00000000 		.4byte	.LFB2
 1331 0024 70000000 		.4byte	.LFE2-.LFB2
 1332 0028 00000000 		.4byte	.LFB3
 1333 002c 20000000 		.4byte	.LFE3-.LFB3
 1334 0030 00000000 		.4byte	.LFB5
 1335 0034 0C000000 		.4byte	.LFE5-.LFB5
 1336 0038 00000000 		.4byte	.LFB6
 1337 003c 14000000 		.4byte	.LFE6-.LFB6
 1338 0040 00000000 		.4byte	.LFB7
 1339 0044 18000000 		.4byte	.LFE7-.LFB7
 1340 0048 00000000 		.4byte	.LFB8
 1341 004c 10000000 		.4byte	.LFE8-.LFB8
 1342 0050 00000000 		.4byte	.LFB10
 1343 0054 10000000 		.4byte	.LFE10-.LFB10
 1344 0058 00000000 		.4byte	.LFB4
 1345 005c E4000000 		.4byte	.LFE4-.LFB4
 1346 0060 00000000 		.4byte	.LFB9
 1347 0064 5C000000 		.4byte	.LFE9-.LFB9
 1348 0068 00000000 		.4byte	0
 1349 006c 00000000 		.4byte	0
 1350              		.section	.debug_ranges,"",%progbits
 1351              	.Ldebug_ranges0:
 1352 0000 00000000 		.4byte	.LFB0
 1353 0004 1C000000 		.4byte	.LFE0
 1354 0008 00000000 		.4byte	.LFB1
 1355 000c 1C000000 		.4byte	.LFE1
 1356 0010 00000000 		.4byte	.LFB2
 1357 0014 70000000 		.4byte	.LFE2
 1358 0018 00000000 		.4byte	.LFB3
 1359 001c 20000000 		.4byte	.LFE3
 1360 0020 00000000 		.4byte	.LFB5
 1361 0024 0C000000 		.4byte	.LFE5
 1362 0028 00000000 		.4byte	.LFB6
 1363 002c 14000000 		.4byte	.LFE6
 1364 0030 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 34


 1365 0034 18000000 		.4byte	.LFE7
 1366 0038 00000000 		.4byte	.LFB8
 1367 003c 10000000 		.4byte	.LFE8
 1368 0040 00000000 		.4byte	.LFB10
 1369 0044 10000000 		.4byte	.LFE10
 1370 0048 00000000 		.4byte	.LFB4
 1371 004c E4000000 		.4byte	.LFE4
 1372 0050 00000000 		.4byte	.LFB9
 1373 0054 5C000000 		.4byte	.LFE9
 1374 0058 00000000 		.4byte	0
 1375 005c 00000000 		.4byte	0
 1376              		.section	.debug_line,"",%progbits
 1377              	.Ldebug_line0:
 1378 0000 94010000 		.section	.debug_str,"MS",%progbits,1
 1378      02005E00 
 1378      00000201 
 1378      FB0E0D00 
 1378      01010101 
 1379              	.LASF23:
 1380 0000 4E617643 		.ascii	"NavClock_ClearModeRegister\000"
 1380      6C6F636B 
 1380      5F436C65 
 1380      61724D6F 
 1380      64655265 
 1381              	.LASF34:
 1382 001b 63757272 		.ascii	"currDiv\000"
 1382      44697600 
 1383              	.LASF15:
 1384 0023 72656731 		.ascii	"reg16\000"
 1384      3600
 1385              	.LASF2:
 1386 0029 73686F72 		.ascii	"short int\000"
 1386      7420696E 
 1386      7400
 1387              	.LASF37:
 1388 0033 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\NavClock.c\000"
 1388      6E657261 
 1388      7465645F 
 1388      536F7572 
 1388      63655C50 
 1389              	.LASF10:
 1390 0057 75696E74 		.ascii	"uint16\000"
 1390      313600
 1391              	.LASF29:
 1392 005e 72657374 		.ascii	"restart\000"
 1392      61727400 
 1393              	.LASF35:
 1394 0066 6F6C6453 		.ascii	"oldSrc\000"
 1394      726300
 1395              	.LASF9:
 1396 006d 75696E74 		.ascii	"uint8\000"
 1396      3800
 1397              	.LASF28:
 1398 0073 636C6B44 		.ascii	"clkDivider\000"
 1398      69766964 
 1398      657200
 1399              	.LASF17:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 35


 1400 007e 4E617643 		.ascii	"NavClock_Stop\000"
 1400      6C6F636B 
 1400      5F53746F 
 1400      7000
 1401              	.LASF11:
 1402 008c 666C6F61 		.ascii	"float\000"
 1402      7400
 1403              	.LASF6:
 1404 0092 6C6F6E67 		.ascii	"long long int\000"
 1404      206C6F6E 
 1404      6720696E 
 1404      7400
 1405              	.LASF36:
 1406 00a0 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1406      4320342E 
 1406      382E3420 
 1406      32303134 
 1406      30353236 
 1407 00d3 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1407      20726576 
 1407      6973696F 
 1407      6E203231 
 1407      31333538 
 1408 0106 67202D66 		.ascii	"g -ffunction-sections\000"
 1408      66756E63 
 1408      74696F6E 
 1408      2D736563 
 1408      74696F6E 
 1409              	.LASF4:
 1410 011c 6C6F6E67 		.ascii	"long int\000"
 1410      20696E74 
 1410      00
 1411              	.LASF38:
 1412 0125 433A5C55 		.ascii	"C:\\Users\\xavieran\\Desktop\\ECE3091\\PSOCProjects"
 1412      73657273 
 1412      5C786176 
 1412      69657261 
 1412      6E5C4465 
 1413 0153 5C454E47 		.ascii	"\\ENG3091_MandM\\ENG3091_MandM.cydsn\000"
 1413      33303931 
 1413      5F4D616E 
 1413      644D5C45 
 1413      4E473330 
 1414              	.LASF21:
 1415 0176 73746174 		.ascii	"state\000"
 1415      6500
 1416              	.LASF25:
 1417 017c 4E617643 		.ascii	"NavClock_GetModeRegister\000"
 1417      6C6F636B 
 1417      5F476574 
 1417      4D6F6465 
 1417      52656769 
 1418              	.LASF1:
 1419 0195 756E7369 		.ascii	"unsigned char\000"
 1419      676E6564 
 1419      20636861 
 1419      7200
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 36


 1420              	.LASF22:
 1421 01a3 6D6F6465 		.ascii	"modeBitMask\000"
 1421      4269744D 
 1421      61736B00 
 1422              	.LASF0:
 1423 01af 7369676E 		.ascii	"signed char\000"
 1423      65642063 
 1423      68617200 
 1424              	.LASF7:
 1425 01bb 6C6F6E67 		.ascii	"long long unsigned int\000"
 1425      206C6F6E 
 1425      6720756E 
 1425      7369676E 
 1425      65642069 
 1426              	.LASF8:
 1427 01d2 756E7369 		.ascii	"unsigned int\000"
 1427      676E6564 
 1427      20696E74 
 1427      00
 1428              	.LASF3:
 1429 01df 73686F72 		.ascii	"short unsigned int\000"
 1429      7420756E 
 1429      7369676E 
 1429      65642069 
 1429      6E7400
 1430              	.LASF13:
 1431 01f2 63686172 		.ascii	"char\000"
 1431      00
 1432              	.LASF33:
 1433 01f7 636C6B53 		.ascii	"clkSource\000"
 1433      6F757263 
 1433      6500
 1434              	.LASF32:
 1435 0201 63757272 		.ascii	"currSrc\000"
 1435      53726300 
 1436              	.LASF30:
 1437 0209 6F6C6444 		.ascii	"oldDivider\000"
 1437      69766964 
 1437      657200
 1438              	.LASF19:
 1439 0214 4E617643 		.ascii	"NavClock_StandbyPower\000"
 1439      6C6F636B 
 1439      5F537461 
 1439      6E646279 
 1439      506F7765 
 1440              	.LASF14:
 1441 022a 72656738 		.ascii	"reg8\000"
 1441      00
 1442              	.LASF5:
 1443 022f 6C6F6E67 		.ascii	"long unsigned int\000"
 1443      20756E73 
 1443      69676E65 
 1443      6420696E 
 1443      7400
 1444              	.LASF26:
 1445 0241 4E617643 		.ascii	"NavClock_GetSourceRegister\000"
 1445      6C6F636B 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccJQWqRi.s 			page 37


 1445      5F476574 
 1445      536F7572 
 1445      63655265 
 1446              	.LASF12:
 1447 025c 646F7562 		.ascii	"double\000"
 1447      6C6500
 1448              	.LASF16:
 1449 0263 4E617643 		.ascii	"NavClock_Start\000"
 1449      6C6F636B 
 1449      5F537461 
 1449      727400
 1450              	.LASF31:
 1451 0272 656E6162 		.ascii	"enabled\000"
 1451      6C656400 
 1452              	.LASF24:
 1453 027a 4E617643 		.ascii	"NavClock_GetDividerRegister\000"
 1453      6C6F636B 
 1453      5F476574 
 1453      44697669 
 1453      64657252 
 1454              	.LASF18:
 1455 0296 4E617643 		.ascii	"NavClock_StopBlock\000"
 1455      6C6F636B 
 1455      5F53746F 
 1455      70426C6F 
 1455      636B00
 1456              	.LASF39:
 1457 02a9 4E617643 		.ascii	"NavClock_SetSourceRegister\000"
 1457      6C6F636B 
 1457      5F536574 
 1457      536F7572 
 1457      63655265 
 1458              	.LASF27:
 1459 02c4 4E617643 		.ascii	"NavClock_SetDividerRegister\000"
 1459      6C6F636B 
 1459      5F536574 
 1459      44697669 
 1459      64657252 
 1460              	.LASF20:
 1461 02e0 4E617643 		.ascii	"NavClock_SetModeRegister\000"
 1461      6C6F636B 
 1461      5F536574 
 1461      4D6F6465 
 1461      52656769 
 1462              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
