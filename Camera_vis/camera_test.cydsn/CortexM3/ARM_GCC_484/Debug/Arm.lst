ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Arm.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	Arm_initVar
  19              		.bss
  20              		.type	Arm_initVar, %object
  21              		.size	Arm_initVar, 1
  22              	Arm_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.Arm_Start,"ax",%progbits
  25              		.align	2
  26              		.global	Arm_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	Arm_Start, %function
  30              	Arm_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\Arm.c"
   1:.\Generated_Source\PSoC5/Arm.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Arm.c **** * File Name: Arm.c
   3:.\Generated_Source\PSoC5/Arm.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/Arm.c **** *
   5:.\Generated_Source\PSoC5/Arm.c **** * Description:
   6:.\Generated_Source\PSoC5/Arm.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/Arm.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/Arm.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/Arm.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/Arm.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/Arm.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/Arm.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/Arm.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/Arm.c **** *
  15:.\Generated_Source\PSoC5/Arm.c **** * Note:
  16:.\Generated_Source\PSoC5/Arm.c **** *
  17:.\Generated_Source\PSoC5/Arm.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/Arm.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/Arm.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/Arm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/Arm.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/Arm.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/Arm.c **** 
  24:.\Generated_Source\PSoC5/Arm.c **** #include "Arm.h"
  25:.\Generated_Source\PSoC5/Arm.c **** 
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 2


  26:.\Generated_Source\PSoC5/Arm.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/Arm.c **** #ifdef Arm_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/Arm.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/Arm.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/Arm.c **** #endif /* Arm_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/Arm.c **** 
  32:.\Generated_Source\PSoC5/Arm.c **** uint8 Arm_initVar = 0u;
  33:.\Generated_Source\PSoC5/Arm.c **** 
  34:.\Generated_Source\PSoC5/Arm.c **** 
  35:.\Generated_Source\PSoC5/Arm.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/Arm.c **** * Function Name: Arm_Start
  37:.\Generated_Source\PSoC5/Arm.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/Arm.c **** *
  39:.\Generated_Source\PSoC5/Arm.c **** * Summary:
  40:.\Generated_Source\PSoC5/Arm.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/Arm.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/Arm.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/Arm.c **** *
  44:.\Generated_Source\PSoC5/Arm.c **** * Parameters:
  45:.\Generated_Source\PSoC5/Arm.c **** *  None
  46:.\Generated_Source\PSoC5/Arm.c **** *
  47:.\Generated_Source\PSoC5/Arm.c **** * Return:
  48:.\Generated_Source\PSoC5/Arm.c **** *  None
  49:.\Generated_Source\PSoC5/Arm.c **** *
  50:.\Generated_Source\PSoC5/Arm.c **** * Global variables:
  51:.\Generated_Source\PSoC5/Arm.c **** *  Arm_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/Arm.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/Arm.c **** *
  54:.\Generated_Source\PSoC5/Arm.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/Arm.c **** void Arm_Start(void) 
  56:.\Generated_Source\PSoC5/Arm.c **** {
  33              		.loc 1 56 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC5/Arm.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/Arm.c ****     if(Arm_initVar == 0u)
  43              		.loc 1 58 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC5/Arm.c ****     {
  60:.\Generated_Source\PSoC5/Arm.c ****         Arm_Init();
  48              		.loc 1 60 0
  49 000c FFF7FEFF 		bl	Arm_Init
  61:.\Generated_Source\PSoC5/Arm.c ****         Arm_initVar = 1u;
  50              		.loc 1 61 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 3


  54              	.L2:
  62:.\Generated_Source\PSoC5/Arm.c ****     }
  63:.\Generated_Source\PSoC5/Arm.c ****     Arm_Enable();
  55              		.loc 1 63 0
  56 0016 FFF7FEFF 		bl	Arm_Enable
  64:.\Generated_Source\PSoC5/Arm.c **** 
  65:.\Generated_Source\PSoC5/Arm.c **** }
  57              		.loc 1 65 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	Arm_initVar
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	Arm_Start, .-Arm_Start
  66              		.section	.text.Arm_Init,"ax",%progbits
  67              		.align	2
  68              		.global	Arm_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	Arm_Init, %function
  72              	Arm_Init:
  73              	.LFB1:
  66:.\Generated_Source\PSoC5/Arm.c **** 
  67:.\Generated_Source\PSoC5/Arm.c **** 
  68:.\Generated_Source\PSoC5/Arm.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/Arm.c **** * Function Name: Arm_Init
  70:.\Generated_Source\PSoC5/Arm.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/Arm.c **** *
  72:.\Generated_Source\PSoC5/Arm.c **** * Summary:
  73:.\Generated_Source\PSoC5/Arm.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/Arm.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/Arm.c **** *  Arm_Start().
  76:.\Generated_Source\PSoC5/Arm.c **** *
  77:.\Generated_Source\PSoC5/Arm.c **** * Parameters:
  78:.\Generated_Source\PSoC5/Arm.c **** *  None
  79:.\Generated_Source\PSoC5/Arm.c **** *
  80:.\Generated_Source\PSoC5/Arm.c **** * Return:
  81:.\Generated_Source\PSoC5/Arm.c **** *  None
  82:.\Generated_Source\PSoC5/Arm.c **** *
  83:.\Generated_Source\PSoC5/Arm.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/Arm.c **** void Arm_Init(void) 
  85:.\Generated_Source\PSoC5/Arm.c **** {
  74              		.loc 1 85 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 82B0     		sub	sp, sp, #8
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC5/Arm.c ****     #if (Arm_UsingFixedFunction || Arm_UseControl)
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 4


  87:.\Generated_Source\PSoC5/Arm.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/Arm.c ****     #endif /* (Arm_UsingFixedFunction || Arm_UseControl) */
  89:.\Generated_Source\PSoC5/Arm.c **** 
  90:.\Generated_Source\PSoC5/Arm.c ****     #if(!Arm_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/Arm.c ****         #if(Arm_UseStatus)
  92:.\Generated_Source\PSoC5/Arm.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/Arm.c ****             uint8 Arm_interruptState;
  94:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (Arm_UseStatus) */
  95:.\Generated_Source\PSoC5/Arm.c ****     #endif /* (!Arm_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/Arm.c **** 
  97:.\Generated_Source\PSoC5/Arm.c ****     #if (Arm_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/Arm.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/Arm.c ****         Arm_CONTROL |= Arm_CFG0_MODE;
 100:.\Generated_Source\PSoC5/Arm.c ****         #if (Arm_DeadBand2_4)
 101:.\Generated_Source\PSoC5/Arm.c ****             Arm_CONTROL |= Arm_CFG0_DB;
 102:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (Arm_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/Arm.c **** 
 104:.\Generated_Source\PSoC5/Arm.c ****         ctrl = Arm_CONTROL3 & ((uint8 )(~Arm_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/Arm.c ****         Arm_CONTROL3 = ctrl | Arm_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/Arm.c **** 
 107:.\Generated_Source\PSoC5/Arm.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/Arm.c ****         Arm_RT1 &= ((uint8)(~Arm_RT1_MASK));
 109:.\Generated_Source\PSoC5/Arm.c ****         Arm_RT1 |= Arm_SYNC;
 110:.\Generated_Source\PSoC5/Arm.c **** 
 111:.\Generated_Source\PSoC5/Arm.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/Arm.c ****         Arm_RT1 &= ((uint8)(~Arm_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/Arm.c ****         Arm_RT1 |= Arm_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/Arm.c **** 
 115:.\Generated_Source\PSoC5/Arm.c ****     #elif (Arm_UseControl)
 116:.\Generated_Source\PSoC5/Arm.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/Arm.c ****         ctrl = Arm_CONTROL & ((uint8)(~Arm_CTRL_CMPMODE2_MASK)) &
  86              		.loc 1 117 0
  87 0006 1F4B     		ldr	r3, .L6
  88 0008 1B78     		ldrb	r3, [r3]
  89 000a DBB2     		uxtb	r3, r3
  90 000c 23F03F03 		bic	r3, r3, #63
  91 0010 FB71     		strb	r3, [r7, #7]
 118:.\Generated_Source\PSoC5/Arm.c ****                 ((uint8)(~Arm_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/Arm.c ****         Arm_CONTROL = ctrl | Arm_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0012 1C4B     		ldr	r3, .L6
  94 0014 FA79     		ldrb	r2, [r7, #7]
  95 0016 42F00902 		orr	r2, r2, #9
  96 001a D2B2     		uxtb	r2, r2
  97 001c 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC5/Arm.c ****                                    Arm_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/Arm.c ****     #endif /* (Arm_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/Arm.c **** 
 123:.\Generated_Source\PSoC5/Arm.c ****     #if (!Arm_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/Arm.c ****         #if (Arm_Resolution == 8)
 125:.\Generated_Source\PSoC5/Arm.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/Arm.c ****             Arm_AUX_CONTROLDP0 |= (Arm_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/Arm.c ****         #else /* (Arm_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/Arm.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/Arm.c ****             Arm_AUX_CONTROLDP0 |= (Arm_AUX_CTRL_FIFO0_CLR);
  98              		.loc 1 129 0
  99 001e 1A4B     		ldr	r3, .L6+4
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 5


 100 0020 194A     		ldr	r2, .L6+4
 101 0022 1278     		ldrb	r2, [r2]
 102 0024 D2B2     		uxtb	r2, r2
 103 0026 42F00102 		orr	r2, r2, #1
 104 002a D2B2     		uxtb	r2, r2
 105 002c 1A70     		strb	r2, [r3]
 130:.\Generated_Source\PSoC5/Arm.c ****             Arm_AUX_CONTROLDP1 |= (Arm_AUX_CTRL_FIFO0_CLR);
 106              		.loc 1 130 0
 107 002e 174B     		ldr	r3, .L6+8
 108 0030 164A     		ldr	r2, .L6+8
 109 0032 1278     		ldrb	r2, [r2]
 110 0034 D2B2     		uxtb	r2, r2
 111 0036 42F00102 		orr	r2, r2, #1
 112 003a D2B2     		uxtb	r2, r2
 113 003c 1A70     		strb	r2, [r3]
 131:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (Arm_Resolution == 8) */
 132:.\Generated_Source\PSoC5/Arm.c **** 
 133:.\Generated_Source\PSoC5/Arm.c ****         Arm_WriteCounter(Arm_INIT_PERIOD_VALUE);
 114              		.loc 1 133 0
 115 003e 40F21F30 		movw	r0, #799
 116 0042 FFF7FEFF 		bl	Arm_WriteCounter
 134:.\Generated_Source\PSoC5/Arm.c ****     #endif /* (!Arm_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/Arm.c **** 
 136:.\Generated_Source\PSoC5/Arm.c ****     Arm_WritePeriod(Arm_INIT_PERIOD_VALUE);
 117              		.loc 1 136 0
 118 0046 40F21F30 		movw	r0, #799
 119 004a FFF7FEFF 		bl	Arm_WritePeriod
 137:.\Generated_Source\PSoC5/Arm.c **** 
 138:.\Generated_Source\PSoC5/Arm.c ****         #if (Arm_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/Arm.c ****             Arm_WriteCompare(Arm_INIT_COMPARE_VALUE1);
 120              		.loc 1 139 0
 121 004e 1320     		movs	r0, #19
 122 0050 FFF7FEFF 		bl	Arm_WriteCompare
 140:.\Generated_Source\PSoC5/Arm.c ****         #else
 141:.\Generated_Source\PSoC5/Arm.c ****             Arm_WriteCompare1(Arm_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/Arm.c ****             Arm_WriteCompare2(Arm_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (Arm_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/Arm.c **** 
 145:.\Generated_Source\PSoC5/Arm.c ****         #if (Arm_KillModeMinTime)
 146:.\Generated_Source\PSoC5/Arm.c ****             Arm_WriteKillTime(Arm_MinimumKillTime);
 147:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (Arm_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/Arm.c **** 
 149:.\Generated_Source\PSoC5/Arm.c ****         #if (Arm_DeadBandUsed)
 150:.\Generated_Source\PSoC5/Arm.c ****             Arm_WriteDeadTime(Arm_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (Arm_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/Arm.c **** 
 153:.\Generated_Source\PSoC5/Arm.c ****     #if (Arm_UseStatus || Arm_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/Arm.c ****         Arm_SetInterruptMode(Arm_INIT_INTERRUPTS_MODE);
 123              		.loc 1 154 0
 124 0054 0020     		movs	r0, #0
 125 0056 FFF7FEFF 		bl	Arm_SetInterruptMode
 155:.\Generated_Source\PSoC5/Arm.c ****     #endif /* (Arm_UseStatus || Arm_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/Arm.c **** 
 157:.\Generated_Source\PSoC5/Arm.c ****     #if (Arm_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/Arm.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/Arm.c ****         Arm_GLOBAL_ENABLE |= Arm_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/Arm.c ****         /* Set the Interrupt source to come from the status register */
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 6


 161:.\Generated_Source\PSoC5/Arm.c ****         Arm_CONTROL2 |= Arm_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/Arm.c ****     #else
 163:.\Generated_Source\PSoC5/Arm.c ****         #if(Arm_UseStatus)
 164:.\Generated_Source\PSoC5/Arm.c **** 
 165:.\Generated_Source\PSoC5/Arm.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/Arm.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/Arm.c ****             Arm_interruptState = CyEnterCriticalSection();
 126              		.loc 1 167 0
 127 005a FFF7FEFF 		bl	CyEnterCriticalSection
 128 005e 0346     		mov	r3, r0
 129 0060 BB71     		strb	r3, [r7, #6]
 168:.\Generated_Source\PSoC5/Arm.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/Arm.c ****             Arm_STATUS_AUX_CTRL |= Arm_STATUS_ACTL_INT_EN_MASK;
 130              		.loc 1 169 0
 131 0062 094B     		ldr	r3, .L6+4
 132 0064 084A     		ldr	r2, .L6+4
 133 0066 1278     		ldrb	r2, [r2]
 134 0068 D2B2     		uxtb	r2, r2
 135 006a 42F01002 		orr	r2, r2, #16
 136 006e D2B2     		uxtb	r2, r2
 137 0070 1A70     		strb	r2, [r3]
 170:.\Generated_Source\PSoC5/Arm.c **** 
 171:.\Generated_Source\PSoC5/Arm.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/Arm.c ****             CyExitCriticalSection(Arm_interruptState);
 138              		.loc 1 172 0
 139 0072 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 140 0074 1846     		mov	r0, r3
 141 0076 FFF7FEFF 		bl	CyExitCriticalSection
 173:.\Generated_Source\PSoC5/Arm.c **** 
 174:.\Generated_Source\PSoC5/Arm.c ****             /* Clear the FIFO to enable the Arm_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/Arm.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/Arm.c ****             Arm_ClearFIFO();
 142              		.loc 1 176 0
 143 007a FFF7FEFF 		bl	Arm_ClearFIFO
 177:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (Arm_UseStatus) */
 178:.\Generated_Source\PSoC5/Arm.c ****     #endif /* (Arm_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/Arm.c **** }
 144              		.loc 1 179 0
 145 007e 0837     		adds	r7, r7, #8
 146 0080 BD46     		mov	sp, r7
 147              		@ sp needed
 148 0082 80BD     		pop	{r7, pc}
 149              	.L7:
 150              		.align	2
 151              	.L6:
 152 0084 74640040 		.word	1073767540
 153 0088 94640040 		.word	1073767572
 154 008c 95640040 		.word	1073767573
 155              		.cfi_endproc
 156              	.LFE1:
 157              		.size	Arm_Init, .-Arm_Init
 158              		.section	.text.Arm_Enable,"ax",%progbits
 159              		.align	2
 160              		.global	Arm_Enable
 161              		.thumb
 162              		.thumb_func
 163              		.type	Arm_Enable, %function
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 7


 164              	Arm_Enable:
 165              	.LFB2:
 180:.\Generated_Source\PSoC5/Arm.c **** 
 181:.\Generated_Source\PSoC5/Arm.c **** 
 182:.\Generated_Source\PSoC5/Arm.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/Arm.c **** * Function Name: Arm_Enable
 184:.\Generated_Source\PSoC5/Arm.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/Arm.c **** *
 186:.\Generated_Source\PSoC5/Arm.c **** * Summary:
 187:.\Generated_Source\PSoC5/Arm.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/Arm.c **** *
 189:.\Generated_Source\PSoC5/Arm.c **** * Parameters:
 190:.\Generated_Source\PSoC5/Arm.c **** *  None
 191:.\Generated_Source\PSoC5/Arm.c **** *
 192:.\Generated_Source\PSoC5/Arm.c **** * Return:
 193:.\Generated_Source\PSoC5/Arm.c **** *  None
 194:.\Generated_Source\PSoC5/Arm.c **** *
 195:.\Generated_Source\PSoC5/Arm.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/Arm.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/Arm.c **** *
 198:.\Generated_Source\PSoC5/Arm.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/Arm.c **** void Arm_Enable(void) 
 200:.\Generated_Source\PSoC5/Arm.c **** {
 166              		.loc 1 200 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171 0000 80B4     		push	{r7}
 172              		.cfi_def_cfa_offset 4
 173              		.cfi_offset 7, -4
 174 0002 00AF     		add	r7, sp, #0
 175              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC5/Arm.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/Arm.c ****     #if (Arm_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/Arm.c ****         Arm_GLOBAL_ENABLE |= Arm_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/Arm.c ****         Arm_GLOBAL_STBY_ENABLE |= Arm_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/Arm.c ****     #endif /* (Arm_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/Arm.c **** 
 207:.\Generated_Source\PSoC5/Arm.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/Arm.c ****     #if (Arm_UseControl || Arm_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/Arm.c ****         Arm_CONTROL |= Arm_CTRL_ENABLE;
 176              		.loc 1 209 0
 177 0004 054B     		ldr	r3, .L9
 178 0006 054A     		ldr	r2, .L9
 179 0008 1278     		ldrb	r2, [r2]
 180 000a D2B2     		uxtb	r2, r2
 181 000c 62F07F02 		orn	r2, r2, #127
 182 0010 D2B2     		uxtb	r2, r2
 183 0012 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC5/Arm.c ****     #endif /* (Arm_UseControl || Arm_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/Arm.c **** }
 184              		.loc 1 211 0
 185 0014 BD46     		mov	sp, r7
 186              		@ sp needed
 187 0016 5DF8047B 		ldr	r7, [sp], #4
 188 001a 7047     		bx	lr
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 8


 189              	.L10:
 190              		.align	2
 191              	.L9:
 192 001c 74640040 		.word	1073767540
 193              		.cfi_endproc
 194              	.LFE2:
 195              		.size	Arm_Enable, .-Arm_Enable
 196              		.section	.text.Arm_Stop,"ax",%progbits
 197              		.align	2
 198              		.global	Arm_Stop
 199              		.thumb
 200              		.thumb_func
 201              		.type	Arm_Stop, %function
 202              	Arm_Stop:
 203              	.LFB3:
 212:.\Generated_Source\PSoC5/Arm.c **** 
 213:.\Generated_Source\PSoC5/Arm.c **** 
 214:.\Generated_Source\PSoC5/Arm.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/Arm.c **** * Function Name: Arm_Stop
 216:.\Generated_Source\PSoC5/Arm.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/Arm.c **** *
 218:.\Generated_Source\PSoC5/Arm.c **** * Summary:
 219:.\Generated_Source\PSoC5/Arm.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/Arm.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/Arm.c **** *
 222:.\Generated_Source\PSoC5/Arm.c **** * Parameters:
 223:.\Generated_Source\PSoC5/Arm.c **** *  None
 224:.\Generated_Source\PSoC5/Arm.c **** *
 225:.\Generated_Source\PSoC5/Arm.c **** * Return:
 226:.\Generated_Source\PSoC5/Arm.c **** *  None
 227:.\Generated_Source\PSoC5/Arm.c **** *
 228:.\Generated_Source\PSoC5/Arm.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/Arm.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/Arm.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/Arm.c **** *
 232:.\Generated_Source\PSoC5/Arm.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/Arm.c **** void Arm_Stop(void) 
 234:.\Generated_Source\PSoC5/Arm.c **** {
 204              		.loc 1 234 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209 0000 80B4     		push	{r7}
 210              		.cfi_def_cfa_offset 4
 211              		.cfi_offset 7, -4
 212 0002 00AF     		add	r7, sp, #0
 213              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC5/Arm.c ****     #if (Arm_UseControl || Arm_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/Arm.c ****         Arm_CONTROL &= ((uint8)(~Arm_CTRL_ENABLE));
 214              		.loc 1 236 0
 215 0004 054B     		ldr	r3, .L12
 216 0006 054A     		ldr	r2, .L12
 217 0008 1278     		ldrb	r2, [r2]
 218 000a D2B2     		uxtb	r2, r2
 219 000c 02F07F02 		and	r2, r2, #127
 220 0010 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 9


 221 0012 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC5/Arm.c ****     #endif /* (Arm_UseControl || Arm_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/Arm.c **** 
 239:.\Generated_Source\PSoC5/Arm.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/Arm.c ****     #if (Arm_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/Arm.c ****         Arm_GLOBAL_ENABLE &= ((uint8)(~Arm_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/Arm.c ****         Arm_GLOBAL_STBY_ENABLE &= ((uint8)(~Arm_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/Arm.c ****     #endif /* (Arm_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/Arm.c **** }
 222              		.loc 1 244 0
 223 0014 BD46     		mov	sp, r7
 224              		@ sp needed
 225 0016 5DF8047B 		ldr	r7, [sp], #4
 226 001a 7047     		bx	lr
 227              	.L13:
 228              		.align	2
 229              	.L12:
 230 001c 74640040 		.word	1073767540
 231              		.cfi_endproc
 232              	.LFE3:
 233              		.size	Arm_Stop, .-Arm_Stop
 234              		.section	.text.Arm_WriteCounter,"ax",%progbits
 235              		.align	2
 236              		.global	Arm_WriteCounter
 237              		.thumb
 238              		.thumb_func
 239              		.type	Arm_WriteCounter, %function
 240              	Arm_WriteCounter:
 241              	.LFB4:
 245:.\Generated_Source\PSoC5/Arm.c **** 
 246:.\Generated_Source\PSoC5/Arm.c **** #if (Arm_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/Arm.c ****     #if (Arm_CompareMode1SW)
 248:.\Generated_Source\PSoC5/Arm.c **** 
 249:.\Generated_Source\PSoC5/Arm.c **** 
 250:.\Generated_Source\PSoC5/Arm.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/Arm.c ****         * Function Name: Arm_SetCompareMode
 252:.\Generated_Source\PSoC5/Arm.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/Arm.c ****         *
 254:.\Generated_Source\PSoC5/Arm.c ****         * Summary:
 255:.\Generated_Source\PSoC5/Arm.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/Arm.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/Arm.c ****         *
 258:.\Generated_Source\PSoC5/Arm.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/Arm.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/Arm.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/Arm.c ****         *
 262:.\Generated_Source\PSoC5/Arm.c ****         * Return:
 263:.\Generated_Source\PSoC5/Arm.c ****         *  None
 264:.\Generated_Source\PSoC5/Arm.c ****         *
 265:.\Generated_Source\PSoC5/Arm.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/Arm.c ****         void Arm_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/Arm.c ****         {
 268:.\Generated_Source\PSoC5/Arm.c ****             #if(Arm_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/Arm.c **** 
 270:.\Generated_Source\PSoC5/Arm.c ****                 #if(0 != Arm_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/Arm.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << Arm_CTRL_CMPMODE1_SHIF
 272:.\Generated_Source\PSoC5/Arm.c ****                 #else
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 10


 273:.\Generated_Source\PSoC5/Arm.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/Arm.c ****                 #endif /* (0 != Arm_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/Arm.c **** 
 276:.\Generated_Source\PSoC5/Arm.c ****                 Arm_CONTROL3 &= ((uint8)(~Arm_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC5/Arm.c ****                 Arm_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/Arm.c **** 
 279:.\Generated_Source\PSoC5/Arm.c ****             #elif (Arm_UseControl)
 280:.\Generated_Source\PSoC5/Arm.c **** 
 281:.\Generated_Source\PSoC5/Arm.c ****                 #if(0 != Arm_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/Arm.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << Arm_CTRL_CMPMODE1_SHI
 283:.\Generated_Source\PSoC5/Arm.c ****                                                 Arm_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/Arm.c ****                 #else
 285:.\Generated_Source\PSoC5/Arm.c ****                     uint8 comparemode1masked = comparemode & Arm_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/Arm.c ****                 #endif /* (0 != Arm_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/Arm.c **** 
 288:.\Generated_Source\PSoC5/Arm.c ****                 #if(0 != Arm_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/Arm.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << Arm_CTRL_CMPMODE2_SHI
 290:.\Generated_Source\PSoC5/Arm.c ****                                                Arm_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/Arm.c ****                 #else
 292:.\Generated_Source\PSoC5/Arm.c ****                     uint8 comparemode2masked = comparemode & Arm_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/Arm.c ****                 #endif /* (0 != Arm_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/Arm.c **** 
 295:.\Generated_Source\PSoC5/Arm.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/Arm.c ****                 Arm_CONTROL &= ((uint8)(~(Arm_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/Arm.c ****                                             Arm_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/Arm.c ****                 Arm_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/Arm.c **** 
 300:.\Generated_Source\PSoC5/Arm.c ****             #else
 301:.\Generated_Source\PSoC5/Arm.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/Arm.c ****             #endif /* (Arm_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/Arm.c ****         }
 304:.\Generated_Source\PSoC5/Arm.c ****     #endif /* Arm_CompareMode1SW */
 305:.\Generated_Source\PSoC5/Arm.c **** 
 306:.\Generated_Source\PSoC5/Arm.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/Arm.c **** 
 308:.\Generated_Source\PSoC5/Arm.c ****     #if (Arm_CompareMode1SW)
 309:.\Generated_Source\PSoC5/Arm.c **** 
 310:.\Generated_Source\PSoC5/Arm.c **** 
 311:.\Generated_Source\PSoC5/Arm.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/Arm.c ****         * Function Name: Arm_SetCompareMode1
 313:.\Generated_Source\PSoC5/Arm.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/Arm.c ****         *
 315:.\Generated_Source\PSoC5/Arm.c ****         * Summary:
 316:.\Generated_Source\PSoC5/Arm.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/Arm.c ****         *
 318:.\Generated_Source\PSoC5/Arm.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/Arm.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/Arm.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/Arm.c ****         *
 322:.\Generated_Source\PSoC5/Arm.c ****         * Return:
 323:.\Generated_Source\PSoC5/Arm.c ****         *  None
 324:.\Generated_Source\PSoC5/Arm.c ****         *
 325:.\Generated_Source\PSoC5/Arm.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/Arm.c ****         void Arm_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/Arm.c ****         {
 328:.\Generated_Source\PSoC5/Arm.c ****             #if(0 != Arm_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/Arm.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << Arm_CTRL_CMPMODE1_SHIFT)) 
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 11


 330:.\Generated_Source\PSoC5/Arm.c ****                                            Arm_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/Arm.c ****             #else
 332:.\Generated_Source\PSoC5/Arm.c ****                 uint8 comparemodemasked = comparemode & Arm_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/Arm.c ****             #endif /* (0 != Arm_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/Arm.c **** 
 335:.\Generated_Source\PSoC5/Arm.c ****             #if (Arm_UseControl)
 336:.\Generated_Source\PSoC5/Arm.c ****                 Arm_CONTROL &= ((uint8)(~Arm_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC5/Arm.c ****                 Arm_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/Arm.c ****             #endif /* (Arm_UseControl) */
 339:.\Generated_Source\PSoC5/Arm.c ****         }
 340:.\Generated_Source\PSoC5/Arm.c ****     #endif /* Arm_CompareMode1SW */
 341:.\Generated_Source\PSoC5/Arm.c **** 
 342:.\Generated_Source\PSoC5/Arm.c **** #if (Arm_CompareMode2SW)
 343:.\Generated_Source\PSoC5/Arm.c **** 
 344:.\Generated_Source\PSoC5/Arm.c **** 
 345:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_SetCompareMode2
 347:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/Arm.c ****     *
 349:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 350:.\Generated_Source\PSoC5/Arm.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/Arm.c ****     *
 352:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/Arm.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/Arm.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/Arm.c ****     *
 356:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 357:.\Generated_Source\PSoC5/Arm.c ****     *  None
 358:.\Generated_Source\PSoC5/Arm.c ****     *
 359:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/Arm.c ****     void Arm_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/Arm.c ****     {
 362:.\Generated_Source\PSoC5/Arm.c **** 
 363:.\Generated_Source\PSoC5/Arm.c ****         #if(0 != Arm_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/Arm.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << Arm_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC5/Arm.c ****                                                  Arm_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/Arm.c ****         #else
 367:.\Generated_Source\PSoC5/Arm.c ****             uint8 comparemodemasked = comparemode & Arm_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (0 != Arm_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/Arm.c **** 
 370:.\Generated_Source\PSoC5/Arm.c ****         #if (Arm_UseControl)
 371:.\Generated_Source\PSoC5/Arm.c ****             Arm_CONTROL &= ((uint8)(~Arm_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/Arm.c ****             Arm_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (Arm_UseControl) */
 374:.\Generated_Source\PSoC5/Arm.c ****     }
 375:.\Generated_Source\PSoC5/Arm.c ****     #endif /*Arm_CompareMode2SW */
 376:.\Generated_Source\PSoC5/Arm.c **** 
 377:.\Generated_Source\PSoC5/Arm.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/Arm.c **** 
 379:.\Generated_Source\PSoC5/Arm.c **** 
 380:.\Generated_Source\PSoC5/Arm.c **** #if (!Arm_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/Arm.c **** 
 382:.\Generated_Source\PSoC5/Arm.c **** 
 383:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_WriteCounter
 385:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/Arm.c ****     *
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 12


 387:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 388:.\Generated_Source\PSoC5/Arm.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/Arm.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/Arm.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/Arm.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/Arm.c ****     *
 393:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/Arm.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/Arm.c ****     *
 396:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 397:.\Generated_Source\PSoC5/Arm.c ****     *  None
 398:.\Generated_Source\PSoC5/Arm.c ****     *
 399:.\Generated_Source\PSoC5/Arm.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/Arm.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/Arm.c ****     *
 402:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/Arm.c ****     void Arm_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/Arm.c ****                                        
 405:.\Generated_Source\PSoC5/Arm.c ****     {
 242              		.loc 1 405 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 8
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247 0000 80B4     		push	{r7}
 248              		.cfi_def_cfa_offset 4
 249              		.cfi_offset 7, -4
 250 0002 83B0     		sub	sp, sp, #12
 251              		.cfi_def_cfa_offset 16
 252 0004 00AF     		add	r7, sp, #0
 253              		.cfi_def_cfa_register 7
 254 0006 0346     		mov	r3, r0
 255 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 406:.\Generated_Source\PSoC5/Arm.c ****         CY_SET_REG16(Arm_COUNTER_LSB_PTR, counter);
 256              		.loc 1 406 0
 257 000a 044B     		ldr	r3, .L15
 258 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 259 000e 1A80     		strh	r2, [r3]	@ movhi
 407:.\Generated_Source\PSoC5/Arm.c ****     }
 260              		.loc 1 407 0
 261 0010 0C37     		adds	r7, r7, #12
 262 0012 BD46     		mov	sp, r7
 263              		@ sp needed
 264 0014 5DF8047B 		ldr	r7, [sp], #4
 265 0018 7047     		bx	lr
 266              	.L16:
 267 001a 00BF     		.align	2
 268              	.L15:
 269 001c 08680040 		.word	1073768456
 270              		.cfi_endproc
 271              	.LFE4:
 272              		.size	Arm_WriteCounter, .-Arm_WriteCounter
 273              		.section	.text.Arm_ReadCounter,"ax",%progbits
 274              		.align	2
 275              		.global	Arm_ReadCounter
 276              		.thumb
 277              		.thumb_func
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 13


 278              		.type	Arm_ReadCounter, %function
 279              	Arm_ReadCounter:
 280              	.LFB5:
 408:.\Generated_Source\PSoC5/Arm.c **** 
 409:.\Generated_Source\PSoC5/Arm.c **** 
 410:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_ReadCounter
 412:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/Arm.c ****     *
 414:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 415:.\Generated_Source\PSoC5/Arm.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/Arm.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/Arm.c ****     *
 418:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/Arm.c ****     *  None
 420:.\Generated_Source\PSoC5/Arm.c ****     *
 421:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 422:.\Generated_Source\PSoC5/Arm.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/Arm.c ****     *
 424:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/Arm.c ****     uint16 Arm_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/Arm.c ****     {
 281              		.loc 1 426 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286 0000 80B4     		push	{r7}
 287              		.cfi_def_cfa_offset 4
 288              		.cfi_offset 7, -4
 289 0002 00AF     		add	r7, sp, #0
 290              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC5/Arm.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/Arm.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/Arm.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/Arm.c ****           (void)CY_GET_REG8(Arm_COUNTERCAP_LSB_PTR_8BIT);
 291              		.loc 1 430 0
 292 0004 044B     		ldr	r3, .L19
 293 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC5/Arm.c **** 
 432:.\Generated_Source\PSoC5/Arm.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/Arm.c ****         return (CY_GET_REG16(Arm_CAPTURE_LSB_PTR));
 294              		.loc 1 433 0
 295 0008 044B     		ldr	r3, .L19+4
 296 000a 1B88     		ldrh	r3, [r3]	@ movhi
 297 000c 9BB2     		uxth	r3, r3
 434:.\Generated_Source\PSoC5/Arm.c ****     }
 298              		.loc 1 434 0
 299 000e 1846     		mov	r0, r3
 300 0010 BD46     		mov	sp, r7
 301              		@ sp needed
 302 0012 5DF8047B 		ldr	r7, [sp], #4
 303 0016 7047     		bx	lr
 304              	.L20:
 305              		.align	2
 306              	.L19:
 307 0018 14640040 		.word	1073767444
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 14


 308 001c A8680040 		.word	1073768616
 309              		.cfi_endproc
 310              	.LFE5:
 311              		.size	Arm_ReadCounter, .-Arm_ReadCounter
 312              		.section	.text.Arm_ClearFIFO,"ax",%progbits
 313              		.align	2
 314              		.global	Arm_ClearFIFO
 315              		.thumb
 316              		.thumb_func
 317              		.type	Arm_ClearFIFO, %function
 318              	Arm_ClearFIFO:
 319              	.LFB6:
 435:.\Generated_Source\PSoC5/Arm.c **** 
 436:.\Generated_Source\PSoC5/Arm.c ****     #if (Arm_UseStatus)
 437:.\Generated_Source\PSoC5/Arm.c **** 
 438:.\Generated_Source\PSoC5/Arm.c **** 
 439:.\Generated_Source\PSoC5/Arm.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/Arm.c ****         * Function Name: Arm_ClearFIFO
 441:.\Generated_Source\PSoC5/Arm.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/Arm.c ****         *
 443:.\Generated_Source\PSoC5/Arm.c ****         * Summary:
 444:.\Generated_Source\PSoC5/Arm.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/Arm.c ****         *
 446:.\Generated_Source\PSoC5/Arm.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/Arm.c ****         *  None
 448:.\Generated_Source\PSoC5/Arm.c ****         *
 449:.\Generated_Source\PSoC5/Arm.c ****         * Return:
 450:.\Generated_Source\PSoC5/Arm.c ****         *  None
 451:.\Generated_Source\PSoC5/Arm.c ****         *
 452:.\Generated_Source\PSoC5/Arm.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/Arm.c ****         void Arm_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/Arm.c ****         {
 320              		.loc 1 454 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 1, uses_anonymous_args = 0
 324 0000 80B5     		push	{r7, lr}
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 7, -8
 327              		.cfi_offset 14, -4
 328 0002 00AF     		add	r7, sp, #0
 329              		.cfi_def_cfa_register 7
 455:.\Generated_Source\PSoC5/Arm.c ****             while(0u != (Arm_ReadStatusRegister() & Arm_STATUS_FIFONEMPTY))
 330              		.loc 1 455 0
 331 0004 01E0     		b	.L22
 332              	.L23:
 456:.\Generated_Source\PSoC5/Arm.c ****             {
 457:.\Generated_Source\PSoC5/Arm.c ****                 (void)Arm_ReadCapture();
 333              		.loc 1 457 0
 334 0006 FFF7FEFF 		bl	Arm_ReadCapture
 335              	.L22:
 455:.\Generated_Source\PSoC5/Arm.c ****             while(0u != (Arm_ReadStatusRegister() & Arm_STATUS_FIFONEMPTY))
 336              		.loc 1 455 0 discriminator 1
 337 000a FFF7FEFF 		bl	Arm_ReadStatusRegister
 338 000e 0346     		mov	r3, r0
 339 0010 03F01003 		and	r3, r3, #16
 340 0014 002B     		cmp	r3, #0
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 15


 341 0016 F6D1     		bne	.L23
 458:.\Generated_Source\PSoC5/Arm.c ****             }
 459:.\Generated_Source\PSoC5/Arm.c ****         }
 342              		.loc 1 459 0
 343 0018 80BD     		pop	{r7, pc}
 344              		.cfi_endproc
 345              	.LFE6:
 346              		.size	Arm_ClearFIFO, .-Arm_ClearFIFO
 347 001a 00BF     		.section	.text.Arm_WritePeriod,"ax",%progbits
 348              		.align	2
 349              		.global	Arm_WritePeriod
 350              		.thumb
 351              		.thumb_func
 352              		.type	Arm_WritePeriod, %function
 353              	Arm_WritePeriod:
 354              	.LFB7:
 460:.\Generated_Source\PSoC5/Arm.c **** 
 461:.\Generated_Source\PSoC5/Arm.c ****     #endif /* Arm_UseStatus */
 462:.\Generated_Source\PSoC5/Arm.c **** 
 463:.\Generated_Source\PSoC5/Arm.c **** #endif /* !Arm_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/Arm.c **** 
 465:.\Generated_Source\PSoC5/Arm.c **** 
 466:.\Generated_Source\PSoC5/Arm.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/Arm.c **** * Function Name: Arm_WritePeriod
 468:.\Generated_Source\PSoC5/Arm.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/Arm.c **** *
 470:.\Generated_Source\PSoC5/Arm.c **** * Summary:
 471:.\Generated_Source\PSoC5/Arm.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/Arm.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/Arm.c **** *
 474:.\Generated_Source\PSoC5/Arm.c **** * Parameters:
 475:.\Generated_Source\PSoC5/Arm.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/Arm.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/Arm.c **** *
 478:.\Generated_Source\PSoC5/Arm.c **** * Return:
 479:.\Generated_Source\PSoC5/Arm.c **** *  None
 480:.\Generated_Source\PSoC5/Arm.c **** *
 481:.\Generated_Source\PSoC5/Arm.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/Arm.c **** void Arm_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/Arm.c **** {
 355              		.loc 1 483 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 8
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 360 0000 80B4     		push	{r7}
 361              		.cfi_def_cfa_offset 4
 362              		.cfi_offset 7, -4
 363 0002 83B0     		sub	sp, sp, #12
 364              		.cfi_def_cfa_offset 16
 365 0004 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 367 0006 0346     		mov	r3, r0
 368 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 484:.\Generated_Source\PSoC5/Arm.c ****     #if(Arm_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/Arm.c ****         CY_SET_REG16(Arm_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/Arm.c ****     #else
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 16


 487:.\Generated_Source\PSoC5/Arm.c ****         CY_SET_REG16(Arm_PERIOD_LSB_PTR, period);
 369              		.loc 1 487 0
 370 000a 044B     		ldr	r3, .L25
 371 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 372 000e 1A80     		strh	r2, [r3]	@ movhi
 488:.\Generated_Source\PSoC5/Arm.c ****     #endif /* (Arm_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/Arm.c **** }
 373              		.loc 1 489 0
 374 0010 0C37     		adds	r7, r7, #12
 375 0012 BD46     		mov	sp, r7
 376              		@ sp needed
 377 0014 5DF8047B 		ldr	r7, [sp], #4
 378 0018 7047     		bx	lr
 379              	.L26:
 380 001a 00BF     		.align	2
 381              	.L25:
 382 001c 88680040 		.word	1073768584
 383              		.cfi_endproc
 384              	.LFE7:
 385              		.size	Arm_WritePeriod, .-Arm_WritePeriod
 386              		.section	.text.Arm_WriteCompare,"ax",%progbits
 387              		.align	2
 388              		.global	Arm_WriteCompare
 389              		.thumb
 390              		.thumb_func
 391              		.type	Arm_WriteCompare, %function
 392              	Arm_WriteCompare:
 393              	.LFB8:
 490:.\Generated_Source\PSoC5/Arm.c **** 
 491:.\Generated_Source\PSoC5/Arm.c **** #if (Arm_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/Arm.c **** 
 493:.\Generated_Source\PSoC5/Arm.c **** 
 494:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_WriteCompare
 496:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/Arm.c ****     *
 498:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 499:.\Generated_Source\PSoC5/Arm.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/Arm.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/Arm.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/Arm.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/Arm.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/Arm.c ****     *
 505:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/Arm.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/Arm.c ****     *
 508:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 509:.\Generated_Source\PSoC5/Arm.c ****     *  None
 510:.\Generated_Source\PSoC5/Arm.c ****     *
 511:.\Generated_Source\PSoC5/Arm.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/Arm.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/Arm.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/Arm.c ****     *
 515:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/Arm.c ****     void Arm_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/Arm.c ****                                        
 518:.\Generated_Source\PSoC5/Arm.c ****     {
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 17


 394              		.loc 1 518 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 8
 397              		@ frame_needed = 1, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 399 0000 80B4     		push	{r7}
 400              		.cfi_def_cfa_offset 4
 401              		.cfi_offset 7, -4
 402 0002 83B0     		sub	sp, sp, #12
 403              		.cfi_def_cfa_offset 16
 404 0004 00AF     		add	r7, sp, #0
 405              		.cfi_def_cfa_register 7
 406 0006 0346     		mov	r3, r0
 407 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 519:.\Generated_Source\PSoC5/Arm.c ****         #if(Arm_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/Arm.c ****             CY_SET_REG16(Arm_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC5/Arm.c ****         #else
 522:.\Generated_Source\PSoC5/Arm.c ****             CY_SET_REG16(Arm_COMPARE1_LSB_PTR, compare);
 408              		.loc 1 522 0
 409 000a 044B     		ldr	r3, .L28
 410 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 411 000e 1A80     		strh	r2, [r3]	@ movhi
 523:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (Arm_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/Arm.c **** 
 525:.\Generated_Source\PSoC5/Arm.c ****         #if (Arm_PWMMode == Arm__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/Arm.c ****             #if(Arm_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/Arm.c ****                 CY_SET_REG16(Arm_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/Arm.c ****             #else
 529:.\Generated_Source\PSoC5/Arm.c ****                 CY_SET_REG16(Arm_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/Arm.c ****             #endif /* (Arm_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (Arm_PWMMode == Arm__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/Arm.c ****     }
 412              		.loc 1 532 0
 413 0010 0C37     		adds	r7, r7, #12
 414 0012 BD46     		mov	sp, r7
 415              		@ sp needed
 416 0014 5DF8047B 		ldr	r7, [sp], #4
 417 0018 7047     		bx	lr
 418              	.L29:
 419 001a 00BF     		.align	2
 420              	.L28:
 421 001c 48680040 		.word	1073768520
 422              		.cfi_endproc
 423              	.LFE8:
 424              		.size	Arm_WriteCompare, .-Arm_WriteCompare
 425              		.section	.text.Arm_SetInterruptMode,"ax",%progbits
 426              		.align	2
 427              		.global	Arm_SetInterruptMode
 428              		.thumb
 429              		.thumb_func
 430              		.type	Arm_SetInterruptMode, %function
 431              	Arm_SetInterruptMode:
 432              	.LFB9:
 533:.\Generated_Source\PSoC5/Arm.c **** 
 534:.\Generated_Source\PSoC5/Arm.c **** 
 535:.\Generated_Source\PSoC5/Arm.c **** #else
 536:.\Generated_Source\PSoC5/Arm.c **** 
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 18


 537:.\Generated_Source\PSoC5/Arm.c **** 
 538:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_WriteCompare1
 540:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/Arm.c ****     *
 542:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 543:.\Generated_Source\PSoC5/Arm.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/Arm.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/Arm.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/Arm.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/Arm.c ****     *
 548:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/Arm.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/Arm.c ****     *
 551:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 552:.\Generated_Source\PSoC5/Arm.c ****     *  None
 553:.\Generated_Source\PSoC5/Arm.c ****     *
 554:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/Arm.c ****     void Arm_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/Arm.c ****                                         
 557:.\Generated_Source\PSoC5/Arm.c ****     {
 558:.\Generated_Source\PSoC5/Arm.c ****         #if(Arm_UsingFixedFunction)
 559:.\Generated_Source\PSoC5/Arm.c ****             CY_SET_REG16(Arm_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/Arm.c ****         #else
 561:.\Generated_Source\PSoC5/Arm.c ****             CY_SET_REG16(Arm_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (Arm_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/Arm.c ****     }
 564:.\Generated_Source\PSoC5/Arm.c **** 
 565:.\Generated_Source\PSoC5/Arm.c **** 
 566:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_WriteCompare2
 568:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/Arm.c ****     *
 570:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 571:.\Generated_Source\PSoC5/Arm.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/Arm.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/Arm.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/Arm.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/Arm.c ****     *  mode.
 576:.\Generated_Source\PSoC5/Arm.c ****     *
 577:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/Arm.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/Arm.c ****     *
 580:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 581:.\Generated_Source\PSoC5/Arm.c ****     *  None
 582:.\Generated_Source\PSoC5/Arm.c ****     *
 583:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/Arm.c ****     void Arm_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/Arm.c ****                                         
 586:.\Generated_Source\PSoC5/Arm.c ****     {
 587:.\Generated_Source\PSoC5/Arm.c ****         #if(Arm_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/Arm.c ****             CY_SET_REG16(Arm_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/Arm.c ****         #else
 590:.\Generated_Source\PSoC5/Arm.c ****             CY_SET_REG16(Arm_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (Arm_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/Arm.c ****     }
 593:.\Generated_Source\PSoC5/Arm.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 19


 594:.\Generated_Source\PSoC5/Arm.c **** 
 595:.\Generated_Source\PSoC5/Arm.c **** #if (Arm_DeadBandUsed)
 596:.\Generated_Source\PSoC5/Arm.c **** 
 597:.\Generated_Source\PSoC5/Arm.c **** 
 598:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_WriteDeadTime
 600:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/Arm.c ****     *
 602:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 603:.\Generated_Source\PSoC5/Arm.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/Arm.c ****     *
 605:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/Arm.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/Arm.c ****     *
 608:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 609:.\Generated_Source\PSoC5/Arm.c ****     *  None
 610:.\Generated_Source\PSoC5/Arm.c ****     *
 611:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/Arm.c ****     void Arm_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/Arm.c ****     {
 614:.\Generated_Source\PSoC5/Arm.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/Arm.c ****         #if(!Arm_DeadBand2_4)
 616:.\Generated_Source\PSoC5/Arm.c ****             CY_SET_REG8(Arm_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/Arm.c ****         #else
 618:.\Generated_Source\PSoC5/Arm.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/Arm.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/Arm.c ****             Arm_DEADBAND_COUNT &= ((uint8)(~Arm_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/Arm.c **** 
 622:.\Generated_Source\PSoC5/Arm.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/Arm.c ****             #if(Arm_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/Arm.c ****                 Arm_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << Arm_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC5/Arm.c ****                                                     Arm_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/Arm.c ****             #else
 627:.\Generated_Source\PSoC5/Arm.c ****                 Arm_DEADBAND_COUNT |= deadtime & Arm_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/Arm.c ****             #endif /* (Arm_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/Arm.c **** 
 630:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (!Arm_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/Arm.c ****     }
 632:.\Generated_Source\PSoC5/Arm.c **** 
 633:.\Generated_Source\PSoC5/Arm.c **** 
 634:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_ReadDeadTime
 636:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/Arm.c ****     *
 638:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 639:.\Generated_Source\PSoC5/Arm.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/Arm.c ****     *
 641:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/Arm.c ****     *  None
 643:.\Generated_Source\PSoC5/Arm.c ****     *
 644:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 645:.\Generated_Source\PSoC5/Arm.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/Arm.c ****     *
 647:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/Arm.c ****     uint8 Arm_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/Arm.c ****     {
 650:.\Generated_Source\PSoC5/Arm.c ****         /* If using the Dead Band 1-255 mode then just read the register */
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 20


 651:.\Generated_Source\PSoC5/Arm.c ****         #if(!Arm_DeadBand2_4)
 652:.\Generated_Source\PSoC5/Arm.c ****             return (CY_GET_REG8(Arm_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/Arm.c ****         #else
 654:.\Generated_Source\PSoC5/Arm.c **** 
 655:.\Generated_Source\PSoC5/Arm.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/Arm.c ****             #if(Arm_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/Arm.c ****                 return ((uint8)(((uint8)(Arm_DEADBAND_COUNT & Arm_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC5/Arm.c ****                                                                            Arm_DEADBAND_COUNT_SHIFT
 659:.\Generated_Source\PSoC5/Arm.c ****             #else
 660:.\Generated_Source\PSoC5/Arm.c ****                 return (Arm_DEADBAND_COUNT & Arm_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/Arm.c ****             #endif /* (Arm_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (!Arm_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/Arm.c ****     }
 664:.\Generated_Source\PSoC5/Arm.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/Arm.c **** 
 666:.\Generated_Source\PSoC5/Arm.c **** #if (Arm_UseStatus || Arm_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/Arm.c **** 
 668:.\Generated_Source\PSoC5/Arm.c **** 
 669:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_SetInterruptMode
 671:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/Arm.c ****     *
 673:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 674:.\Generated_Source\PSoC5/Arm.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/Arm.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/Arm.c ****     *
 677:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/Arm.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/Arm.c ****     *
 680:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 681:.\Generated_Source\PSoC5/Arm.c ****     *  None
 682:.\Generated_Source\PSoC5/Arm.c ****     *
 683:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/Arm.c ****     void Arm_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/Arm.c ****     {
 433              		.loc 1 685 0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 8
 436              		@ frame_needed = 1, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 438 0000 80B4     		push	{r7}
 439              		.cfi_def_cfa_offset 4
 440              		.cfi_offset 7, -4
 441 0002 83B0     		sub	sp, sp, #12
 442              		.cfi_def_cfa_offset 16
 443 0004 00AF     		add	r7, sp, #0
 444              		.cfi_def_cfa_register 7
 445 0006 0346     		mov	r3, r0
 446 0008 FB71     		strb	r3, [r7, #7]
 686:.\Generated_Source\PSoC5/Arm.c ****         CY_SET_REG8(Arm_STATUS_MASK_PTR, interruptMode);
 447              		.loc 1 686 0
 448 000a 044B     		ldr	r3, .L31
 449 000c FA79     		ldrb	r2, [r7, #7]
 450 000e 1A70     		strb	r2, [r3]
 687:.\Generated_Source\PSoC5/Arm.c ****     }
 451              		.loc 1 687 0
 452 0010 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 21


 453 0012 BD46     		mov	sp, r7
 454              		@ sp needed
 455 0014 5DF8047B 		ldr	r7, [sp], #4
 456 0018 7047     		bx	lr
 457              	.L32:
 458 001a 00BF     		.align	2
 459              	.L31:
 460 001c 84640040 		.word	1073767556
 461              		.cfi_endproc
 462              	.LFE9:
 463              		.size	Arm_SetInterruptMode, .-Arm_SetInterruptMode
 464              		.section	.text.Arm_ReadStatusRegister,"ax",%progbits
 465              		.align	2
 466              		.global	Arm_ReadStatusRegister
 467              		.thumb
 468              		.thumb_func
 469              		.type	Arm_ReadStatusRegister, %function
 470              	Arm_ReadStatusRegister:
 471              	.LFB10:
 688:.\Generated_Source\PSoC5/Arm.c **** 
 689:.\Generated_Source\PSoC5/Arm.c **** 
 690:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_ReadStatusRegister
 692:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/Arm.c ****     *
 694:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 695:.\Generated_Source\PSoC5/Arm.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/Arm.c ****     *
 697:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/Arm.c ****     *  None
 699:.\Generated_Source\PSoC5/Arm.c ****     *
 700:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 701:.\Generated_Source\PSoC5/Arm.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/Arm.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/Arm.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/Arm.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC5/Arm.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/Arm.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/Arm.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/Arm.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/Arm.c ****     *
 710:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/Arm.c ****     uint8 Arm_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/Arm.c ****     {
 472              		.loc 1 712 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 1, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477 0000 80B4     		push	{r7}
 478              		.cfi_def_cfa_offset 4
 479              		.cfi_offset 7, -4
 480 0002 00AF     		add	r7, sp, #0
 481              		.cfi_def_cfa_register 7
 713:.\Generated_Source\PSoC5/Arm.c ****         return (CY_GET_REG8(Arm_STATUS_PTR));
 482              		.loc 1 713 0
 483 0004 034B     		ldr	r3, .L35
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 22


 484 0006 1B78     		ldrb	r3, [r3]
 485 0008 DBB2     		uxtb	r3, r3
 714:.\Generated_Source\PSoC5/Arm.c ****     }
 486              		.loc 1 714 0
 487 000a 1846     		mov	r0, r3
 488 000c BD46     		mov	sp, r7
 489              		@ sp needed
 490 000e 5DF8047B 		ldr	r7, [sp], #4
 491 0012 7047     		bx	lr
 492              	.L36:
 493              		.align	2
 494              	.L35:
 495 0014 64640040 		.word	1073767524
 496              		.cfi_endproc
 497              	.LFE10:
 498              		.size	Arm_ReadStatusRegister, .-Arm_ReadStatusRegister
 499              		.section	.text.Arm_ReadControlRegister,"ax",%progbits
 500              		.align	2
 501              		.global	Arm_ReadControlRegister
 502              		.thumb
 503              		.thumb_func
 504              		.type	Arm_ReadControlRegister, %function
 505              	Arm_ReadControlRegister:
 506              	.LFB11:
 715:.\Generated_Source\PSoC5/Arm.c **** 
 716:.\Generated_Source\PSoC5/Arm.c **** #endif /* (Arm_UseStatus || Arm_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/Arm.c **** 
 718:.\Generated_Source\PSoC5/Arm.c **** 
 719:.\Generated_Source\PSoC5/Arm.c **** #if (Arm_UseControl)
 720:.\Generated_Source\PSoC5/Arm.c **** 
 721:.\Generated_Source\PSoC5/Arm.c **** 
 722:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_ReadControlRegister
 724:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/Arm.c ****     *
 726:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 727:.\Generated_Source\PSoC5/Arm.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/Arm.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/Arm.c ****     *
 730:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/Arm.c ****     *  None
 732:.\Generated_Source\PSoC5/Arm.c ****     *
 733:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 734:.\Generated_Source\PSoC5/Arm.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/Arm.c ****     *
 736:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC5/Arm.c ****     uint8 Arm_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/Arm.c ****     {
 507              		.loc 1 738 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 8
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 512 0000 80B4     		push	{r7}
 513              		.cfi_def_cfa_offset 4
 514              		.cfi_offset 7, -4
 515 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 23


 516              		.cfi_def_cfa_offset 16
 517 0004 00AF     		add	r7, sp, #0
 518              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC5/Arm.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/Arm.c **** 
 741:.\Generated_Source\PSoC5/Arm.c ****         result = CY_GET_REG8(Arm_CONTROL_PTR);
 519              		.loc 1 741 0
 520 0006 054B     		ldr	r3, .L39
 521 0008 1B78     		ldrb	r3, [r3]
 522 000a FB71     		strb	r3, [r7, #7]
 742:.\Generated_Source\PSoC5/Arm.c ****         return (result);
 523              		.loc 1 742 0
 524 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:.\Generated_Source\PSoC5/Arm.c ****     }
 525              		.loc 1 743 0
 526 000e 1846     		mov	r0, r3
 527 0010 0C37     		adds	r7, r7, #12
 528 0012 BD46     		mov	sp, r7
 529              		@ sp needed
 530 0014 5DF8047B 		ldr	r7, [sp], #4
 531 0018 7047     		bx	lr
 532              	.L40:
 533 001a 00BF     		.align	2
 534              	.L39:
 535 001c 74640040 		.word	1073767540
 536              		.cfi_endproc
 537              	.LFE11:
 538              		.size	Arm_ReadControlRegister, .-Arm_ReadControlRegister
 539              		.section	.text.Arm_WriteControlRegister,"ax",%progbits
 540              		.align	2
 541              		.global	Arm_WriteControlRegister
 542              		.thumb
 543              		.thumb_func
 544              		.type	Arm_WriteControlRegister, %function
 545              	Arm_WriteControlRegister:
 546              	.LFB12:
 744:.\Generated_Source\PSoC5/Arm.c **** 
 745:.\Generated_Source\PSoC5/Arm.c **** 
 746:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_WriteControlRegister
 748:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/Arm.c ****     *
 750:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 751:.\Generated_Source\PSoC5/Arm.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/Arm.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/Arm.c ****     *
 754:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/Arm.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/Arm.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/Arm.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/Arm.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/Arm.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/Arm.c ****     *
 761:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 762:.\Generated_Source\PSoC5/Arm.c ****     *  None
 763:.\Generated_Source\PSoC5/Arm.c ****     *
 764:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 24


 765:.\Generated_Source\PSoC5/Arm.c ****     void Arm_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/Arm.c ****     {
 547              		.loc 1 766 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 8
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 552 0000 80B4     		push	{r7}
 553              		.cfi_def_cfa_offset 4
 554              		.cfi_offset 7, -4
 555 0002 83B0     		sub	sp, sp, #12
 556              		.cfi_def_cfa_offset 16
 557 0004 00AF     		add	r7, sp, #0
 558              		.cfi_def_cfa_register 7
 559 0006 0346     		mov	r3, r0
 560 0008 FB71     		strb	r3, [r7, #7]
 767:.\Generated_Source\PSoC5/Arm.c ****         CY_SET_REG8(Arm_CONTROL_PTR, control);
 561              		.loc 1 767 0
 562 000a 044B     		ldr	r3, .L42
 563 000c FA79     		ldrb	r2, [r7, #7]
 564 000e 1A70     		strb	r2, [r3]
 768:.\Generated_Source\PSoC5/Arm.c ****     }
 565              		.loc 1 768 0
 566 0010 0C37     		adds	r7, r7, #12
 567 0012 BD46     		mov	sp, r7
 568              		@ sp needed
 569 0014 5DF8047B 		ldr	r7, [sp], #4
 570 0018 7047     		bx	lr
 571              	.L43:
 572 001a 00BF     		.align	2
 573              	.L42:
 574 001c 74640040 		.word	1073767540
 575              		.cfi_endproc
 576              	.LFE12:
 577              		.size	Arm_WriteControlRegister, .-Arm_WriteControlRegister
 578              		.section	.text.Arm_ReadCapture,"ax",%progbits
 579              		.align	2
 580              		.global	Arm_ReadCapture
 581              		.thumb
 582              		.thumb_func
 583              		.type	Arm_ReadCapture, %function
 584              	Arm_ReadCapture:
 585              	.LFB13:
 769:.\Generated_Source\PSoC5/Arm.c **** 
 770:.\Generated_Source\PSoC5/Arm.c **** #endif /* (Arm_UseControl) */
 771:.\Generated_Source\PSoC5/Arm.c **** 
 772:.\Generated_Source\PSoC5/Arm.c **** 
 773:.\Generated_Source\PSoC5/Arm.c **** #if (!Arm_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/Arm.c **** 
 775:.\Generated_Source\PSoC5/Arm.c **** 
 776:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_ReadCapture
 778:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/Arm.c ****     *
 780:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 781:.\Generated_Source\PSoC5/Arm.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/Arm.c ****     *
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 25


 783:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/Arm.c ****     *  None
 785:.\Generated_Source\PSoC5/Arm.c ****     *
 786:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 787:.\Generated_Source\PSoC5/Arm.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/Arm.c ****     *
 789:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/Arm.c ****     uint16 Arm_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/Arm.c ****     {
 586              		.loc 1 791 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 1, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591 0000 80B4     		push	{r7}
 592              		.cfi_def_cfa_offset 4
 593              		.cfi_offset 7, -4
 594 0002 00AF     		add	r7, sp, #0
 595              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC5/Arm.c ****         return (CY_GET_REG16(Arm_CAPTURE_LSB_PTR));
 596              		.loc 1 792 0
 597 0004 034B     		ldr	r3, .L46
 598 0006 1B88     		ldrh	r3, [r3]	@ movhi
 599 0008 9BB2     		uxth	r3, r3
 793:.\Generated_Source\PSoC5/Arm.c ****     }
 600              		.loc 1 793 0
 601 000a 1846     		mov	r0, r3
 602 000c BD46     		mov	sp, r7
 603              		@ sp needed
 604 000e 5DF8047B 		ldr	r7, [sp], #4
 605 0012 7047     		bx	lr
 606              	.L47:
 607              		.align	2
 608              	.L46:
 609 0014 A8680040 		.word	1073768616
 610              		.cfi_endproc
 611              	.LFE13:
 612              		.size	Arm_ReadCapture, .-Arm_ReadCapture
 613              		.section	.text.Arm_ReadCompare,"ax",%progbits
 614              		.align	2
 615              		.global	Arm_ReadCompare
 616              		.thumb
 617              		.thumb_func
 618              		.type	Arm_ReadCompare, %function
 619              	Arm_ReadCompare:
 620              	.LFB14:
 794:.\Generated_Source\PSoC5/Arm.c **** 
 795:.\Generated_Source\PSoC5/Arm.c **** #endif /* (!Arm_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/Arm.c **** 
 797:.\Generated_Source\PSoC5/Arm.c **** 
 798:.\Generated_Source\PSoC5/Arm.c **** #if (Arm_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/Arm.c **** 
 800:.\Generated_Source\PSoC5/Arm.c **** 
 801:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_ReadCompare
 803:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/Arm.c ****     *
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 26


 805:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 806:.\Generated_Source\PSoC5/Arm.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/Arm.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/Arm.c ****     *
 809:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/Arm.c ****     *  None
 811:.\Generated_Source\PSoC5/Arm.c ****     *
 812:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 813:.\Generated_Source\PSoC5/Arm.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/Arm.c ****     *
 815:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/Arm.c ****     uint16 Arm_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/Arm.c ****     {
 621              		.loc 1 817 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 626 0000 80B4     		push	{r7}
 627              		.cfi_def_cfa_offset 4
 628              		.cfi_offset 7, -4
 629 0002 00AF     		add	r7, sp, #0
 630              		.cfi_def_cfa_register 7
 818:.\Generated_Source\PSoC5/Arm.c ****         #if(Arm_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/Arm.c ****             return ((uint16)CY_GET_REG16(Arm_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/Arm.c ****         #else
 821:.\Generated_Source\PSoC5/Arm.c ****             return (CY_GET_REG16(Arm_COMPARE1_LSB_PTR));
 631              		.loc 1 821 0
 632 0004 034B     		ldr	r3, .L50
 633 0006 1B88     		ldrh	r3, [r3]	@ movhi
 634 0008 9BB2     		uxth	r3, r3
 822:.\Generated_Source\PSoC5/Arm.c ****         #endif /* (Arm_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/Arm.c ****     }
 635              		.loc 1 823 0
 636 000a 1846     		mov	r0, r3
 637 000c BD46     		mov	sp, r7
 638              		@ sp needed
 639 000e 5DF8047B 		ldr	r7, [sp], #4
 640 0012 7047     		bx	lr
 641              	.L51:
 642              		.align	2
 643              	.L50:
 644 0014 48680040 		.word	1073768520
 645              		.cfi_endproc
 646              	.LFE14:
 647              		.size	Arm_ReadCompare, .-Arm_ReadCompare
 648              		.section	.text.Arm_ReadPeriod,"ax",%progbits
 649              		.align	2
 650              		.global	Arm_ReadPeriod
 651              		.thumb
 652              		.thumb_func
 653              		.type	Arm_ReadPeriod, %function
 654              	Arm_ReadPeriod:
 655              	.LFB15:
 824:.\Generated_Source\PSoC5/Arm.c **** 
 825:.\Generated_Source\PSoC5/Arm.c **** #else
 826:.\Generated_Source\PSoC5/Arm.c **** 
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 27


 827:.\Generated_Source\PSoC5/Arm.c **** 
 828:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_ReadCompare1
 830:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/Arm.c ****     *
 832:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 833:.\Generated_Source\PSoC5/Arm.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/Arm.c ****     *
 835:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/Arm.c ****     *  None
 837:.\Generated_Source\PSoC5/Arm.c ****     *
 838:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 839:.\Generated_Source\PSoC5/Arm.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/Arm.c ****     *
 841:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/Arm.c ****     uint16 Arm_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/Arm.c ****     {
 844:.\Generated_Source\PSoC5/Arm.c ****         return (CY_GET_REG16(Arm_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC5/Arm.c ****     }
 846:.\Generated_Source\PSoC5/Arm.c **** 
 847:.\Generated_Source\PSoC5/Arm.c **** 
 848:.\Generated_Source\PSoC5/Arm.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/Arm.c ****     * Function Name: Arm_ReadCompare2
 850:.\Generated_Source\PSoC5/Arm.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/Arm.c ****     *
 852:.\Generated_Source\PSoC5/Arm.c ****     * Summary:
 853:.\Generated_Source\PSoC5/Arm.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/Arm.c ****     *
 855:.\Generated_Source\PSoC5/Arm.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/Arm.c ****     *  None
 857:.\Generated_Source\PSoC5/Arm.c ****     *
 858:.\Generated_Source\PSoC5/Arm.c ****     * Return:
 859:.\Generated_Source\PSoC5/Arm.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/Arm.c ****     *
 861:.\Generated_Source\PSoC5/Arm.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/Arm.c ****     uint16 Arm_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/Arm.c ****     {
 864:.\Generated_Source\PSoC5/Arm.c ****         return (CY_GET_REG16(Arm_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC5/Arm.c ****     }
 866:.\Generated_Source\PSoC5/Arm.c **** 
 867:.\Generated_Source\PSoC5/Arm.c **** #endif /* (Arm_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/Arm.c **** 
 869:.\Generated_Source\PSoC5/Arm.c **** 
 870:.\Generated_Source\PSoC5/Arm.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/Arm.c **** * Function Name: Arm_ReadPeriod
 872:.\Generated_Source\PSoC5/Arm.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/Arm.c **** *
 874:.\Generated_Source\PSoC5/Arm.c **** * Summary:
 875:.\Generated_Source\PSoC5/Arm.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/Arm.c **** *
 877:.\Generated_Source\PSoC5/Arm.c **** * Parameters:
 878:.\Generated_Source\PSoC5/Arm.c **** *  None
 879:.\Generated_Source\PSoC5/Arm.c **** *
 880:.\Generated_Source\PSoC5/Arm.c **** * Return:
 881:.\Generated_Source\PSoC5/Arm.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/Arm.c **** *
 883:.\Generated_Source\PSoC5/Arm.c **** *******************************************************************************/
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 28


 884:.\Generated_Source\PSoC5/Arm.c **** uint16 Arm_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/Arm.c **** {
 656              		.loc 1 885 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 1, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 661 0000 80B4     		push	{r7}
 662              		.cfi_def_cfa_offset 4
 663              		.cfi_offset 7, -4
 664 0002 00AF     		add	r7, sp, #0
 665              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC5/Arm.c ****     #if(Arm_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/Arm.c ****         return ((uint16)CY_GET_REG16(Arm_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/Arm.c ****     #else
 889:.\Generated_Source\PSoC5/Arm.c ****         return (CY_GET_REG16(Arm_PERIOD_LSB_PTR));
 666              		.loc 1 889 0
 667 0004 034B     		ldr	r3, .L54
 668 0006 1B88     		ldrh	r3, [r3]	@ movhi
 669 0008 9BB2     		uxth	r3, r3
 890:.\Generated_Source\PSoC5/Arm.c ****     #endif /* (Arm_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/Arm.c **** }
 670              		.loc 1 891 0
 671 000a 1846     		mov	r0, r3
 672 000c BD46     		mov	sp, r7
 673              		@ sp needed
 674 000e 5DF8047B 		ldr	r7, [sp], #4
 675 0012 7047     		bx	lr
 676              	.L55:
 677              		.align	2
 678              	.L54:
 679 0014 88680040 		.word	1073768584
 680              		.cfi_endproc
 681              	.LFE15:
 682              		.size	Arm_ReadPeriod, .-Arm_ReadPeriod
 683              		.text
 684              	.Letext0:
 685              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 686              		.section	.debug_info,"",%progbits
 687              	.Ldebug_info0:
 688 0000 9A020000 		.4byte	0x29a
 689 0004 0400     		.2byte	0x4
 690 0006 00000000 		.4byte	.Ldebug_abbrev0
 691 000a 04       		.byte	0x4
 692 000b 01       		.uleb128 0x1
 693 000c BF010000 		.4byte	.LASF40
 694 0010 01       		.byte	0x1
 695 0011 F7000000 		.4byte	.LASF41
 696 0015 20010000 		.4byte	.LASF42
 697 0019 00000000 		.4byte	.Ldebug_ranges0+0
 698 001d 00000000 		.4byte	0
 699 0021 00000000 		.4byte	.Ldebug_line0
 700 0025 02       		.uleb128 0x2
 701 0026 01       		.byte	0x1
 702 0027 06       		.byte	0x6
 703 0028 D4020000 		.4byte	.LASF0
 704 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 29


 705 002d 01       		.byte	0x1
 706 002e 08       		.byte	0x8
 707 002f E2000000 		.4byte	.LASF1
 708 0033 02       		.uleb128 0x2
 709 0034 02       		.byte	0x2
 710 0035 05       		.byte	0x5
 711 0036 16010000 		.4byte	.LASF2
 712 003a 02       		.uleb128 0x2
 713 003b 02       		.byte	0x2
 714 003c 07       		.byte	0x7
 715 003d 3F000000 		.4byte	.LASF3
 716 0041 02       		.uleb128 0x2
 717 0042 04       		.byte	0x4
 718 0043 05       		.byte	0x5
 719 0044 C6020000 		.4byte	.LASF4
 720 0048 02       		.uleb128 0x2
 721 0049 04       		.byte	0x4
 722 004a 07       		.byte	0x7
 723 004b A7000000 		.4byte	.LASF5
 724 004f 02       		.uleb128 0x2
 725 0050 08       		.byte	0x8
 726 0051 05       		.byte	0x5
 727 0052 72020000 		.4byte	.LASF6
 728 0056 02       		.uleb128 0x2
 729 0057 08       		.byte	0x8
 730 0058 07       		.byte	0x7
 731 0059 97010000 		.4byte	.LASF7
 732 005d 03       		.uleb128 0x3
 733 005e 04       		.byte	0x4
 734 005f 05       		.byte	0x5
 735 0060 696E7400 		.ascii	"int\000"
 736 0064 02       		.uleb128 0x2
 737 0065 04       		.byte	0x4
 738 0066 07       		.byte	0x7
 739 0067 79010000 		.4byte	.LASF8
 740 006b 04       		.uleb128 0x4
 741 006c C9000000 		.4byte	.LASF9
 742 0070 02       		.byte	0x2
 743 0071 B3       		.byte	0xb3
 744 0072 2C000000 		.4byte	0x2c
 745 0076 04       		.uleb128 0x4
 746 0077 72010000 		.4byte	.LASF10
 747 007b 02       		.byte	0x2
 748 007c B4       		.byte	0xb4
 749 007d 3A000000 		.4byte	0x3a
 750 0081 02       		.uleb128 0x2
 751 0082 04       		.byte	0x4
 752 0083 04       		.byte	0x4
 753 0084 84000000 		.4byte	.LASF11
 754 0088 02       		.uleb128 0x2
 755 0089 08       		.byte	0x8
 756 008a 04       		.byte	0x4
 757 008b F0000000 		.4byte	.LASF12
 758 008f 02       		.uleb128 0x2
 759 0090 01       		.byte	0x1
 760 0091 08       		.byte	0x8
 761 0092 CF020000 		.4byte	.LASF13
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 30


 762 0096 05       		.uleb128 0x5
 763 0097 A2000000 		.4byte	.LASF14
 764 009b 02       		.byte	0x2
 765 009c 5D01     		.2byte	0x15d
 766 009e A2000000 		.4byte	0xa2
 767 00a2 06       		.uleb128 0x6
 768 00a3 6B000000 		.4byte	0x6b
 769 00a7 05       		.uleb128 0x5
 770 00a8 00000000 		.4byte	.LASF15
 771 00ac 02       		.byte	0x2
 772 00ad 5E01     		.2byte	0x15e
 773 00af B3000000 		.4byte	0xb3
 774 00b3 06       		.uleb128 0x6
 775 00b4 76000000 		.4byte	0x76
 776 00b8 02       		.uleb128 0x2
 777 00b9 04       		.byte	0x4
 778 00ba 07       		.byte	0x7
 779 00bb 69020000 		.4byte	.LASF16
 780 00bf 07       		.uleb128 0x7
 781 00c0 B5010000 		.4byte	.LASF19
 782 00c4 01       		.byte	0x1
 783 00c5 37       		.byte	0x37
 784 00c6 00000000 		.4byte	.LFB0
 785 00ca 20000000 		.4byte	.LFE0-.LFB0
 786 00ce 01       		.uleb128 0x1
 787 00cf 9C       		.byte	0x9c
 788 00d0 08       		.uleb128 0x8
 789 00d1 BD020000 		.4byte	.LASF22
 790 00d5 01       		.byte	0x1
 791 00d6 54       		.byte	0x54
 792 00d7 00000000 		.4byte	.LFB1
 793 00db 90000000 		.4byte	.LFE1-.LFB1
 794 00df 01       		.uleb128 0x1
 795 00e0 9C       		.byte	0x9c
 796 00e1 02010000 		.4byte	0x102
 797 00e5 09       		.uleb128 0x9
 798 00e6 4B020000 		.4byte	.LASF17
 799 00ea 01       		.byte	0x1
 800 00eb 57       		.byte	0x57
 801 00ec 6B000000 		.4byte	0x6b
 802 00f0 02       		.uleb128 0x2
 803 00f1 91       		.byte	0x91
 804 00f2 77       		.sleb128 -9
 805 00f3 09       		.uleb128 0x9
 806 00f4 9A020000 		.4byte	.LASF18
 807 00f8 01       		.byte	0x1
 808 00f9 5D       		.byte	0x5d
 809 00fa 6B000000 		.4byte	0x6b
 810 00fe 02       		.uleb128 0x2
 811 00ff 91       		.byte	0x91
 812 0100 76       		.sleb128 -10
 813 0101 00       		.byte	0
 814 0102 0A       		.uleb128 0xa
 815 0103 D7000000 		.4byte	.LASF20
 816 0107 01       		.byte	0x1
 817 0108 C7       		.byte	0xc7
 818 0109 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 31


 819 010d 20000000 		.4byte	.LFE2-.LFB2
 820 0111 01       		.uleb128 0x1
 821 0112 9C       		.byte	0x9c
 822 0113 0A       		.uleb128 0xa
 823 0114 6A000000 		.4byte	.LASF21
 824 0118 01       		.byte	0x1
 825 0119 E9       		.byte	0xe9
 826 011a 00000000 		.4byte	.LFB3
 827 011e 20000000 		.4byte	.LFE3-.LFB3
 828 0122 01       		.uleb128 0x1
 829 0123 9C       		.byte	0x9c
 830 0124 0B       		.uleb128 0xb
 831 0125 86010000 		.4byte	.LASF23
 832 0129 01       		.byte	0x1
 833 012a 9301     		.2byte	0x193
 834 012c 00000000 		.4byte	.LFB4
 835 0130 20000000 		.4byte	.LFE4-.LFB4
 836 0134 01       		.uleb128 0x1
 837 0135 9C       		.byte	0x9c
 838 0136 4A010000 		.4byte	0x14a
 839 013a 0C       		.uleb128 0xc
 840 013b 8A000000 		.4byte	.LASF26
 841 013f 01       		.byte	0x1
 842 0140 9301     		.2byte	0x193
 843 0142 76000000 		.4byte	0x76
 844 0146 02       		.uleb128 0x2
 845 0147 91       		.byte	0x91
 846 0148 76       		.sleb128 -10
 847 0149 00       		.byte	0
 848 014a 0D       		.uleb128 0xd
 849 014b 3B020000 		.4byte	.LASF32
 850 014f 01       		.byte	0x1
 851 0150 A901     		.2byte	0x1a9
 852 0152 76000000 		.4byte	0x76
 853 0156 00000000 		.4byte	.LFB5
 854 015a 20000000 		.4byte	.LFE5-.LFB5
 855 015e 01       		.uleb128 0x1
 856 015f 9C       		.byte	0x9c
 857 0160 0E       		.uleb128 0xe
 858 0161 06000000 		.4byte	.LASF24
 859 0165 01       		.byte	0x1
 860 0166 C501     		.2byte	0x1c5
 861 0168 00000000 		.4byte	.LFB6
 862 016c 1A000000 		.4byte	.LFE6-.LFB6
 863 0170 01       		.uleb128 0x1
 864 0171 9C       		.byte	0x9c
 865 0172 0B       		.uleb128 0xb
 866 0173 AD020000 		.4byte	.LASF25
 867 0177 01       		.byte	0x1
 868 0178 E201     		.2byte	0x1e2
 869 017a 00000000 		.4byte	.LFB7
 870 017e 20000000 		.4byte	.LFE7-.LFB7
 871 0182 01       		.uleb128 0x1
 872 0183 9C       		.byte	0x9c
 873 0184 98010000 		.4byte	0x198
 874 0188 0C       		.uleb128 0xc
 875 0189 38000000 		.4byte	.LASF27
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 32


 876 018d 01       		.byte	0x1
 877 018e E201     		.2byte	0x1e2
 878 0190 76000000 		.4byte	0x76
 879 0194 02       		.uleb128 0x2
 880 0195 91       		.byte	0x91
 881 0196 76       		.sleb128 -10
 882 0197 00       		.byte	0
 883 0198 0B       		.uleb128 0xb
 884 0199 73000000 		.4byte	.LASF28
 885 019d 01       		.byte	0x1
 886 019e 0402     		.2byte	0x204
 887 01a0 00000000 		.4byte	.LFB8
 888 01a4 20000000 		.4byte	.LFE8-.LFB8
 889 01a8 01       		.uleb128 0x1
 890 01a9 9C       		.byte	0x9c
 891 01aa BE010000 		.4byte	0x1be
 892 01ae 0C       		.uleb128 0xc
 893 01af E0020000 		.4byte	.LASF29
 894 01b3 01       		.byte	0x1
 895 01b4 0402     		.2byte	0x204
 896 01b6 76000000 		.4byte	0x76
 897 01ba 02       		.uleb128 0x2
 898 01bb 91       		.byte	0x91
 899 01bc 76       		.sleb128 -10
 900 01bd 00       		.byte	0
 901 01be 0B       		.uleb128 0xb
 902 01bf 23000000 		.4byte	.LASF30
 903 01c3 01       		.byte	0x1
 904 01c4 AC02     		.2byte	0x2ac
 905 01c6 00000000 		.4byte	.LFB9
 906 01ca 20000000 		.4byte	.LFE9-.LFB9
 907 01ce 01       		.uleb128 0x1
 908 01cf 9C       		.byte	0x9c
 909 01d0 E4010000 		.4byte	0x1e4
 910 01d4 0C       		.uleb128 0xc
 911 01d5 80020000 		.4byte	.LASF31
 912 01d9 01       		.byte	0x1
 913 01da AC02     		.2byte	0x2ac
 914 01dc 6B000000 		.4byte	0x6b
 915 01e0 02       		.uleb128 0x2
 916 01e1 91       		.byte	0x91
 917 01e2 77       		.sleb128 -9
 918 01e3 00       		.byte	0
 919 01e4 0D       		.uleb128 0xd
 920 01e5 E8020000 		.4byte	.LASF33
 921 01e9 01       		.byte	0x1
 922 01ea C702     		.2byte	0x2c7
 923 01ec 6B000000 		.4byte	0x6b
 924 01f0 00000000 		.4byte	.LFB10
 925 01f4 18000000 		.4byte	.LFE10-.LFB10
 926 01f8 01       		.uleb128 0x1
 927 01f9 9C       		.byte	0x9c
 928 01fa 0F       		.uleb128 0xf
 929 01fb 52000000 		.4byte	.LASF43
 930 01ff 01       		.byte	0x1
 931 0200 E102     		.2byte	0x2e1
 932 0202 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 33


 933 0206 00000000 		.4byte	.LFB11
 934 020a 20000000 		.4byte	.LFE11-.LFB11
 935 020e 01       		.uleb128 0x1
 936 020f 9C       		.byte	0x9c
 937 0210 24020000 		.4byte	0x224
 938 0214 10       		.uleb128 0x10
 939 0215 AE010000 		.4byte	.LASF34
 940 0219 01       		.byte	0x1
 941 021a E302     		.2byte	0x2e3
 942 021c 6B000000 		.4byte	0x6b
 943 0220 02       		.uleb128 0x2
 944 0221 91       		.byte	0x91
 945 0222 77       		.sleb128 -9
 946 0223 00       		.byte	0
 947 0224 0B       		.uleb128 0xb
 948 0225 50020000 		.4byte	.LASF35
 949 0229 01       		.byte	0x1
 950 022a FD02     		.2byte	0x2fd
 951 022c 00000000 		.4byte	.LFB12
 952 0230 20000000 		.4byte	.LFE12-.LFB12
 953 0234 01       		.uleb128 0x1
 954 0235 9C       		.byte	0x9c
 955 0236 4A020000 		.4byte	0x24a
 956 023a 0C       		.uleb128 0xc
 957 023b CF000000 		.4byte	.LASF36
 958 023f 01       		.byte	0x1
 959 0240 FD02     		.2byte	0x2fd
 960 0242 6B000000 		.4byte	0x6b
 961 0246 02       		.uleb128 0x2
 962 0247 91       		.byte	0x91
 963 0248 77       		.sleb128 -9
 964 0249 00       		.byte	0
 965 024a 0D       		.uleb128 0xd
 966 024b B9000000 		.4byte	.LASF37
 967 024f 01       		.byte	0x1
 968 0250 1603     		.2byte	0x316
 969 0252 76000000 		.4byte	0x76
 970 0256 00000000 		.4byte	.LFB13
 971 025a 18000000 		.4byte	.LFE13-.LFB13
 972 025e 01       		.uleb128 0x1
 973 025f 9C       		.byte	0x9c
 974 0260 0D       		.uleb128 0xd
 975 0261 92000000 		.4byte	.LASF38
 976 0265 01       		.byte	0x1
 977 0266 3003     		.2byte	0x330
 978 0268 76000000 		.4byte	0x76
 979 026c 00000000 		.4byte	.LFB14
 980 0270 18000000 		.4byte	.LFE14-.LFB14
 981 0274 01       		.uleb128 0x1
 982 0275 9C       		.byte	0x9c
 983 0276 0D       		.uleb128 0xd
 984 0277 14000000 		.4byte	.LASF39
 985 027b 01       		.byte	0x1
 986 027c 7403     		.2byte	0x374
 987 027e 76000000 		.4byte	0x76
 988 0282 00000000 		.4byte	.LFB15
 989 0286 18000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 34


 990 028a 01       		.uleb128 0x1
 991 028b 9C       		.byte	0x9c
 992 028c 11       		.uleb128 0x11
 993 028d 8E020000 		.4byte	.LASF44
 994 0291 01       		.byte	0x1
 995 0292 20       		.byte	0x20
 996 0293 6B000000 		.4byte	0x6b
 997 0297 05       		.uleb128 0x5
 998 0298 03       		.byte	0x3
 999 0299 00000000 		.4byte	Arm_initVar
 1000 029d 00       		.byte	0
 1001              		.section	.debug_abbrev,"",%progbits
 1002              	.Ldebug_abbrev0:
 1003 0000 01       		.uleb128 0x1
 1004 0001 11       		.uleb128 0x11
 1005 0002 01       		.byte	0x1
 1006 0003 25       		.uleb128 0x25
 1007 0004 0E       		.uleb128 0xe
 1008 0005 13       		.uleb128 0x13
 1009 0006 0B       		.uleb128 0xb
 1010 0007 03       		.uleb128 0x3
 1011 0008 0E       		.uleb128 0xe
 1012 0009 1B       		.uleb128 0x1b
 1013 000a 0E       		.uleb128 0xe
 1014 000b 55       		.uleb128 0x55
 1015 000c 17       		.uleb128 0x17
 1016 000d 11       		.uleb128 0x11
 1017 000e 01       		.uleb128 0x1
 1018 000f 10       		.uleb128 0x10
 1019 0010 17       		.uleb128 0x17
 1020 0011 00       		.byte	0
 1021 0012 00       		.byte	0
 1022 0013 02       		.uleb128 0x2
 1023 0014 24       		.uleb128 0x24
 1024 0015 00       		.byte	0
 1025 0016 0B       		.uleb128 0xb
 1026 0017 0B       		.uleb128 0xb
 1027 0018 3E       		.uleb128 0x3e
 1028 0019 0B       		.uleb128 0xb
 1029 001a 03       		.uleb128 0x3
 1030 001b 0E       		.uleb128 0xe
 1031 001c 00       		.byte	0
 1032 001d 00       		.byte	0
 1033 001e 03       		.uleb128 0x3
 1034 001f 24       		.uleb128 0x24
 1035 0020 00       		.byte	0
 1036 0021 0B       		.uleb128 0xb
 1037 0022 0B       		.uleb128 0xb
 1038 0023 3E       		.uleb128 0x3e
 1039 0024 0B       		.uleb128 0xb
 1040 0025 03       		.uleb128 0x3
 1041 0026 08       		.uleb128 0x8
 1042 0027 00       		.byte	0
 1043 0028 00       		.byte	0
 1044 0029 04       		.uleb128 0x4
 1045 002a 16       		.uleb128 0x16
 1046 002b 00       		.byte	0
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 35


 1047 002c 03       		.uleb128 0x3
 1048 002d 0E       		.uleb128 0xe
 1049 002e 3A       		.uleb128 0x3a
 1050 002f 0B       		.uleb128 0xb
 1051 0030 3B       		.uleb128 0x3b
 1052 0031 0B       		.uleb128 0xb
 1053 0032 49       		.uleb128 0x49
 1054 0033 13       		.uleb128 0x13
 1055 0034 00       		.byte	0
 1056 0035 00       		.byte	0
 1057 0036 05       		.uleb128 0x5
 1058 0037 16       		.uleb128 0x16
 1059 0038 00       		.byte	0
 1060 0039 03       		.uleb128 0x3
 1061 003a 0E       		.uleb128 0xe
 1062 003b 3A       		.uleb128 0x3a
 1063 003c 0B       		.uleb128 0xb
 1064 003d 3B       		.uleb128 0x3b
 1065 003e 05       		.uleb128 0x5
 1066 003f 49       		.uleb128 0x49
 1067 0040 13       		.uleb128 0x13
 1068 0041 00       		.byte	0
 1069 0042 00       		.byte	0
 1070 0043 06       		.uleb128 0x6
 1071 0044 35       		.uleb128 0x35
 1072 0045 00       		.byte	0
 1073 0046 49       		.uleb128 0x49
 1074 0047 13       		.uleb128 0x13
 1075 0048 00       		.byte	0
 1076 0049 00       		.byte	0
 1077 004a 07       		.uleb128 0x7
 1078 004b 2E       		.uleb128 0x2e
 1079 004c 00       		.byte	0
 1080 004d 3F       		.uleb128 0x3f
 1081 004e 19       		.uleb128 0x19
 1082 004f 03       		.uleb128 0x3
 1083 0050 0E       		.uleb128 0xe
 1084 0051 3A       		.uleb128 0x3a
 1085 0052 0B       		.uleb128 0xb
 1086 0053 3B       		.uleb128 0x3b
 1087 0054 0B       		.uleb128 0xb
 1088 0055 27       		.uleb128 0x27
 1089 0056 19       		.uleb128 0x19
 1090 0057 11       		.uleb128 0x11
 1091 0058 01       		.uleb128 0x1
 1092 0059 12       		.uleb128 0x12
 1093 005a 06       		.uleb128 0x6
 1094 005b 40       		.uleb128 0x40
 1095 005c 18       		.uleb128 0x18
 1096 005d 9642     		.uleb128 0x2116
 1097 005f 19       		.uleb128 0x19
 1098 0060 00       		.byte	0
 1099 0061 00       		.byte	0
 1100 0062 08       		.uleb128 0x8
 1101 0063 2E       		.uleb128 0x2e
 1102 0064 01       		.byte	0x1
 1103 0065 3F       		.uleb128 0x3f
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 36


 1104 0066 19       		.uleb128 0x19
 1105 0067 03       		.uleb128 0x3
 1106 0068 0E       		.uleb128 0xe
 1107 0069 3A       		.uleb128 0x3a
 1108 006a 0B       		.uleb128 0xb
 1109 006b 3B       		.uleb128 0x3b
 1110 006c 0B       		.uleb128 0xb
 1111 006d 27       		.uleb128 0x27
 1112 006e 19       		.uleb128 0x19
 1113 006f 11       		.uleb128 0x11
 1114 0070 01       		.uleb128 0x1
 1115 0071 12       		.uleb128 0x12
 1116 0072 06       		.uleb128 0x6
 1117 0073 40       		.uleb128 0x40
 1118 0074 18       		.uleb128 0x18
 1119 0075 9642     		.uleb128 0x2116
 1120 0077 19       		.uleb128 0x19
 1121 0078 01       		.uleb128 0x1
 1122 0079 13       		.uleb128 0x13
 1123 007a 00       		.byte	0
 1124 007b 00       		.byte	0
 1125 007c 09       		.uleb128 0x9
 1126 007d 34       		.uleb128 0x34
 1127 007e 00       		.byte	0
 1128 007f 03       		.uleb128 0x3
 1129 0080 0E       		.uleb128 0xe
 1130 0081 3A       		.uleb128 0x3a
 1131 0082 0B       		.uleb128 0xb
 1132 0083 3B       		.uleb128 0x3b
 1133 0084 0B       		.uleb128 0xb
 1134 0085 49       		.uleb128 0x49
 1135 0086 13       		.uleb128 0x13
 1136 0087 02       		.uleb128 0x2
 1137 0088 18       		.uleb128 0x18
 1138 0089 00       		.byte	0
 1139 008a 00       		.byte	0
 1140 008b 0A       		.uleb128 0xa
 1141 008c 2E       		.uleb128 0x2e
 1142 008d 00       		.byte	0
 1143 008e 3F       		.uleb128 0x3f
 1144 008f 19       		.uleb128 0x19
 1145 0090 03       		.uleb128 0x3
 1146 0091 0E       		.uleb128 0xe
 1147 0092 3A       		.uleb128 0x3a
 1148 0093 0B       		.uleb128 0xb
 1149 0094 3B       		.uleb128 0x3b
 1150 0095 0B       		.uleb128 0xb
 1151 0096 27       		.uleb128 0x27
 1152 0097 19       		.uleb128 0x19
 1153 0098 11       		.uleb128 0x11
 1154 0099 01       		.uleb128 0x1
 1155 009a 12       		.uleb128 0x12
 1156 009b 06       		.uleb128 0x6
 1157 009c 40       		.uleb128 0x40
 1158 009d 18       		.uleb128 0x18
 1159 009e 9742     		.uleb128 0x2117
 1160 00a0 19       		.uleb128 0x19
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 37


 1161 00a1 00       		.byte	0
 1162 00a2 00       		.byte	0
 1163 00a3 0B       		.uleb128 0xb
 1164 00a4 2E       		.uleb128 0x2e
 1165 00a5 01       		.byte	0x1
 1166 00a6 3F       		.uleb128 0x3f
 1167 00a7 19       		.uleb128 0x19
 1168 00a8 03       		.uleb128 0x3
 1169 00a9 0E       		.uleb128 0xe
 1170 00aa 3A       		.uleb128 0x3a
 1171 00ab 0B       		.uleb128 0xb
 1172 00ac 3B       		.uleb128 0x3b
 1173 00ad 05       		.uleb128 0x5
 1174 00ae 27       		.uleb128 0x27
 1175 00af 19       		.uleb128 0x19
 1176 00b0 11       		.uleb128 0x11
 1177 00b1 01       		.uleb128 0x1
 1178 00b2 12       		.uleb128 0x12
 1179 00b3 06       		.uleb128 0x6
 1180 00b4 40       		.uleb128 0x40
 1181 00b5 18       		.uleb128 0x18
 1182 00b6 9742     		.uleb128 0x2117
 1183 00b8 19       		.uleb128 0x19
 1184 00b9 01       		.uleb128 0x1
 1185 00ba 13       		.uleb128 0x13
 1186 00bb 00       		.byte	0
 1187 00bc 00       		.byte	0
 1188 00bd 0C       		.uleb128 0xc
 1189 00be 05       		.uleb128 0x5
 1190 00bf 00       		.byte	0
 1191 00c0 03       		.uleb128 0x3
 1192 00c1 0E       		.uleb128 0xe
 1193 00c2 3A       		.uleb128 0x3a
 1194 00c3 0B       		.uleb128 0xb
 1195 00c4 3B       		.uleb128 0x3b
 1196 00c5 05       		.uleb128 0x5
 1197 00c6 49       		.uleb128 0x49
 1198 00c7 13       		.uleb128 0x13
 1199 00c8 02       		.uleb128 0x2
 1200 00c9 18       		.uleb128 0x18
 1201 00ca 00       		.byte	0
 1202 00cb 00       		.byte	0
 1203 00cc 0D       		.uleb128 0xd
 1204 00cd 2E       		.uleb128 0x2e
 1205 00ce 00       		.byte	0
 1206 00cf 3F       		.uleb128 0x3f
 1207 00d0 19       		.uleb128 0x19
 1208 00d1 03       		.uleb128 0x3
 1209 00d2 0E       		.uleb128 0xe
 1210 00d3 3A       		.uleb128 0x3a
 1211 00d4 0B       		.uleb128 0xb
 1212 00d5 3B       		.uleb128 0x3b
 1213 00d6 05       		.uleb128 0x5
 1214 00d7 27       		.uleb128 0x27
 1215 00d8 19       		.uleb128 0x19
 1216 00d9 49       		.uleb128 0x49
 1217 00da 13       		.uleb128 0x13
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 38


 1218 00db 11       		.uleb128 0x11
 1219 00dc 01       		.uleb128 0x1
 1220 00dd 12       		.uleb128 0x12
 1221 00de 06       		.uleb128 0x6
 1222 00df 40       		.uleb128 0x40
 1223 00e0 18       		.uleb128 0x18
 1224 00e1 9742     		.uleb128 0x2117
 1225 00e3 19       		.uleb128 0x19
 1226 00e4 00       		.byte	0
 1227 00e5 00       		.byte	0
 1228 00e6 0E       		.uleb128 0xe
 1229 00e7 2E       		.uleb128 0x2e
 1230 00e8 00       		.byte	0
 1231 00e9 3F       		.uleb128 0x3f
 1232 00ea 19       		.uleb128 0x19
 1233 00eb 03       		.uleb128 0x3
 1234 00ec 0E       		.uleb128 0xe
 1235 00ed 3A       		.uleb128 0x3a
 1236 00ee 0B       		.uleb128 0xb
 1237 00ef 3B       		.uleb128 0x3b
 1238 00f0 05       		.uleb128 0x5
 1239 00f1 27       		.uleb128 0x27
 1240 00f2 19       		.uleb128 0x19
 1241 00f3 11       		.uleb128 0x11
 1242 00f4 01       		.uleb128 0x1
 1243 00f5 12       		.uleb128 0x12
 1244 00f6 06       		.uleb128 0x6
 1245 00f7 40       		.uleb128 0x40
 1246 00f8 18       		.uleb128 0x18
 1247 00f9 9642     		.uleb128 0x2116
 1248 00fb 19       		.uleb128 0x19
 1249 00fc 00       		.byte	0
 1250 00fd 00       		.byte	0
 1251 00fe 0F       		.uleb128 0xf
 1252 00ff 2E       		.uleb128 0x2e
 1253 0100 01       		.byte	0x1
 1254 0101 3F       		.uleb128 0x3f
 1255 0102 19       		.uleb128 0x19
 1256 0103 03       		.uleb128 0x3
 1257 0104 0E       		.uleb128 0xe
 1258 0105 3A       		.uleb128 0x3a
 1259 0106 0B       		.uleb128 0xb
 1260 0107 3B       		.uleb128 0x3b
 1261 0108 05       		.uleb128 0x5
 1262 0109 27       		.uleb128 0x27
 1263 010a 19       		.uleb128 0x19
 1264 010b 49       		.uleb128 0x49
 1265 010c 13       		.uleb128 0x13
 1266 010d 11       		.uleb128 0x11
 1267 010e 01       		.uleb128 0x1
 1268 010f 12       		.uleb128 0x12
 1269 0110 06       		.uleb128 0x6
 1270 0111 40       		.uleb128 0x40
 1271 0112 18       		.uleb128 0x18
 1272 0113 9742     		.uleb128 0x2117
 1273 0115 19       		.uleb128 0x19
 1274 0116 01       		.uleb128 0x1
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 39


 1275 0117 13       		.uleb128 0x13
 1276 0118 00       		.byte	0
 1277 0119 00       		.byte	0
 1278 011a 10       		.uleb128 0x10
 1279 011b 34       		.uleb128 0x34
 1280 011c 00       		.byte	0
 1281 011d 03       		.uleb128 0x3
 1282 011e 0E       		.uleb128 0xe
 1283 011f 3A       		.uleb128 0x3a
 1284 0120 0B       		.uleb128 0xb
 1285 0121 3B       		.uleb128 0x3b
 1286 0122 05       		.uleb128 0x5
 1287 0123 49       		.uleb128 0x49
 1288 0124 13       		.uleb128 0x13
 1289 0125 02       		.uleb128 0x2
 1290 0126 18       		.uleb128 0x18
 1291 0127 00       		.byte	0
 1292 0128 00       		.byte	0
 1293 0129 11       		.uleb128 0x11
 1294 012a 34       		.uleb128 0x34
 1295 012b 00       		.byte	0
 1296 012c 03       		.uleb128 0x3
 1297 012d 0E       		.uleb128 0xe
 1298 012e 3A       		.uleb128 0x3a
 1299 012f 0B       		.uleb128 0xb
 1300 0130 3B       		.uleb128 0x3b
 1301 0131 0B       		.uleb128 0xb
 1302 0132 49       		.uleb128 0x49
 1303 0133 13       		.uleb128 0x13
 1304 0134 3F       		.uleb128 0x3f
 1305 0135 19       		.uleb128 0x19
 1306 0136 02       		.uleb128 0x2
 1307 0137 18       		.uleb128 0x18
 1308 0138 00       		.byte	0
 1309 0139 00       		.byte	0
 1310 013a 00       		.byte	0
 1311              		.section	.debug_aranges,"",%progbits
 1312 0000 94000000 		.4byte	0x94
 1313 0004 0200     		.2byte	0x2
 1314 0006 00000000 		.4byte	.Ldebug_info0
 1315 000a 04       		.byte	0x4
 1316 000b 00       		.byte	0
 1317 000c 0000     		.2byte	0
 1318 000e 0000     		.2byte	0
 1319 0010 00000000 		.4byte	.LFB0
 1320 0014 20000000 		.4byte	.LFE0-.LFB0
 1321 0018 00000000 		.4byte	.LFB1
 1322 001c 90000000 		.4byte	.LFE1-.LFB1
 1323 0020 00000000 		.4byte	.LFB2
 1324 0024 20000000 		.4byte	.LFE2-.LFB2
 1325 0028 00000000 		.4byte	.LFB3
 1326 002c 20000000 		.4byte	.LFE3-.LFB3
 1327 0030 00000000 		.4byte	.LFB4
 1328 0034 20000000 		.4byte	.LFE4-.LFB4
 1329 0038 00000000 		.4byte	.LFB5
 1330 003c 20000000 		.4byte	.LFE5-.LFB5
 1331 0040 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 40


 1332 0044 1A000000 		.4byte	.LFE6-.LFB6
 1333 0048 00000000 		.4byte	.LFB7
 1334 004c 20000000 		.4byte	.LFE7-.LFB7
 1335 0050 00000000 		.4byte	.LFB8
 1336 0054 20000000 		.4byte	.LFE8-.LFB8
 1337 0058 00000000 		.4byte	.LFB9
 1338 005c 20000000 		.4byte	.LFE9-.LFB9
 1339 0060 00000000 		.4byte	.LFB10
 1340 0064 18000000 		.4byte	.LFE10-.LFB10
 1341 0068 00000000 		.4byte	.LFB11
 1342 006c 20000000 		.4byte	.LFE11-.LFB11
 1343 0070 00000000 		.4byte	.LFB12
 1344 0074 20000000 		.4byte	.LFE12-.LFB12
 1345 0078 00000000 		.4byte	.LFB13
 1346 007c 18000000 		.4byte	.LFE13-.LFB13
 1347 0080 00000000 		.4byte	.LFB14
 1348 0084 18000000 		.4byte	.LFE14-.LFB14
 1349 0088 00000000 		.4byte	.LFB15
 1350 008c 18000000 		.4byte	.LFE15-.LFB15
 1351 0090 00000000 		.4byte	0
 1352 0094 00000000 		.4byte	0
 1353              		.section	.debug_ranges,"",%progbits
 1354              	.Ldebug_ranges0:
 1355 0000 00000000 		.4byte	.LFB0
 1356 0004 20000000 		.4byte	.LFE0
 1357 0008 00000000 		.4byte	.LFB1
 1358 000c 90000000 		.4byte	.LFE1
 1359 0010 00000000 		.4byte	.LFB2
 1360 0014 20000000 		.4byte	.LFE2
 1361 0018 00000000 		.4byte	.LFB3
 1362 001c 20000000 		.4byte	.LFE3
 1363 0020 00000000 		.4byte	.LFB4
 1364 0024 20000000 		.4byte	.LFE4
 1365 0028 00000000 		.4byte	.LFB5
 1366 002c 20000000 		.4byte	.LFE5
 1367 0030 00000000 		.4byte	.LFB6
 1368 0034 1A000000 		.4byte	.LFE6
 1369 0038 00000000 		.4byte	.LFB7
 1370 003c 20000000 		.4byte	.LFE7
 1371 0040 00000000 		.4byte	.LFB8
 1372 0044 20000000 		.4byte	.LFE8
 1373 0048 00000000 		.4byte	.LFB9
 1374 004c 20000000 		.4byte	.LFE9
 1375 0050 00000000 		.4byte	.LFB10
 1376 0054 18000000 		.4byte	.LFE10
 1377 0058 00000000 		.4byte	.LFB11
 1378 005c 20000000 		.4byte	.LFE11
 1379 0060 00000000 		.4byte	.LFB12
 1380 0064 20000000 		.4byte	.LFE12
 1381 0068 00000000 		.4byte	.LFB13
 1382 006c 18000000 		.4byte	.LFE13
 1383 0070 00000000 		.4byte	.LFB14
 1384 0074 18000000 		.4byte	.LFE14
 1385 0078 00000000 		.4byte	.LFB15
 1386 007c 18000000 		.4byte	.LFE15
 1387 0080 00000000 		.4byte	0
 1388 0084 00000000 		.4byte	0
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 41


 1389              		.section	.debug_line,"",%progbits
 1390              	.Ldebug_line0:
 1391 0000 89010000 		.section	.debug_str,"MS",%progbits,1
 1391      02004200 
 1391      00000201 
 1391      FB0E0D00 
 1391      01010101 
 1392              	.LASF15:
 1393 0000 72656731 		.ascii	"reg16\000"
 1393      3600
 1394              	.LASF24:
 1395 0006 41726D5F 		.ascii	"Arm_ClearFIFO\000"
 1395      436C6561 
 1395      72464946 
 1395      4F00
 1396              	.LASF39:
 1397 0014 41726D5F 		.ascii	"Arm_ReadPeriod\000"
 1397      52656164 
 1397      50657269 
 1397      6F6400
 1398              	.LASF30:
 1399 0023 41726D5F 		.ascii	"Arm_SetInterruptMode\000"
 1399      53657449 
 1399      6E746572 
 1399      72757074 
 1399      4D6F6465 
 1400              	.LASF27:
 1401 0038 70657269 		.ascii	"period\000"
 1401      6F6400
 1402              	.LASF3:
 1403 003f 73686F72 		.ascii	"short unsigned int\000"
 1403      7420756E 
 1403      7369676E 
 1403      65642069 
 1403      6E7400
 1404              	.LASF43:
 1405 0052 41726D5F 		.ascii	"Arm_ReadControlRegister\000"
 1405      52656164 
 1405      436F6E74 
 1405      726F6C52 
 1405      65676973 
 1406              	.LASF21:
 1407 006a 41726D5F 		.ascii	"Arm_Stop\000"
 1407      53746F70 
 1407      00
 1408              	.LASF28:
 1409 0073 41726D5F 		.ascii	"Arm_WriteCompare\000"
 1409      57726974 
 1409      65436F6D 
 1409      70617265 
 1409      00
 1410              	.LASF11:
 1411 0084 666C6F61 		.ascii	"float\000"
 1411      7400
 1412              	.LASF26:
 1413 008a 636F756E 		.ascii	"counter\000"
 1413      74657200 
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 42


 1414              	.LASF38:
 1415 0092 41726D5F 		.ascii	"Arm_ReadCompare\000"
 1415      52656164 
 1415      436F6D70 
 1415      61726500 
 1416              	.LASF14:
 1417 00a2 72656738 		.ascii	"reg8\000"
 1417      00
 1418              	.LASF5:
 1419 00a7 6C6F6E67 		.ascii	"long unsigned int\000"
 1419      20756E73 
 1419      69676E65 
 1419      6420696E 
 1419      7400
 1420              	.LASF37:
 1421 00b9 41726D5F 		.ascii	"Arm_ReadCapture\000"
 1421      52656164 
 1421      43617074 
 1421      75726500 
 1422              	.LASF9:
 1423 00c9 75696E74 		.ascii	"uint8\000"
 1423      3800
 1424              	.LASF36:
 1425 00cf 636F6E74 		.ascii	"control\000"
 1425      726F6C00 
 1426              	.LASF20:
 1427 00d7 41726D5F 		.ascii	"Arm_Enable\000"
 1427      456E6162 
 1427      6C6500
 1428              	.LASF1:
 1429 00e2 756E7369 		.ascii	"unsigned char\000"
 1429      676E6564 
 1429      20636861 
 1429      7200
 1430              	.LASF12:
 1431 00f0 646F7562 		.ascii	"double\000"
 1431      6C6500
 1432              	.LASF41:
 1433 00f7 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Arm.c\000"
 1433      6E657261 
 1433      7465645F 
 1433      536F7572 
 1433      63655C50 
 1434              	.LASF2:
 1435 0116 73686F72 		.ascii	"short int\000"
 1435      7420696E 
 1435      7400
 1436              	.LASF42:
 1437 0120 5C5C6164 		.ascii	"\\\\ad.monash.edu\\home\\User012\\jhana1\\Documents"
 1437      2E6D6F6E 
 1437      6173682E 
 1437      6564755C 
 1437      686F6D65 
 1438 014d 5C63616D 		.ascii	"\\camera_test.cydsn\\camera_test.cydsn\000"
 1438      6572615F 
 1438      74657374 
 1438      2E637964 
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 43


 1438      736E5C63 
 1439              	.LASF10:
 1440 0172 75696E74 		.ascii	"uint16\000"
 1440      313600
 1441              	.LASF8:
 1442 0179 756E7369 		.ascii	"unsigned int\000"
 1442      676E6564 
 1442      20696E74 
 1442      00
 1443              	.LASF23:
 1444 0186 41726D5F 		.ascii	"Arm_WriteCounter\000"
 1444      57726974 
 1444      65436F75 
 1444      6E746572 
 1444      00
 1445              	.LASF7:
 1446 0197 6C6F6E67 		.ascii	"long long unsigned int\000"
 1446      206C6F6E 
 1446      6720756E 
 1446      7369676E 
 1446      65642069 
 1447              	.LASF34:
 1448 01ae 72657375 		.ascii	"result\000"
 1448      6C7400
 1449              	.LASF19:
 1450 01b5 41726D5F 		.ascii	"Arm_Start\000"
 1450      53746172 
 1450      7400
 1451              	.LASF40:
 1452 01bf 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1452      4320342E 
 1452      382E3420 
 1452      32303134 
 1452      30353236 
 1453 01f2 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1453      20726576 
 1453      6973696F 
 1453      6E203231 
 1453      31333538 
 1454 0225 30202D66 		.ascii	"0 -ffunction-sections\000"
 1454      66756E63 
 1454      74696F6E 
 1454      2D736563 
 1454      74696F6E 
 1455              	.LASF32:
 1456 023b 41726D5F 		.ascii	"Arm_ReadCounter\000"
 1456      52656164 
 1456      436F756E 
 1456      74657200 
 1457              	.LASF17:
 1458 024b 6374726C 		.ascii	"ctrl\000"
 1458      00
 1459              	.LASF35:
 1460 0250 41726D5F 		.ascii	"Arm_WriteControlRegister\000"
 1460      57726974 
 1460      65436F6E 
 1460      74726F6C 
ARM GAS  C:\Users\jhana1\AppData\Local\Temp\cc2DQ3Qh.s 			page 44


 1460      52656769 
 1461              	.LASF16:
 1462 0269 73697A65 		.ascii	"sizetype\000"
 1462      74797065 
 1462      00
 1463              	.LASF6:
 1464 0272 6C6F6E67 		.ascii	"long long int\000"
 1464      206C6F6E 
 1464      6720696E 
 1464      7400
 1465              	.LASF31:
 1466 0280 696E7465 		.ascii	"interruptMode\000"
 1466      72727570 
 1466      744D6F64 
 1466      6500
 1467              	.LASF44:
 1468 028e 41726D5F 		.ascii	"Arm_initVar\000"
 1468      696E6974 
 1468      56617200 
 1469              	.LASF18:
 1470 029a 41726D5F 		.ascii	"Arm_interruptState\000"
 1470      696E7465 
 1470      72727570 
 1470      74537461 
 1470      746500
 1471              	.LASF25:
 1472 02ad 41726D5F 		.ascii	"Arm_WritePeriod\000"
 1472      57726974 
 1472      65506572 
 1472      696F6400 
 1473              	.LASF22:
 1474 02bd 41726D5F 		.ascii	"Arm_Init\000"
 1474      496E6974 
 1474      00
 1475              	.LASF4:
 1476 02c6 6C6F6E67 		.ascii	"long int\000"
 1476      20696E74 
 1476      00
 1477              	.LASF13:
 1478 02cf 63686172 		.ascii	"char\000"
 1478      00
 1479              	.LASF0:
 1480 02d4 7369676E 		.ascii	"signed char\000"
 1480      65642063 
 1480      68617200 
 1481              	.LASF29:
 1482 02e0 636F6D70 		.ascii	"compare\000"
 1482      61726500 
 1483              	.LASF33:
 1484 02e8 41726D5F 		.ascii	"Arm_ReadStatusRegister\000"
 1484      52656164 
 1484      53746174 
 1484      75735265 
 1484      67697374 
 1485              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
