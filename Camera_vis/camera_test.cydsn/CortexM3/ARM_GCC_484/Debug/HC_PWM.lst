ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"HC_PWM.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	HC_PWM_initVar
  19              		.bss
  20              		.type	HC_PWM_initVar, %object
  21              		.size	HC_PWM_initVar, 1
  22              	HC_PWM_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.HC_PWM_Start,"ax",%progbits
  25              		.align	2
  26              		.global	HC_PWM_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	HC_PWM_Start, %function
  30              	HC_PWM_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\HC_PWM.c"
   1:.\Generated_Source\PSoC5/HC_PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/HC_PWM.c **** * File Name: HC_PWM.c
   3:.\Generated_Source\PSoC5/HC_PWM.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/HC_PWM.c **** *
   5:.\Generated_Source\PSoC5/HC_PWM.c **** * Description:
   6:.\Generated_Source\PSoC5/HC_PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/HC_PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/HC_PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/HC_PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/HC_PWM.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/HC_PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/HC_PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/HC_PWM.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/HC_PWM.c **** *
  15:.\Generated_Source\PSoC5/HC_PWM.c **** * Note:
  16:.\Generated_Source\PSoC5/HC_PWM.c **** *
  17:.\Generated_Source\PSoC5/HC_PWM.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/HC_PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/HC_PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/HC_PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/HC_PWM.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/HC_PWM.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/HC_PWM.c **** 
  24:.\Generated_Source\PSoC5/HC_PWM.c **** #include "HC_PWM.h"
  25:.\Generated_Source\PSoC5/HC_PWM.c **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 2


  26:.\Generated_Source\PSoC5/HC_PWM.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/HC_PWM.c **** #ifdef HC_PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/HC_PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/HC_PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* HC_PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/HC_PWM.c **** 
  32:.\Generated_Source\PSoC5/HC_PWM.c **** uint8 HC_PWM_initVar = 0u;
  33:.\Generated_Source\PSoC5/HC_PWM.c **** 
  34:.\Generated_Source\PSoC5/HC_PWM.c **** 
  35:.\Generated_Source\PSoC5/HC_PWM.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/HC_PWM.c **** * Function Name: HC_PWM_Start
  37:.\Generated_Source\PSoC5/HC_PWM.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/HC_PWM.c **** *
  39:.\Generated_Source\PSoC5/HC_PWM.c **** * Summary:
  40:.\Generated_Source\PSoC5/HC_PWM.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/HC_PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/HC_PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/HC_PWM.c **** *
  44:.\Generated_Source\PSoC5/HC_PWM.c **** * Parameters:
  45:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
  46:.\Generated_Source\PSoC5/HC_PWM.c **** *
  47:.\Generated_Source\PSoC5/HC_PWM.c **** * Return:
  48:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
  49:.\Generated_Source\PSoC5/HC_PWM.c **** *
  50:.\Generated_Source\PSoC5/HC_PWM.c **** * Global variables:
  51:.\Generated_Source\PSoC5/HC_PWM.c **** *  HC_PWM_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/HC_PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/HC_PWM.c **** *
  54:.\Generated_Source\PSoC5/HC_PWM.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/HC_PWM.c **** void HC_PWM_Start(void) 
  56:.\Generated_Source\PSoC5/HC_PWM.c **** {
  33              		.loc 1 56 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC5/HC_PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/HC_PWM.c ****     if(HC_PWM_initVar == 0u)
  43              		.loc 1 58 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC5/HC_PWM.c ****     {
  60:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_Init();
  48              		.loc 1 60 0
  49 000c FFF7FEFF 		bl	HC_PWM_Init
  61:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_initVar = 1u;
  50              		.loc 1 61 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 3


  54              	.L2:
  62:.\Generated_Source\PSoC5/HC_PWM.c ****     }
  63:.\Generated_Source\PSoC5/HC_PWM.c ****     HC_PWM_Enable();
  55              		.loc 1 63 0
  56 0016 FFF7FEFF 		bl	HC_PWM_Enable
  64:.\Generated_Source\PSoC5/HC_PWM.c **** 
  65:.\Generated_Source\PSoC5/HC_PWM.c **** }
  57              		.loc 1 65 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	HC_PWM_initVar
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	HC_PWM_Start, .-HC_PWM_Start
  66              		.section	.text.HC_PWM_Init,"ax",%progbits
  67              		.align	2
  68              		.global	HC_PWM_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	HC_PWM_Init, %function
  72              	HC_PWM_Init:
  73              	.LFB1:
  66:.\Generated_Source\PSoC5/HC_PWM.c **** 
  67:.\Generated_Source\PSoC5/HC_PWM.c **** 
  68:.\Generated_Source\PSoC5/HC_PWM.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/HC_PWM.c **** * Function Name: HC_PWM_Init
  70:.\Generated_Source\PSoC5/HC_PWM.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/HC_PWM.c **** *
  72:.\Generated_Source\PSoC5/HC_PWM.c **** * Summary:
  73:.\Generated_Source\PSoC5/HC_PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/HC_PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/HC_PWM.c **** *  HC_PWM_Start().
  76:.\Generated_Source\PSoC5/HC_PWM.c **** *
  77:.\Generated_Source\PSoC5/HC_PWM.c **** * Parameters:
  78:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
  79:.\Generated_Source\PSoC5/HC_PWM.c **** *
  80:.\Generated_Source\PSoC5/HC_PWM.c **** * Return:
  81:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
  82:.\Generated_Source\PSoC5/HC_PWM.c **** *
  83:.\Generated_Source\PSoC5/HC_PWM.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/HC_PWM.c **** void HC_PWM_Init(void) 
  85:.\Generated_Source\PSoC5/HC_PWM.c **** {
  74              		.loc 1 85 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 82B0     		sub	sp, sp, #8
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UsingFixedFunction || HC_PWM_UseControl)
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 4


  87:.\Generated_Source\PSoC5/HC_PWM.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UsingFixedFunction || HC_PWM_UseControl) */
  89:.\Generated_Source\PSoC5/HC_PWM.c **** 
  90:.\Generated_Source\PSoC5/HC_PWM.c ****     #if(!HC_PWM_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(HC_PWM_UseStatus)
  92:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/HC_PWM.c ****             uint8 HC_PWM_interruptState;
  94:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UseStatus) */
  95:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (!HC_PWM_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/HC_PWM.c **** 
  97:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/HC_PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_CONTROL |= HC_PWM_CFG0_MODE;
 100:.\Generated_Source\PSoC5/HC_PWM.c ****         #if (HC_PWM_DeadBand2_4)
 101:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_CONTROL |= HC_PWM_CFG0_DB;
 102:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/HC_PWM.c **** 
 104:.\Generated_Source\PSoC5/HC_PWM.c ****         ctrl = HC_PWM_CONTROL3 & ((uint8 )(~HC_PWM_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_CONTROL3 = ctrl | HC_PWM_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/HC_PWM.c **** 
 107:.\Generated_Source\PSoC5/HC_PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_RT1 &= ((uint8)(~HC_PWM_RT1_MASK));
 109:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_RT1 |= HC_PWM_SYNC;
 110:.\Generated_Source\PSoC5/HC_PWM.c **** 
 111:.\Generated_Source\PSoC5/HC_PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_RT1 &= ((uint8)(~HC_PWM_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_RT1 |= HC_PWM_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/HC_PWM.c **** 
 115:.\Generated_Source\PSoC5/HC_PWM.c ****     #elif (HC_PWM_UseControl)
 116:.\Generated_Source\PSoC5/HC_PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/HC_PWM.c ****         ctrl = HC_PWM_CONTROL & ((uint8)(~HC_PWM_CTRL_CMPMODE2_MASK)) &
  86              		.loc 1 117 0
  87 0006 224B     		ldr	r3, .L6
  88 0008 1B78     		ldrb	r3, [r3]
  89 000a DBB2     		uxtb	r3, r3
  90 000c 23F03F03 		bic	r3, r3, #63
  91 0010 FB71     		strb	r3, [r7, #7]
 118:.\Generated_Source\PSoC5/HC_PWM.c ****                 ((uint8)(~HC_PWM_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_CONTROL = ctrl | HC_PWM_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0012 1F4B     		ldr	r3, .L6
  94 0014 FA79     		ldrb	r2, [r7, #7]
  95 0016 42F00C02 		orr	r2, r2, #12
  96 001a D2B2     		uxtb	r2, r2
  97 001c 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC5/HC_PWM.c ****                                    HC_PWM_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/HC_PWM.c **** 
 123:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (!HC_PWM_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/HC_PWM.c ****         #if (HC_PWM_Resolution == 8)
 125:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_AUX_CONTROLDP0 |= (HC_PWM_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/HC_PWM.c ****         #else /* (HC_PWM_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_AUX_CONTROLDP0 |= (HC_PWM_AUX_CTRL_FIFO0_CLR);
  98              		.loc 1 129 0
  99 001e 1D4B     		ldr	r3, .L6+4
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 5


 100 0020 1C4A     		ldr	r2, .L6+4
 101 0022 1278     		ldrb	r2, [r2]
 102 0024 D2B2     		uxtb	r2, r2
 103 0026 42F00102 		orr	r2, r2, #1
 104 002a D2B2     		uxtb	r2, r2
 105 002c 1A70     		strb	r2, [r3]
 130:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_AUX_CONTROLDP1 |= (HC_PWM_AUX_CTRL_FIFO0_CLR);
 106              		.loc 1 130 0
 107 002e 1A4B     		ldr	r3, .L6+8
 108 0030 194A     		ldr	r2, .L6+8
 109 0032 1278     		ldrb	r2, [r2]
 110 0034 D2B2     		uxtb	r2, r2
 111 0036 42F00102 		orr	r2, r2, #1
 112 003a D2B2     		uxtb	r2, r2
 113 003c 1A70     		strb	r2, [r3]
 131:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_Resolution == 8) */
 132:.\Generated_Source\PSoC5/HC_PWM.c **** 
 133:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_WriteCounter(HC_PWM_INIT_PERIOD_VALUE);
 114              		.loc 1 133 0
 115 003e 4CF24F30 		movw	r0, #49999
 116 0042 FFF7FEFF 		bl	HC_PWM_WriteCounter
 134:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (!HC_PWM_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/HC_PWM.c **** 
 136:.\Generated_Source\PSoC5/HC_PWM.c ****     HC_PWM_WritePeriod(HC_PWM_INIT_PERIOD_VALUE);
 117              		.loc 1 136 0
 118 0046 4CF24F30 		movw	r0, #49999
 119 004a FFF7FEFF 		bl	HC_PWM_WritePeriod
 137:.\Generated_Source\PSoC5/HC_PWM.c **** 
 138:.\Generated_Source\PSoC5/HC_PWM.c ****         #if (HC_PWM_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_WriteCompare(HC_PWM_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 141:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_WriteCompare1(HC_PWM_INIT_COMPARE_VALUE1);
 120              		.loc 1 141 0
 121 004e 4AF6B370 		movw	r0, #44979
 122 0052 FFF7FEFF 		bl	HC_PWM_WriteCompare1
 142:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_WriteCompare2(HC_PWM_INIT_COMPARE_VALUE2);
 123              		.loc 1 142 0
 124 0056 42F21070 		movw	r0, #10000
 125 005a FFF7FEFF 		bl	HC_PWM_WriteCompare2
 143:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/HC_PWM.c **** 
 145:.\Generated_Source\PSoC5/HC_PWM.c ****         #if (HC_PWM_KillModeMinTime)
 146:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_WriteKillTime(HC_PWM_MinimumKillTime);
 147:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/HC_PWM.c **** 
 149:.\Generated_Source\PSoC5/HC_PWM.c ****         #if (HC_PWM_DeadBandUsed)
 150:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_WriteDeadTime(HC_PWM_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/HC_PWM.c **** 
 153:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UseStatus || HC_PWM_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_SetInterruptMode(HC_PWM_INIT_INTERRUPTS_MODE);
 126              		.loc 1 154 0
 127 005e 0020     		movs	r0, #0
 128 0060 FFF7FEFF 		bl	HC_PWM_SetInterruptMode
 155:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UseStatus || HC_PWM_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/HC_PWM.c **** 
 157:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UsingFixedFunction)
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 6


 158:.\Generated_Source\PSoC5/HC_PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_GLOBAL_ENABLE |= HC_PWM_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/HC_PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_CONTROL2 |= HC_PWM_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/HC_PWM.c ****     #else
 163:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(HC_PWM_UseStatus)
 164:.\Generated_Source\PSoC5/HC_PWM.c **** 
 165:.\Generated_Source\PSoC5/HC_PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_interruptState = CyEnterCriticalSection();
 129              		.loc 1 167 0
 130 0064 FFF7FEFF 		bl	CyEnterCriticalSection
 131 0068 0346     		mov	r3, r0
 132 006a BB71     		strb	r3, [r7, #6]
 168:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_STATUS_AUX_CTRL |= HC_PWM_STATUS_ACTL_INT_EN_MASK;
 133              		.loc 1 169 0
 134 006c 0A4B     		ldr	r3, .L6+8
 135 006e 0A4A     		ldr	r2, .L6+8
 136 0070 1278     		ldrb	r2, [r2]
 137 0072 D2B2     		uxtb	r2, r2
 138 0074 42F01002 		orr	r2, r2, #16
 139 0078 D2B2     		uxtb	r2, r2
 140 007a 1A70     		strb	r2, [r3]
 170:.\Generated_Source\PSoC5/HC_PWM.c **** 
 171:.\Generated_Source\PSoC5/HC_PWM.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/HC_PWM.c ****             CyExitCriticalSection(HC_PWM_interruptState);
 141              		.loc 1 172 0
 142 007c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 143 007e 1846     		mov	r0, r3
 144 0080 FFF7FEFF 		bl	CyExitCriticalSection
 173:.\Generated_Source\PSoC5/HC_PWM.c **** 
 174:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Clear the FIFO to enable the HC_PWM_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/HC_PWM.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_ClearFIFO();
 145              		.loc 1 176 0
 146 0084 FFF7FEFF 		bl	HC_PWM_ClearFIFO
 177:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UseStatus) */
 178:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/HC_PWM.c **** }
 147              		.loc 1 179 0
 148 0088 0837     		adds	r7, r7, #8
 149 008a BD46     		mov	sp, r7
 150              		@ sp needed
 151 008c 80BD     		pop	{r7, pc}
 152              	.L7:
 153 008e 00BF     		.align	2
 154              	.L6:
 155 0090 75650040 		.word	1073767797
 156 0094 94650040 		.word	1073767828
 157 0098 95650040 		.word	1073767829
 158              		.cfi_endproc
 159              	.LFE1:
 160              		.size	HC_PWM_Init, .-HC_PWM_Init
 161              		.section	.text.HC_PWM_Enable,"ax",%progbits
 162              		.align	2
 163              		.global	HC_PWM_Enable
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 7


 164              		.thumb
 165              		.thumb_func
 166              		.type	HC_PWM_Enable, %function
 167              	HC_PWM_Enable:
 168              	.LFB2:
 180:.\Generated_Source\PSoC5/HC_PWM.c **** 
 181:.\Generated_Source\PSoC5/HC_PWM.c **** 
 182:.\Generated_Source\PSoC5/HC_PWM.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/HC_PWM.c **** * Function Name: HC_PWM_Enable
 184:.\Generated_Source\PSoC5/HC_PWM.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/HC_PWM.c **** *
 186:.\Generated_Source\PSoC5/HC_PWM.c **** * Summary:
 187:.\Generated_Source\PSoC5/HC_PWM.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/HC_PWM.c **** *
 189:.\Generated_Source\PSoC5/HC_PWM.c **** * Parameters:
 190:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
 191:.\Generated_Source\PSoC5/HC_PWM.c **** *
 192:.\Generated_Source\PSoC5/HC_PWM.c **** * Return:
 193:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
 194:.\Generated_Source\PSoC5/HC_PWM.c **** *
 195:.\Generated_Source\PSoC5/HC_PWM.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/HC_PWM.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/HC_PWM.c **** *
 198:.\Generated_Source\PSoC5/HC_PWM.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/HC_PWM.c **** void HC_PWM_Enable(void) 
 200:.\Generated_Source\PSoC5/HC_PWM.c **** {
 169              		.loc 1 200 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 80B4     		push	{r7}
 175              		.cfi_def_cfa_offset 4
 176              		.cfi_offset 7, -4
 177 0002 00AF     		add	r7, sp, #0
 178              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC5/HC_PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_GLOBAL_ENABLE |= HC_PWM_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_GLOBAL_STBY_ENABLE |= HC_PWM_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/HC_PWM.c **** 
 207:.\Generated_Source\PSoC5/HC_PWM.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UseControl || HC_PWM_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_CONTROL |= HC_PWM_CTRL_ENABLE;
 179              		.loc 1 209 0
 180 0004 054B     		ldr	r3, .L9
 181 0006 054A     		ldr	r2, .L9
 182 0008 1278     		ldrb	r2, [r2]
 183 000a D2B2     		uxtb	r2, r2
 184 000c 62F07F02 		orn	r2, r2, #127
 185 0010 D2B2     		uxtb	r2, r2
 186 0012 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UseControl || HC_PWM_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/HC_PWM.c **** }
 187              		.loc 1 211 0
 188 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 8


 189              		@ sp needed
 190 0016 5DF8047B 		ldr	r7, [sp], #4
 191 001a 7047     		bx	lr
 192              	.L10:
 193              		.align	2
 194              	.L9:
 195 001c 75650040 		.word	1073767797
 196              		.cfi_endproc
 197              	.LFE2:
 198              		.size	HC_PWM_Enable, .-HC_PWM_Enable
 199              		.section	.text.HC_PWM_Stop,"ax",%progbits
 200              		.align	2
 201              		.global	HC_PWM_Stop
 202              		.thumb
 203              		.thumb_func
 204              		.type	HC_PWM_Stop, %function
 205              	HC_PWM_Stop:
 206              	.LFB3:
 212:.\Generated_Source\PSoC5/HC_PWM.c **** 
 213:.\Generated_Source\PSoC5/HC_PWM.c **** 
 214:.\Generated_Source\PSoC5/HC_PWM.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/HC_PWM.c **** * Function Name: HC_PWM_Stop
 216:.\Generated_Source\PSoC5/HC_PWM.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/HC_PWM.c **** *
 218:.\Generated_Source\PSoC5/HC_PWM.c **** * Summary:
 219:.\Generated_Source\PSoC5/HC_PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/HC_PWM.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/HC_PWM.c **** *
 222:.\Generated_Source\PSoC5/HC_PWM.c **** * Parameters:
 223:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
 224:.\Generated_Source\PSoC5/HC_PWM.c **** *
 225:.\Generated_Source\PSoC5/HC_PWM.c **** * Return:
 226:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
 227:.\Generated_Source\PSoC5/HC_PWM.c **** *
 228:.\Generated_Source\PSoC5/HC_PWM.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/HC_PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/HC_PWM.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/HC_PWM.c **** *
 232:.\Generated_Source\PSoC5/HC_PWM.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/HC_PWM.c **** void HC_PWM_Stop(void) 
 234:.\Generated_Source\PSoC5/HC_PWM.c **** {
 207              		.loc 1 234 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 1, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 212 0000 80B4     		push	{r7}
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 7, -4
 215 0002 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UseControl || HC_PWM_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_CONTROL &= ((uint8)(~HC_PWM_CTRL_ENABLE));
 217              		.loc 1 236 0
 218 0004 054B     		ldr	r3, .L12
 219 0006 054A     		ldr	r2, .L12
 220 0008 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 9


 221 000a D2B2     		uxtb	r2, r2
 222 000c 02F07F02 		and	r2, r2, #127
 223 0010 D2B2     		uxtb	r2, r2
 224 0012 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UseControl || HC_PWM_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/HC_PWM.c **** 
 239:.\Generated_Source\PSoC5/HC_PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_GLOBAL_ENABLE &= ((uint8)(~HC_PWM_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/HC_PWM.c ****         HC_PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~HC_PWM_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/HC_PWM.c **** }
 225              		.loc 1 244 0
 226 0014 BD46     		mov	sp, r7
 227              		@ sp needed
 228 0016 5DF8047B 		ldr	r7, [sp], #4
 229 001a 7047     		bx	lr
 230              	.L13:
 231              		.align	2
 232              	.L12:
 233 001c 75650040 		.word	1073767797
 234              		.cfi_endproc
 235              	.LFE3:
 236              		.size	HC_PWM_Stop, .-HC_PWM_Stop
 237              		.section	.text.HC_PWM_WriteCounter,"ax",%progbits
 238              		.align	2
 239              		.global	HC_PWM_WriteCounter
 240              		.thumb
 241              		.thumb_func
 242              		.type	HC_PWM_WriteCounter, %function
 243              	HC_PWM_WriteCounter:
 244              	.LFB4:
 245:.\Generated_Source\PSoC5/HC_PWM.c **** 
 246:.\Generated_Source\PSoC5/HC_PWM.c **** #if (HC_PWM_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_CompareMode1SW)
 248:.\Generated_Source\PSoC5/HC_PWM.c **** 
 249:.\Generated_Source\PSoC5/HC_PWM.c **** 
 250:.\Generated_Source\PSoC5/HC_PWM.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/HC_PWM.c ****         * Function Name: HC_PWM_SetCompareMode
 252:.\Generated_Source\PSoC5/HC_PWM.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 254:.\Generated_Source\PSoC5/HC_PWM.c ****         * Summary:
 255:.\Generated_Source\PSoC5/HC_PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/HC_PWM.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 258:.\Generated_Source\PSoC5/HC_PWM.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/HC_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/HC_PWM.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 262:.\Generated_Source\PSoC5/HC_PWM.c ****         * Return:
 263:.\Generated_Source\PSoC5/HC_PWM.c ****         *  None
 264:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 265:.\Generated_Source\PSoC5/HC_PWM.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/HC_PWM.c ****         void HC_PWM_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/HC_PWM.c ****         {
 268:.\Generated_Source\PSoC5/HC_PWM.c ****             #if(HC_PWM_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/HC_PWM.c **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 10


 270:.\Generated_Source\PSoC5/HC_PWM.c ****                 #if(0 != HC_PWM_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/HC_PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << HC_PWM_CTRL_CMPMODE1_S
 272:.\Generated_Source\PSoC5/HC_PWM.c ****                 #else
 273:.\Generated_Source\PSoC5/HC_PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/HC_PWM.c ****                 #endif /* (0 != HC_PWM_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/HC_PWM.c **** 
 276:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_CONTROL3 &= ((uint8)(~HC_PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/HC_PWM.c **** 
 279:.\Generated_Source\PSoC5/HC_PWM.c ****             #elif (HC_PWM_UseControl)
 280:.\Generated_Source\PSoC5/HC_PWM.c **** 
 281:.\Generated_Source\PSoC5/HC_PWM.c ****                 #if(0 != HC_PWM_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/HC_PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << HC_PWM_CTRL_CMPMODE1_
 283:.\Generated_Source\PSoC5/HC_PWM.c ****                                                 HC_PWM_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/HC_PWM.c ****                 #else
 285:.\Generated_Source\PSoC5/HC_PWM.c ****                     uint8 comparemode1masked = comparemode & HC_PWM_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/HC_PWM.c ****                 #endif /* (0 != HC_PWM_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/HC_PWM.c **** 
 288:.\Generated_Source\PSoC5/HC_PWM.c ****                 #if(0 != HC_PWM_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/HC_PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << HC_PWM_CTRL_CMPMODE2_
 290:.\Generated_Source\PSoC5/HC_PWM.c ****                                                HC_PWM_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/HC_PWM.c ****                 #else
 292:.\Generated_Source\PSoC5/HC_PWM.c ****                     uint8 comparemode2masked = comparemode & HC_PWM_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/HC_PWM.c ****                 #endif /* (0 != HC_PWM_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/HC_PWM.c **** 
 295:.\Generated_Source\PSoC5/HC_PWM.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_CONTROL &= ((uint8)(~(HC_PWM_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/HC_PWM.c ****                                             HC_PWM_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/HC_PWM.c **** 
 300:.\Generated_Source\PSoC5/HC_PWM.c ****             #else
 301:.\Generated_Source\PSoC5/HC_PWM.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/HC_PWM.c ****             #endif /* (HC_PWM_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/HC_PWM.c ****         }
 304:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* HC_PWM_CompareMode1SW */
 305:.\Generated_Source\PSoC5/HC_PWM.c **** 
 306:.\Generated_Source\PSoC5/HC_PWM.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/HC_PWM.c **** 
 308:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_CompareMode1SW)
 309:.\Generated_Source\PSoC5/HC_PWM.c **** 
 310:.\Generated_Source\PSoC5/HC_PWM.c **** 
 311:.\Generated_Source\PSoC5/HC_PWM.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/HC_PWM.c ****         * Function Name: HC_PWM_SetCompareMode1
 313:.\Generated_Source\PSoC5/HC_PWM.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 315:.\Generated_Source\PSoC5/HC_PWM.c ****         * Summary:
 316:.\Generated_Source\PSoC5/HC_PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 318:.\Generated_Source\PSoC5/HC_PWM.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/HC_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/HC_PWM.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 322:.\Generated_Source\PSoC5/HC_PWM.c ****         * Return:
 323:.\Generated_Source\PSoC5/HC_PWM.c ****         *  None
 324:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 325:.\Generated_Source\PSoC5/HC_PWM.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/HC_PWM.c ****         void HC_PWM_SetCompareMode1(uint8 comparemode) 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 11


 327:.\Generated_Source\PSoC5/HC_PWM.c ****         {
 328:.\Generated_Source\PSoC5/HC_PWM.c ****             #if(0 != HC_PWM_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/HC_PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << HC_PWM_CTRL_CMPMODE1_SHIFT
 330:.\Generated_Source\PSoC5/HC_PWM.c ****                                            HC_PWM_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/HC_PWM.c ****             #else
 332:.\Generated_Source\PSoC5/HC_PWM.c ****                 uint8 comparemodemasked = comparemode & HC_PWM_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/HC_PWM.c ****             #endif /* (0 != HC_PWM_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/HC_PWM.c **** 
 335:.\Generated_Source\PSoC5/HC_PWM.c ****             #if (HC_PWM_UseControl)
 336:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_CONTROL &= ((uint8)(~HC_PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/HC_PWM.c ****             #endif /* (HC_PWM_UseControl) */
 339:.\Generated_Source\PSoC5/HC_PWM.c ****         }
 340:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* HC_PWM_CompareMode1SW */
 341:.\Generated_Source\PSoC5/HC_PWM.c **** 
 342:.\Generated_Source\PSoC5/HC_PWM.c **** #if (HC_PWM_CompareMode2SW)
 343:.\Generated_Source\PSoC5/HC_PWM.c **** 
 344:.\Generated_Source\PSoC5/HC_PWM.c **** 
 345:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_SetCompareMode2
 347:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 349:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 350:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 352:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/HC_PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/HC_PWM.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 356:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 357:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 358:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 359:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 362:.\Generated_Source\PSoC5/HC_PWM.c **** 
 363:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(0 != HC_PWM_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/HC_PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << HC_PWM_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC5/HC_PWM.c ****                                                  HC_PWM_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 367:.\Generated_Source\PSoC5/HC_PWM.c ****             uint8 comparemodemasked = comparemode & HC_PWM_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (0 != HC_PWM_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/HC_PWM.c **** 
 370:.\Generated_Source\PSoC5/HC_PWM.c ****         #if (HC_PWM_UseControl)
 371:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_CONTROL &= ((uint8)(~HC_PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UseControl) */
 374:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 375:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /*HC_PWM_CompareMode2SW */
 376:.\Generated_Source\PSoC5/HC_PWM.c **** 
 377:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/HC_PWM.c **** 
 379:.\Generated_Source\PSoC5/HC_PWM.c **** 
 380:.\Generated_Source\PSoC5/HC_PWM.c **** #if (!HC_PWM_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/HC_PWM.c **** 
 382:.\Generated_Source\PSoC5/HC_PWM.c **** 
 383:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 12


 384:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_WriteCounter
 385:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 387:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 388:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/HC_PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/HC_PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/HC_PWM.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 393:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/HC_PWM.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 396:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 397:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 398:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 399:.\Generated_Source\PSoC5/HC_PWM.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/HC_PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 402:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/HC_PWM.c ****                                        
 405:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 245              		.loc 1 405 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250 0000 80B4     		push	{r7}
 251              		.cfi_def_cfa_offset 4
 252              		.cfi_offset 7, -4
 253 0002 83B0     		sub	sp, sp, #12
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 257 0006 0346     		mov	r3, r0
 258 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 406:.\Generated_Source\PSoC5/HC_PWM.c ****         CY_SET_REG16(HC_PWM_COUNTER_LSB_PTR, counter);
 259              		.loc 1 406 0
 260 000a 044B     		ldr	r3, .L15
 261 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 262 000e 1A80     		strh	r2, [r3]	@ movhi
 407:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 263              		.loc 1 407 0
 264 0010 0C37     		adds	r7, r7, #12
 265 0012 BD46     		mov	sp, r7
 266              		@ sp needed
 267 0014 5DF8047B 		ldr	r7, [sp], #4
 268 0018 7047     		bx	lr
 269              	.L16:
 270 001a 00BF     		.align	2
 271              	.L15:
 272 001c 086A0040 		.word	1073768968
 273              		.cfi_endproc
 274              	.LFE4:
 275              		.size	HC_PWM_WriteCounter, .-HC_PWM_WriteCounter
 276              		.section	.text.HC_PWM_ReadCounter,"ax",%progbits
 277              		.align	2
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 13


 278              		.global	HC_PWM_ReadCounter
 279              		.thumb
 280              		.thumb_func
 281              		.type	HC_PWM_ReadCounter, %function
 282              	HC_PWM_ReadCounter:
 283              	.LFB5:
 408:.\Generated_Source\PSoC5/HC_PWM.c **** 
 409:.\Generated_Source\PSoC5/HC_PWM.c **** 
 410:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadCounter
 412:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 414:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 415:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/HC_PWM.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 418:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 420:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 421:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 422:.\Generated_Source\PSoC5/HC_PWM.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 424:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/HC_PWM.c ****     uint16 HC_PWM_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 284              		.loc 1 426 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289 0000 80B4     		push	{r7}
 290              		.cfi_def_cfa_offset 4
 291              		.cfi_offset 7, -4
 292 0002 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC5/HC_PWM.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/HC_PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/HC_PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/HC_PWM.c ****           (void)CY_GET_REG8(HC_PWM_COUNTERCAP_LSB_PTR_8BIT);
 294              		.loc 1 430 0
 295 0004 044B     		ldr	r3, .L19
 296 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC5/HC_PWM.c **** 
 432:.\Generated_Source\PSoC5/HC_PWM.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/HC_PWM.c ****         return (CY_GET_REG16(HC_PWM_CAPTURE_LSB_PTR));
 297              		.loc 1 433 0
 298 0008 044B     		ldr	r3, .L19+4
 299 000a 1B88     		ldrh	r3, [r3]	@ movhi
 300 000c 9BB2     		uxth	r3, r3
 434:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 301              		.loc 1 434 0
 302 000e 1846     		mov	r0, r3
 303 0010 BD46     		mov	sp, r7
 304              		@ sp needed
 305 0012 5DF8047B 		ldr	r7, [sp], #4
 306 0016 7047     		bx	lr
 307              	.L20:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 14


 308              		.align	2
 309              	.L19:
 310 0018 14650040 		.word	1073767700
 311 001c A86A0040 		.word	1073769128
 312              		.cfi_endproc
 313              	.LFE5:
 314              		.size	HC_PWM_ReadCounter, .-HC_PWM_ReadCounter
 315              		.section	.text.HC_PWM_ClearFIFO,"ax",%progbits
 316              		.align	2
 317              		.global	HC_PWM_ClearFIFO
 318              		.thumb
 319              		.thumb_func
 320              		.type	HC_PWM_ClearFIFO, %function
 321              	HC_PWM_ClearFIFO:
 322              	.LFB6:
 435:.\Generated_Source\PSoC5/HC_PWM.c **** 
 436:.\Generated_Source\PSoC5/HC_PWM.c ****     #if (HC_PWM_UseStatus)
 437:.\Generated_Source\PSoC5/HC_PWM.c **** 
 438:.\Generated_Source\PSoC5/HC_PWM.c **** 
 439:.\Generated_Source\PSoC5/HC_PWM.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/HC_PWM.c ****         * Function Name: HC_PWM_ClearFIFO
 441:.\Generated_Source\PSoC5/HC_PWM.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 443:.\Generated_Source\PSoC5/HC_PWM.c ****         * Summary:
 444:.\Generated_Source\PSoC5/HC_PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 446:.\Generated_Source\PSoC5/HC_PWM.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/HC_PWM.c ****         *  None
 448:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 449:.\Generated_Source\PSoC5/HC_PWM.c ****         * Return:
 450:.\Generated_Source\PSoC5/HC_PWM.c ****         *  None
 451:.\Generated_Source\PSoC5/HC_PWM.c ****         *
 452:.\Generated_Source\PSoC5/HC_PWM.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/HC_PWM.c ****         void HC_PWM_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/HC_PWM.c ****         {
 323              		.loc 1 454 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327 0000 80B5     		push	{r7, lr}
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 7, -8
 330              		.cfi_offset 14, -4
 331 0002 00AF     		add	r7, sp, #0
 332              		.cfi_def_cfa_register 7
 455:.\Generated_Source\PSoC5/HC_PWM.c ****             while(0u != (HC_PWM_ReadStatusRegister() & HC_PWM_STATUS_FIFONEMPTY))
 333              		.loc 1 455 0
 334 0004 01E0     		b	.L22
 335              	.L23:
 456:.\Generated_Source\PSoC5/HC_PWM.c ****             {
 457:.\Generated_Source\PSoC5/HC_PWM.c ****                 (void)HC_PWM_ReadCapture();
 336              		.loc 1 457 0
 337 0006 FFF7FEFF 		bl	HC_PWM_ReadCapture
 338              	.L22:
 455:.\Generated_Source\PSoC5/HC_PWM.c ****             while(0u != (HC_PWM_ReadStatusRegister() & HC_PWM_STATUS_FIFONEMPTY))
 339              		.loc 1 455 0 discriminator 1
 340 000a FFF7FEFF 		bl	HC_PWM_ReadStatusRegister
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 15


 341 000e 0346     		mov	r3, r0
 342 0010 03F01003 		and	r3, r3, #16
 343 0014 002B     		cmp	r3, #0
 344 0016 F6D1     		bne	.L23
 458:.\Generated_Source\PSoC5/HC_PWM.c ****             }
 459:.\Generated_Source\PSoC5/HC_PWM.c ****         }
 345              		.loc 1 459 0
 346 0018 80BD     		pop	{r7, pc}
 347              		.cfi_endproc
 348              	.LFE6:
 349              		.size	HC_PWM_ClearFIFO, .-HC_PWM_ClearFIFO
 350 001a 00BF     		.section	.text.HC_PWM_WritePeriod,"ax",%progbits
 351              		.align	2
 352              		.global	HC_PWM_WritePeriod
 353              		.thumb
 354              		.thumb_func
 355              		.type	HC_PWM_WritePeriod, %function
 356              	HC_PWM_WritePeriod:
 357              	.LFB7:
 460:.\Generated_Source\PSoC5/HC_PWM.c **** 
 461:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* HC_PWM_UseStatus */
 462:.\Generated_Source\PSoC5/HC_PWM.c **** 
 463:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* !HC_PWM_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/HC_PWM.c **** 
 465:.\Generated_Source\PSoC5/HC_PWM.c **** 
 466:.\Generated_Source\PSoC5/HC_PWM.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/HC_PWM.c **** * Function Name: HC_PWM_WritePeriod
 468:.\Generated_Source\PSoC5/HC_PWM.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/HC_PWM.c **** *
 470:.\Generated_Source\PSoC5/HC_PWM.c **** * Summary:
 471:.\Generated_Source\PSoC5/HC_PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/HC_PWM.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/HC_PWM.c **** *
 474:.\Generated_Source\PSoC5/HC_PWM.c **** * Parameters:
 475:.\Generated_Source\PSoC5/HC_PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/HC_PWM.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/HC_PWM.c **** *
 478:.\Generated_Source\PSoC5/HC_PWM.c **** * Return:
 479:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
 480:.\Generated_Source\PSoC5/HC_PWM.c **** *
 481:.\Generated_Source\PSoC5/HC_PWM.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/HC_PWM.c **** void HC_PWM_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/HC_PWM.c **** {
 358              		.loc 1 483 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 8
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 363 0000 80B4     		push	{r7}
 364              		.cfi_def_cfa_offset 4
 365              		.cfi_offset 7, -4
 366 0002 83B0     		sub	sp, sp, #12
 367              		.cfi_def_cfa_offset 16
 368 0004 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
 370 0006 0346     		mov	r3, r0
 371 0008 FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 16


 484:.\Generated_Source\PSoC5/HC_PWM.c ****     #if(HC_PWM_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/HC_PWM.c ****         CY_SET_REG16(HC_PWM_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/HC_PWM.c ****     #else
 487:.\Generated_Source\PSoC5/HC_PWM.c ****         CY_SET_REG16(HC_PWM_PERIOD_LSB_PTR, period);
 372              		.loc 1 487 0
 373 000a 044B     		ldr	r3, .L25
 374 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 375 000e 1A80     		strh	r2, [r3]	@ movhi
 488:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/HC_PWM.c **** }
 376              		.loc 1 489 0
 377 0010 0C37     		adds	r7, r7, #12
 378 0012 BD46     		mov	sp, r7
 379              		@ sp needed
 380 0014 5DF8047B 		ldr	r7, [sp], #4
 381 0018 7047     		bx	lr
 382              	.L26:
 383 001a 00BF     		.align	2
 384              	.L25:
 385 001c 886A0040 		.word	1073769096
 386              		.cfi_endproc
 387              	.LFE7:
 388              		.size	HC_PWM_WritePeriod, .-HC_PWM_WritePeriod
 389              		.section	.text.HC_PWM_WriteCompare1,"ax",%progbits
 390              		.align	2
 391              		.global	HC_PWM_WriteCompare1
 392              		.thumb
 393              		.thumb_func
 394              		.type	HC_PWM_WriteCompare1, %function
 395              	HC_PWM_WriteCompare1:
 396              	.LFB8:
 490:.\Generated_Source\PSoC5/HC_PWM.c **** 
 491:.\Generated_Source\PSoC5/HC_PWM.c **** #if (HC_PWM_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/HC_PWM.c **** 
 493:.\Generated_Source\PSoC5/HC_PWM.c **** 
 494:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_WriteCompare
 496:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 498:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 499:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/HC_PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/HC_PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/HC_PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 505:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/HC_PWM.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 508:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 509:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 510:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 511:.\Generated_Source\PSoC5/HC_PWM.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 515:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 17


 516:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/HC_PWM.c ****                                        
 518:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 519:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(HC_PWM_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/HC_PWM.c ****             CY_SET_REG16(HC_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 522:.\Generated_Source\PSoC5/HC_PWM.c ****             CY_SET_REG16(HC_PWM_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/HC_PWM.c **** 
 525:.\Generated_Source\PSoC5/HC_PWM.c ****         #if (HC_PWM_PWMMode == HC_PWM__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/HC_PWM.c ****             #if(HC_PWM_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/HC_PWM.c ****                 CY_SET_REG16(HC_PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/HC_PWM.c ****             #else
 529:.\Generated_Source\PSoC5/HC_PWM.c ****                 CY_SET_REG16(HC_PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/HC_PWM.c ****             #endif /* (HC_PWM_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_PWMMode == HC_PWM__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 533:.\Generated_Source\PSoC5/HC_PWM.c **** 
 534:.\Generated_Source\PSoC5/HC_PWM.c **** 
 535:.\Generated_Source\PSoC5/HC_PWM.c **** #else
 536:.\Generated_Source\PSoC5/HC_PWM.c **** 
 537:.\Generated_Source\PSoC5/HC_PWM.c **** 
 538:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_WriteCompare1
 540:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 542:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 543:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/HC_PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/HC_PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/HC_PWM.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 548:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/HC_PWM.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 551:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 552:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 553:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 554:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/HC_PWM.c ****                                         
 557:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 397              		.loc 1 557 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 8
 400              		@ frame_needed = 1, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 402 0000 80B4     		push	{r7}
 403              		.cfi_def_cfa_offset 4
 404              		.cfi_offset 7, -4
 405 0002 83B0     		sub	sp, sp, #12
 406              		.cfi_def_cfa_offset 16
 407 0004 00AF     		add	r7, sp, #0
 408              		.cfi_def_cfa_register 7
 409 0006 0346     		mov	r3, r0
 410 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 558:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(HC_PWM_UsingFixedFunction)
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 18


 559:.\Generated_Source\PSoC5/HC_PWM.c ****             CY_SET_REG16(HC_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 561:.\Generated_Source\PSoC5/HC_PWM.c ****             CY_SET_REG16(HC_PWM_COMPARE1_LSB_PTR, compare);
 411              		.loc 1 561 0
 412 000a 044B     		ldr	r3, .L28
 413 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 414 000e 1A80     		strh	r2, [r3]	@ movhi
 562:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 415              		.loc 1 563 0
 416 0010 0C37     		adds	r7, r7, #12
 417 0012 BD46     		mov	sp, r7
 418              		@ sp needed
 419 0014 5DF8047B 		ldr	r7, [sp], #4
 420 0018 7047     		bx	lr
 421              	.L29:
 422 001a 00BF     		.align	2
 423              	.L28:
 424 001c 486A0040 		.word	1073769032
 425              		.cfi_endproc
 426              	.LFE8:
 427              		.size	HC_PWM_WriteCompare1, .-HC_PWM_WriteCompare1
 428              		.section	.text.HC_PWM_WriteCompare2,"ax",%progbits
 429              		.align	2
 430              		.global	HC_PWM_WriteCompare2
 431              		.thumb
 432              		.thumb_func
 433              		.type	HC_PWM_WriteCompare2, %function
 434              	HC_PWM_WriteCompare2:
 435              	.LFB9:
 564:.\Generated_Source\PSoC5/HC_PWM.c **** 
 565:.\Generated_Source\PSoC5/HC_PWM.c **** 
 566:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_WriteCompare2
 568:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 570:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 571:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/HC_PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/HC_PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/HC_PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/HC_PWM.c ****     *  mode.
 576:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 577:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/HC_PWM.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 580:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 581:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 582:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 583:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/HC_PWM.c ****                                         
 586:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 436              		.loc 1 586 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 8
 439              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 19


 440              		@ link register save eliminated.
 441 0000 80B4     		push	{r7}
 442              		.cfi_def_cfa_offset 4
 443              		.cfi_offset 7, -4
 444 0002 83B0     		sub	sp, sp, #12
 445              		.cfi_def_cfa_offset 16
 446 0004 00AF     		add	r7, sp, #0
 447              		.cfi_def_cfa_register 7
 448 0006 0346     		mov	r3, r0
 449 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(HC_PWM_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/HC_PWM.c ****             CY_SET_REG16(HC_PWM_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 590:.\Generated_Source\PSoC5/HC_PWM.c ****             CY_SET_REG16(HC_PWM_COMPARE2_LSB_PTR, compare);
 450              		.loc 1 590 0
 451 000a 044B     		ldr	r3, .L31
 452 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 453 000e 1A80     		strh	r2, [r3]	@ movhi
 591:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 454              		.loc 1 592 0
 455 0010 0C37     		adds	r7, r7, #12
 456 0012 BD46     		mov	sp, r7
 457              		@ sp needed
 458 0014 5DF8047B 		ldr	r7, [sp], #4
 459 0018 7047     		bx	lr
 460              	.L32:
 461 001a 00BF     		.align	2
 462              	.L31:
 463 001c 686A0040 		.word	1073769064
 464              		.cfi_endproc
 465              	.LFE9:
 466              		.size	HC_PWM_WriteCompare2, .-HC_PWM_WriteCompare2
 467              		.section	.text.HC_PWM_SetInterruptMode,"ax",%progbits
 468              		.align	2
 469              		.global	HC_PWM_SetInterruptMode
 470              		.thumb
 471              		.thumb_func
 472              		.type	HC_PWM_SetInterruptMode, %function
 473              	HC_PWM_SetInterruptMode:
 474              	.LFB10:
 593:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/HC_PWM.c **** 
 595:.\Generated_Source\PSoC5/HC_PWM.c **** #if (HC_PWM_DeadBandUsed)
 596:.\Generated_Source\PSoC5/HC_PWM.c **** 
 597:.\Generated_Source\PSoC5/HC_PWM.c **** 
 598:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_WriteDeadTime
 600:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 602:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 603:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 605:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/HC_PWM.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 608:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 20


 609:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 610:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 611:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 614:.\Generated_Source\PSoC5/HC_PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(!HC_PWM_DeadBand2_4)
 616:.\Generated_Source\PSoC5/HC_PWM.c ****             CY_SET_REG8(HC_PWM_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 618:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/HC_PWM.c ****             HC_PWM_DEADBAND_COUNT &= ((uint8)(~HC_PWM_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/HC_PWM.c **** 
 622:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/HC_PWM.c ****             #if(HC_PWM_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << HC_PWM_DEADBAND_COUNT_SHIFT)) 
 625:.\Generated_Source\PSoC5/HC_PWM.c ****                                                     HC_PWM_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/HC_PWM.c ****             #else
 627:.\Generated_Source\PSoC5/HC_PWM.c ****                 HC_PWM_DEADBAND_COUNT |= deadtime & HC_PWM_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/HC_PWM.c ****             #endif /* (HC_PWM_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/HC_PWM.c **** 
 630:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (!HC_PWM_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 632:.\Generated_Source\PSoC5/HC_PWM.c **** 
 633:.\Generated_Source\PSoC5/HC_PWM.c **** 
 634:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadDeadTime
 636:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 638:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 639:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 641:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 643:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 644:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 645:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 647:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/HC_PWM.c ****     uint8 HC_PWM_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 650:.\Generated_Source\PSoC5/HC_PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(!HC_PWM_DeadBand2_4)
 652:.\Generated_Source\PSoC5/HC_PWM.c ****             return (CY_GET_REG8(HC_PWM_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 654:.\Generated_Source\PSoC5/HC_PWM.c **** 
 655:.\Generated_Source\PSoC5/HC_PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/HC_PWM.c ****             #if(HC_PWM_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/HC_PWM.c ****                 return ((uint8)(((uint8)(HC_PWM_DEADBAND_COUNT & HC_PWM_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC5/HC_PWM.c ****                                                                            HC_PWM_DEADBAND_COUNT_SH
 659:.\Generated_Source\PSoC5/HC_PWM.c ****             #else
 660:.\Generated_Source\PSoC5/HC_PWM.c ****                 return (HC_PWM_DEADBAND_COUNT & HC_PWM_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/HC_PWM.c ****             #endif /* (HC_PWM_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (!HC_PWM_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 664:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/HC_PWM.c **** 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 21


 666:.\Generated_Source\PSoC5/HC_PWM.c **** #if (HC_PWM_UseStatus || HC_PWM_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/HC_PWM.c **** 
 668:.\Generated_Source\PSoC5/HC_PWM.c **** 
 669:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_SetInterruptMode
 671:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 673:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 674:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/HC_PWM.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 677:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 680:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 681:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 682:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 683:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 475              		.loc 1 685 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 8
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480 0000 80B4     		push	{r7}
 481              		.cfi_def_cfa_offset 4
 482              		.cfi_offset 7, -4
 483 0002 83B0     		sub	sp, sp, #12
 484              		.cfi_def_cfa_offset 16
 485 0004 00AF     		add	r7, sp, #0
 486              		.cfi_def_cfa_register 7
 487 0006 0346     		mov	r3, r0
 488 0008 FB71     		strb	r3, [r7, #7]
 686:.\Generated_Source\PSoC5/HC_PWM.c ****         CY_SET_REG8(HC_PWM_STATUS_MASK_PTR, interruptMode);
 489              		.loc 1 686 0
 490 000a 044B     		ldr	r3, .L34
 491 000c FA79     		ldrb	r2, [r7, #7]
 492 000e 1A70     		strb	r2, [r3]
 687:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 493              		.loc 1 687 0
 494 0010 0C37     		adds	r7, r7, #12
 495 0012 BD46     		mov	sp, r7
 496              		@ sp needed
 497 0014 5DF8047B 		ldr	r7, [sp], #4
 498 0018 7047     		bx	lr
 499              	.L35:
 500 001a 00BF     		.align	2
 501              	.L34:
 502 001c 85650040 		.word	1073767813
 503              		.cfi_endproc
 504              	.LFE10:
 505              		.size	HC_PWM_SetInterruptMode, .-HC_PWM_SetInterruptMode
 506              		.section	.text.HC_PWM_ReadStatusRegister,"ax",%progbits
 507              		.align	2
 508              		.global	HC_PWM_ReadStatusRegister
 509              		.thumb
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 22


 510              		.thumb_func
 511              		.type	HC_PWM_ReadStatusRegister, %function
 512              	HC_PWM_ReadStatusRegister:
 513              	.LFB11:
 688:.\Generated_Source\PSoC5/HC_PWM.c **** 
 689:.\Generated_Source\PSoC5/HC_PWM.c **** 
 690:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadStatusRegister
 692:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 694:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 695:.\Generated_Source\PSoC5/HC_PWM.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 697:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 699:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 700:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 701:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 710:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/HC_PWM.c ****     uint8 HC_PWM_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 514              		.loc 1 712 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 519 0000 80B4     		push	{r7}
 520              		.cfi_def_cfa_offset 4
 521              		.cfi_offset 7, -4
 522 0002 00AF     		add	r7, sp, #0
 523              		.cfi_def_cfa_register 7
 713:.\Generated_Source\PSoC5/HC_PWM.c ****         return (CY_GET_REG8(HC_PWM_STATUS_PTR));
 524              		.loc 1 713 0
 525 0004 034B     		ldr	r3, .L38
 526 0006 1B78     		ldrb	r3, [r3]
 527 0008 DBB2     		uxtb	r3, r3
 714:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 528              		.loc 1 714 0
 529 000a 1846     		mov	r0, r3
 530 000c BD46     		mov	sp, r7
 531              		@ sp needed
 532 000e 5DF8047B 		ldr	r7, [sp], #4
 533 0012 7047     		bx	lr
 534              	.L39:
 535              		.align	2
 536              	.L38:
 537 0014 65650040 		.word	1073767781
 538              		.cfi_endproc
 539              	.LFE11:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 23


 540              		.size	HC_PWM_ReadStatusRegister, .-HC_PWM_ReadStatusRegister
 541              		.section	.text.HC_PWM_ReadControlRegister,"ax",%progbits
 542              		.align	2
 543              		.global	HC_PWM_ReadControlRegister
 544              		.thumb
 545              		.thumb_func
 546              		.type	HC_PWM_ReadControlRegister, %function
 547              	HC_PWM_ReadControlRegister:
 548              	.LFB12:
 715:.\Generated_Source\PSoC5/HC_PWM.c **** 
 716:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* (HC_PWM_UseStatus || HC_PWM_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/HC_PWM.c **** 
 718:.\Generated_Source\PSoC5/HC_PWM.c **** 
 719:.\Generated_Source\PSoC5/HC_PWM.c **** #if (HC_PWM_UseControl)
 720:.\Generated_Source\PSoC5/HC_PWM.c **** 
 721:.\Generated_Source\PSoC5/HC_PWM.c **** 
 722:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadControlRegister
 724:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 726:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 727:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/HC_PWM.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 730:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 732:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 733:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 734:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 736:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC5/HC_PWM.c ****     uint8 HC_PWM_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 549              		.loc 1 738 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 8
 552              		@ frame_needed = 1, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 554 0000 80B4     		push	{r7}
 555              		.cfi_def_cfa_offset 4
 556              		.cfi_offset 7, -4
 557 0002 83B0     		sub	sp, sp, #12
 558              		.cfi_def_cfa_offset 16
 559 0004 00AF     		add	r7, sp, #0
 560              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC5/HC_PWM.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/HC_PWM.c **** 
 741:.\Generated_Source\PSoC5/HC_PWM.c ****         result = CY_GET_REG8(HC_PWM_CONTROL_PTR);
 561              		.loc 1 741 0
 562 0006 054B     		ldr	r3, .L42
 563 0008 1B78     		ldrb	r3, [r3]
 564 000a FB71     		strb	r3, [r7, #7]
 742:.\Generated_Source\PSoC5/HC_PWM.c ****         return (result);
 565              		.loc 1 742 0
 566 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 567              		.loc 1 743 0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 24


 568 000e 1846     		mov	r0, r3
 569 0010 0C37     		adds	r7, r7, #12
 570 0012 BD46     		mov	sp, r7
 571              		@ sp needed
 572 0014 5DF8047B 		ldr	r7, [sp], #4
 573 0018 7047     		bx	lr
 574              	.L43:
 575 001a 00BF     		.align	2
 576              	.L42:
 577 001c 75650040 		.word	1073767797
 578              		.cfi_endproc
 579              	.LFE12:
 580              		.size	HC_PWM_ReadControlRegister, .-HC_PWM_ReadControlRegister
 581              		.section	.text.HC_PWM_WriteControlRegister,"ax",%progbits
 582              		.align	2
 583              		.global	HC_PWM_WriteControlRegister
 584              		.thumb
 585              		.thumb_func
 586              		.type	HC_PWM_WriteControlRegister, %function
 587              	HC_PWM_WriteControlRegister:
 588              	.LFB13:
 744:.\Generated_Source\PSoC5/HC_PWM.c **** 
 745:.\Generated_Source\PSoC5/HC_PWM.c **** 
 746:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_WriteControlRegister
 748:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 750:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 751:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/HC_PWM.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 754:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/HC_PWM.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 761:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 762:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 763:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 764:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/HC_PWM.c ****     void HC_PWM_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 589              		.loc 1 766 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 8
 592              		@ frame_needed = 1, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 594 0000 80B4     		push	{r7}
 595              		.cfi_def_cfa_offset 4
 596              		.cfi_offset 7, -4
 597 0002 83B0     		sub	sp, sp, #12
 598              		.cfi_def_cfa_offset 16
 599 0004 00AF     		add	r7, sp, #0
 600              		.cfi_def_cfa_register 7
 601 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 25


 602 0008 FB71     		strb	r3, [r7, #7]
 767:.\Generated_Source\PSoC5/HC_PWM.c ****         CY_SET_REG8(HC_PWM_CONTROL_PTR, control);
 603              		.loc 1 767 0
 604 000a 044B     		ldr	r3, .L45
 605 000c FA79     		ldrb	r2, [r7, #7]
 606 000e 1A70     		strb	r2, [r3]
 768:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 607              		.loc 1 768 0
 608 0010 0C37     		adds	r7, r7, #12
 609 0012 BD46     		mov	sp, r7
 610              		@ sp needed
 611 0014 5DF8047B 		ldr	r7, [sp], #4
 612 0018 7047     		bx	lr
 613              	.L46:
 614 001a 00BF     		.align	2
 615              	.L45:
 616 001c 75650040 		.word	1073767797
 617              		.cfi_endproc
 618              	.LFE13:
 619              		.size	HC_PWM_WriteControlRegister, .-HC_PWM_WriteControlRegister
 620              		.section	.text.HC_PWM_ReadCapture,"ax",%progbits
 621              		.align	2
 622              		.global	HC_PWM_ReadCapture
 623              		.thumb
 624              		.thumb_func
 625              		.type	HC_PWM_ReadCapture, %function
 626              	HC_PWM_ReadCapture:
 627              	.LFB14:
 769:.\Generated_Source\PSoC5/HC_PWM.c **** 
 770:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* (HC_PWM_UseControl) */
 771:.\Generated_Source\PSoC5/HC_PWM.c **** 
 772:.\Generated_Source\PSoC5/HC_PWM.c **** 
 773:.\Generated_Source\PSoC5/HC_PWM.c **** #if (!HC_PWM_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/HC_PWM.c **** 
 775:.\Generated_Source\PSoC5/HC_PWM.c **** 
 776:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadCapture
 778:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 780:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 781:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 783:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 785:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 786:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 787:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 789:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/HC_PWM.c ****     uint16 HC_PWM_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 628              		.loc 1 791 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633 0000 80B4     		push	{r7}
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 26


 634              		.cfi_def_cfa_offset 4
 635              		.cfi_offset 7, -4
 636 0002 00AF     		add	r7, sp, #0
 637              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC5/HC_PWM.c ****         return (CY_GET_REG16(HC_PWM_CAPTURE_LSB_PTR));
 638              		.loc 1 792 0
 639 0004 034B     		ldr	r3, .L49
 640 0006 1B88     		ldrh	r3, [r3]	@ movhi
 641 0008 9BB2     		uxth	r3, r3
 793:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 642              		.loc 1 793 0
 643 000a 1846     		mov	r0, r3
 644 000c BD46     		mov	sp, r7
 645              		@ sp needed
 646 000e 5DF8047B 		ldr	r7, [sp], #4
 647 0012 7047     		bx	lr
 648              	.L50:
 649              		.align	2
 650              	.L49:
 651 0014 A86A0040 		.word	1073769128
 652              		.cfi_endproc
 653              	.LFE14:
 654              		.size	HC_PWM_ReadCapture, .-HC_PWM_ReadCapture
 655              		.section	.text.HC_PWM_ReadCompare1,"ax",%progbits
 656              		.align	2
 657              		.global	HC_PWM_ReadCompare1
 658              		.thumb
 659              		.thumb_func
 660              		.type	HC_PWM_ReadCompare1, %function
 661              	HC_PWM_ReadCompare1:
 662              	.LFB15:
 794:.\Generated_Source\PSoC5/HC_PWM.c **** 
 795:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* (!HC_PWM_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/HC_PWM.c **** 
 797:.\Generated_Source\PSoC5/HC_PWM.c **** 
 798:.\Generated_Source\PSoC5/HC_PWM.c **** #if (HC_PWM_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/HC_PWM.c **** 
 800:.\Generated_Source\PSoC5/HC_PWM.c **** 
 801:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadCompare
 803:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 805:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 806:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/HC_PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 809:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 811:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 812:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 813:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 815:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/HC_PWM.c ****     uint16 HC_PWM_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 818:.\Generated_Source\PSoC5/HC_PWM.c ****         #if(HC_PWM_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/HC_PWM.c ****             return ((uint16)CY_GET_REG16(HC_PWM_COMPARE1_LSB_PTR));
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 27


 820:.\Generated_Source\PSoC5/HC_PWM.c ****         #else
 821:.\Generated_Source\PSoC5/HC_PWM.c ****             return (CY_GET_REG16(HC_PWM_COMPARE1_LSB_PTR));
 822:.\Generated_Source\PSoC5/HC_PWM.c ****         #endif /* (HC_PWM_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 824:.\Generated_Source\PSoC5/HC_PWM.c **** 
 825:.\Generated_Source\PSoC5/HC_PWM.c **** #else
 826:.\Generated_Source\PSoC5/HC_PWM.c **** 
 827:.\Generated_Source\PSoC5/HC_PWM.c **** 
 828:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadCompare1
 830:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 832:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 833:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 835:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 837:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 838:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 839:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 841:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/HC_PWM.c ****     uint16 HC_PWM_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 663              		.loc 1 843 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 1, uses_anonymous_args = 0
 667              		@ link register save eliminated.
 668 0000 80B4     		push	{r7}
 669              		.cfi_def_cfa_offset 4
 670              		.cfi_offset 7, -4
 671 0002 00AF     		add	r7, sp, #0
 672              		.cfi_def_cfa_register 7
 844:.\Generated_Source\PSoC5/HC_PWM.c ****         return (CY_GET_REG16(HC_PWM_COMPARE1_LSB_PTR));
 673              		.loc 1 844 0
 674 0004 034B     		ldr	r3, .L53
 675 0006 1B88     		ldrh	r3, [r3]	@ movhi
 676 0008 9BB2     		uxth	r3, r3
 845:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 677              		.loc 1 845 0
 678 000a 1846     		mov	r0, r3
 679 000c BD46     		mov	sp, r7
 680              		@ sp needed
 681 000e 5DF8047B 		ldr	r7, [sp], #4
 682 0012 7047     		bx	lr
 683              	.L54:
 684              		.align	2
 685              	.L53:
 686 0014 486A0040 		.word	1073769032
 687              		.cfi_endproc
 688              	.LFE15:
 689              		.size	HC_PWM_ReadCompare1, .-HC_PWM_ReadCompare1
 690              		.section	.text.HC_PWM_ReadCompare2,"ax",%progbits
 691              		.align	2
 692              		.global	HC_PWM_ReadCompare2
 693              		.thumb
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 28


 694              		.thumb_func
 695              		.type	HC_PWM_ReadCompare2, %function
 696              	HC_PWM_ReadCompare2:
 697              	.LFB16:
 846:.\Generated_Source\PSoC5/HC_PWM.c **** 
 847:.\Generated_Source\PSoC5/HC_PWM.c **** 
 848:.\Generated_Source\PSoC5/HC_PWM.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/HC_PWM.c ****     * Function Name: HC_PWM_ReadCompare2
 850:.\Generated_Source\PSoC5/HC_PWM.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 852:.\Generated_Source\PSoC5/HC_PWM.c ****     * Summary:
 853:.\Generated_Source\PSoC5/HC_PWM.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 855:.\Generated_Source\PSoC5/HC_PWM.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/HC_PWM.c ****     *  None
 857:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 858:.\Generated_Source\PSoC5/HC_PWM.c ****     * Return:
 859:.\Generated_Source\PSoC5/HC_PWM.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/HC_PWM.c ****     *
 861:.\Generated_Source\PSoC5/HC_PWM.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/HC_PWM.c ****     uint16 HC_PWM_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/HC_PWM.c ****     {
 698              		.loc 1 863 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703 0000 80B4     		push	{r7}
 704              		.cfi_def_cfa_offset 4
 705              		.cfi_offset 7, -4
 706 0002 00AF     		add	r7, sp, #0
 707              		.cfi_def_cfa_register 7
 864:.\Generated_Source\PSoC5/HC_PWM.c ****         return (CY_GET_REG16(HC_PWM_COMPARE2_LSB_PTR));
 708              		.loc 1 864 0
 709 0004 034B     		ldr	r3, .L57
 710 0006 1B88     		ldrh	r3, [r3]	@ movhi
 711 0008 9BB2     		uxth	r3, r3
 865:.\Generated_Source\PSoC5/HC_PWM.c ****     }
 712              		.loc 1 865 0
 713 000a 1846     		mov	r0, r3
 714 000c BD46     		mov	sp, r7
 715              		@ sp needed
 716 000e 5DF8047B 		ldr	r7, [sp], #4
 717 0012 7047     		bx	lr
 718              	.L58:
 719              		.align	2
 720              	.L57:
 721 0014 686A0040 		.word	1073769064
 722              		.cfi_endproc
 723              	.LFE16:
 724              		.size	HC_PWM_ReadCompare2, .-HC_PWM_ReadCompare2
 725              		.section	.text.HC_PWM_ReadPeriod,"ax",%progbits
 726              		.align	2
 727              		.global	HC_PWM_ReadPeriod
 728              		.thumb
 729              		.thumb_func
 730              		.type	HC_PWM_ReadPeriod, %function
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 29


 731              	HC_PWM_ReadPeriod:
 732              	.LFB17:
 866:.\Generated_Source\PSoC5/HC_PWM.c **** 
 867:.\Generated_Source\PSoC5/HC_PWM.c **** #endif /* (HC_PWM_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/HC_PWM.c **** 
 869:.\Generated_Source\PSoC5/HC_PWM.c **** 
 870:.\Generated_Source\PSoC5/HC_PWM.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/HC_PWM.c **** * Function Name: HC_PWM_ReadPeriod
 872:.\Generated_Source\PSoC5/HC_PWM.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/HC_PWM.c **** *
 874:.\Generated_Source\PSoC5/HC_PWM.c **** * Summary:
 875:.\Generated_Source\PSoC5/HC_PWM.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/HC_PWM.c **** *
 877:.\Generated_Source\PSoC5/HC_PWM.c **** * Parameters:
 878:.\Generated_Source\PSoC5/HC_PWM.c **** *  None
 879:.\Generated_Source\PSoC5/HC_PWM.c **** *
 880:.\Generated_Source\PSoC5/HC_PWM.c **** * Return:
 881:.\Generated_Source\PSoC5/HC_PWM.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/HC_PWM.c **** *
 883:.\Generated_Source\PSoC5/HC_PWM.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/HC_PWM.c **** uint16 HC_PWM_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/HC_PWM.c **** {
 733              		.loc 1 885 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 1, uses_anonymous_args = 0
 737              		@ link register save eliminated.
 738 0000 80B4     		push	{r7}
 739              		.cfi_def_cfa_offset 4
 740              		.cfi_offset 7, -4
 741 0002 00AF     		add	r7, sp, #0
 742              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC5/HC_PWM.c ****     #if(HC_PWM_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/HC_PWM.c ****         return ((uint16)CY_GET_REG16(HC_PWM_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/HC_PWM.c ****     #else
 889:.\Generated_Source\PSoC5/HC_PWM.c ****         return (CY_GET_REG16(HC_PWM_PERIOD_LSB_PTR));
 743              		.loc 1 889 0
 744 0004 034B     		ldr	r3, .L61
 745 0006 1B88     		ldrh	r3, [r3]	@ movhi
 746 0008 9BB2     		uxth	r3, r3
 890:.\Generated_Source\PSoC5/HC_PWM.c ****     #endif /* (HC_PWM_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/HC_PWM.c **** }
 747              		.loc 1 891 0
 748 000a 1846     		mov	r0, r3
 749 000c BD46     		mov	sp, r7
 750              		@ sp needed
 751 000e 5DF8047B 		ldr	r7, [sp], #4
 752 0012 7047     		bx	lr
 753              	.L62:
 754              		.align	2
 755              	.L61:
 756 0014 886A0040 		.word	1073769096
 757              		.cfi_endproc
 758              	.LFE17:
 759              		.size	HC_PWM_ReadPeriod, .-HC_PWM_ReadPeriod
 760              		.text
 761              	.Letext0:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 30


 762              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 763              		.section	.debug_info,"",%progbits
 764              	.Ldebug_info0:
 765 0000 D6020000 		.4byte	0x2d6
 766 0004 0400     		.2byte	0x4
 767 0006 00000000 		.4byte	.Ldebug_abbrev0
 768 000a 04       		.byte	0x4
 769 000b 01       		.uleb128 0x1
 770 000c ED010000 		.4byte	.LASF42
 771 0010 01       		.byte	0x1
 772 0011 1D010000 		.4byte	.LASF43
 773 0015 69010000 		.4byte	.LASF44
 774 0019 00000000 		.4byte	.Ldebug_ranges0+0
 775 001d 00000000 		.4byte	0
 776 0021 00000000 		.4byte	.Ldebug_line0
 777 0025 02       		.uleb128 0x2
 778 0026 01       		.byte	0x1
 779 0027 06       		.byte	0x6
 780 0028 34030000 		.4byte	.LASF0
 781 002c 02       		.uleb128 0x2
 782 002d 01       		.byte	0x1
 783 002e 08       		.byte	0x8
 784 002f B5000000 		.4byte	.LASF1
 785 0033 02       		.uleb128 0x2
 786 0034 02       		.byte	0x2
 787 0035 05       		.byte	0x5
 788 0036 C9020000 		.4byte	.LASF2
 789 003a 02       		.uleb128 0x2
 790 003b 02       		.byte	0x2
 791 003c 07       		.byte	0x7
 792 003d 49000000 		.4byte	.LASF3
 793 0041 02       		.uleb128 0x2
 794 0042 04       		.byte	0x4
 795 0043 05       		.byte	0x5
 796 0044 0D030000 		.4byte	.LASF4
 797 0048 02       		.uleb128 0x2
 798 0049 04       		.byte	0x4
 799 004a 07       		.byte	0x7
 800 004b C8000000 		.4byte	.LASF5
 801 004f 02       		.uleb128 0x2
 802 0050 08       		.byte	0x8
 803 0051 05       		.byte	0x5
 804 0052 86020000 		.4byte	.LASF6
 805 0056 02       		.uleb128 0x2
 806 0057 08       		.byte	0x8
 807 0058 07       		.byte	0x7
 808 0059 CF010000 		.4byte	.LASF7
 809 005d 03       		.uleb128 0x3
 810 005e 04       		.byte	0x4
 811 005f 05       		.byte	0x5
 812 0060 696E7400 		.ascii	"int\000"
 813 0064 02       		.uleb128 0x2
 814 0065 04       		.byte	0x4
 815 0066 07       		.byte	0x7
 816 0067 C2010000 		.4byte	.LASF8
 817 006b 04       		.uleb128 0x4
 818 006c DA000000 		.4byte	.LASF9
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 31


 819 0070 02       		.byte	0x2
 820 0071 B3       		.byte	0xb3
 821 0072 2C000000 		.4byte	0x2c
 822 0076 04       		.uleb128 0x4
 823 0077 62010000 		.4byte	.LASF10
 824 007b 02       		.byte	0x2
 825 007c B4       		.byte	0xb4
 826 007d 3A000000 		.4byte	0x3a
 827 0081 02       		.uleb128 0x2
 828 0082 04       		.byte	0x4
 829 0083 04       		.byte	0x4
 830 0084 A7000000 		.4byte	.LASF11
 831 0088 02       		.uleb128 0x2
 832 0089 08       		.byte	0x8
 833 008a 04       		.byte	0x4
 834 008b 3F010000 		.4byte	.LASF12
 835 008f 02       		.uleb128 0x2
 836 0090 01       		.byte	0x1
 837 0091 08       		.byte	0x8
 838 0092 16030000 		.4byte	.LASF13
 839 0096 05       		.uleb128 0x5
 840 0097 C3000000 		.4byte	.LASF14
 841 009b 02       		.byte	0x2
 842 009c 5D01     		.2byte	0x15d
 843 009e A2000000 		.4byte	0xa2
 844 00a2 06       		.uleb128 0x6
 845 00a3 6B000000 		.4byte	0x6b
 846 00a7 05       		.uleb128 0x5
 847 00a8 00000000 		.4byte	.LASF15
 848 00ac 02       		.byte	0x2
 849 00ad 5E01     		.2byte	0x15e
 850 00af B3000000 		.4byte	0xb3
 851 00b3 06       		.uleb128 0x6
 852 00b4 76000000 		.4byte	0x76
 853 00b8 02       		.uleb128 0x2
 854 00b9 04       		.byte	0x4
 855 00ba 07       		.byte	0x7
 856 00bb 7D020000 		.4byte	.LASF16
 857 00bf 07       		.uleb128 0x7
 858 00c0 27030000 		.4byte	.LASF19
 859 00c4 01       		.byte	0x1
 860 00c5 37       		.byte	0x37
 861 00c6 00000000 		.4byte	.LFB0
 862 00ca 20000000 		.4byte	.LFE0-.LFB0
 863 00ce 01       		.uleb128 0x1
 864 00cf 9C       		.byte	0x9c
 865 00d0 08       		.uleb128 0x8
 866 00d1 B6010000 		.4byte	.LASF22
 867 00d5 01       		.byte	0x1
 868 00d6 54       		.byte	0x54
 869 00d7 00000000 		.4byte	.LFB1
 870 00db 9C000000 		.4byte	.LFE1-.LFB1
 871 00df 01       		.uleb128 0x1
 872 00e0 9C       		.byte	0x9c
 873 00e1 02010000 		.4byte	0x102
 874 00e5 09       		.uleb128 0x9
 875 00e6 78020000 		.4byte	.LASF17
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 32


 876 00ea 01       		.byte	0x1
 877 00eb 57       		.byte	0x57
 878 00ec 6B000000 		.4byte	0x6b
 879 00f0 02       		.uleb128 0x2
 880 00f1 91       		.byte	0x91
 881 00f2 77       		.sleb128 -9
 882 00f3 09       		.uleb128 0x9
 883 00f4 48030000 		.4byte	.LASF18
 884 00f8 01       		.byte	0x1
 885 00f9 5D       		.byte	0x5d
 886 00fa 6B000000 		.4byte	0x6b
 887 00fe 02       		.uleb128 0x2
 888 00ff 91       		.byte	0x91
 889 0100 76       		.sleb128 -10
 890 0101 00       		.byte	0
 891 0102 0A       		.uleb128 0xa
 892 0103 86000000 		.4byte	.LASF20
 893 0107 01       		.byte	0x1
 894 0108 C7       		.byte	0xc7
 895 0109 00000000 		.4byte	.LFB2
 896 010d 20000000 		.4byte	.LFE2-.LFB2
 897 0111 01       		.uleb128 0x1
 898 0112 9C       		.byte	0x9c
 899 0113 0A       		.uleb128 0xa
 900 0114 1B030000 		.4byte	.LASF21
 901 0118 01       		.byte	0x1
 902 0119 E9       		.byte	0xe9
 903 011a 00000000 		.4byte	.LFB3
 904 011e 20000000 		.4byte	.LFE3-.LFB3
 905 0122 01       		.uleb128 0x1
 906 0123 9C       		.byte	0x9c
 907 0124 0B       		.uleb128 0xb
 908 0125 A2020000 		.4byte	.LASF23
 909 0129 01       		.byte	0x1
 910 012a 9301     		.2byte	0x193
 911 012c 00000000 		.4byte	.LFB4
 912 0130 20000000 		.4byte	.LFE4-.LFB4
 913 0134 01       		.uleb128 0x1
 914 0135 9C       		.byte	0x9c
 915 0136 4A010000 		.4byte	0x14a
 916 013a 0C       		.uleb128 0xc
 917 013b AD000000 		.4byte	.LASF26
 918 013f 01       		.byte	0x1
 919 0140 9301     		.2byte	0x193
 920 0142 76000000 		.4byte	0x76
 921 0146 02       		.uleb128 0x2
 922 0147 91       		.byte	0x91
 923 0148 76       		.sleb128 -10
 924 0149 00       		.byte	0
 925 014a 0D       		.uleb128 0xd
 926 014b 1E000000 		.4byte	.LASF33
 927 014f 01       		.byte	0x1
 928 0150 A901     		.2byte	0x1a9
 929 0152 76000000 		.4byte	0x76
 930 0156 00000000 		.4byte	.LFB5
 931 015a 20000000 		.4byte	.LFE5-.LFB5
 932 015e 01       		.uleb128 0x1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 33


 933 015f 9C       		.byte	0x9c
 934 0160 0E       		.uleb128 0xe
 935 0161 38000000 		.4byte	.LASF24
 936 0165 01       		.byte	0x1
 937 0166 C501     		.2byte	0x1c5
 938 0168 00000000 		.4byte	.LFB6
 939 016c 1A000000 		.4byte	.LFE6-.LFB6
 940 0170 01       		.uleb128 0x1
 941 0171 9C       		.byte	0x9c
 942 0172 0B       		.uleb128 0xb
 943 0173 94000000 		.4byte	.LASF25
 944 0177 01       		.byte	0x1
 945 0178 E201     		.2byte	0x1e2
 946 017a 00000000 		.4byte	.LFB7
 947 017e 20000000 		.4byte	.LFE7-.LFB7
 948 0182 01       		.uleb128 0x1
 949 0183 9C       		.byte	0x9c
 950 0184 98010000 		.4byte	0x198
 951 0188 0C       		.uleb128 0xc
 952 0189 31000000 		.4byte	.LASF27
 953 018d 01       		.byte	0x1
 954 018e E201     		.2byte	0x1e2
 955 0190 76000000 		.4byte	0x76
 956 0194 02       		.uleb128 0x2
 957 0195 91       		.byte	0x91
 958 0196 76       		.sleb128 -10
 959 0197 00       		.byte	0
 960 0198 0B       		.uleb128 0xb
 961 0199 5C000000 		.4byte	.LASF28
 962 019d 01       		.byte	0x1
 963 019e 2B02     		.2byte	0x22b
 964 01a0 00000000 		.4byte	.LFB8
 965 01a4 20000000 		.4byte	.LFE8-.LFB8
 966 01a8 01       		.uleb128 0x1
 967 01a9 9C       		.byte	0x9c
 968 01aa BE010000 		.4byte	0x1be
 969 01ae 0C       		.uleb128 0xc
 970 01af 40030000 		.4byte	.LASF29
 971 01b3 01       		.byte	0x1
 972 01b4 2B02     		.2byte	0x22b
 973 01b6 76000000 		.4byte	0x76
 974 01ba 02       		.uleb128 0x2
 975 01bb 91       		.byte	0x91
 976 01bc 76       		.sleb128 -10
 977 01bd 00       		.byte	0
 978 01be 0B       		.uleb128 0xb
 979 01bf 71000000 		.4byte	.LASF30
 980 01c3 01       		.byte	0x1
 981 01c4 4802     		.2byte	0x248
 982 01c6 00000000 		.4byte	.LFB9
 983 01ca 20000000 		.4byte	.LFE9-.LFB9
 984 01ce 01       		.uleb128 0x1
 985 01cf 9C       		.byte	0x9c
 986 01d0 E4010000 		.4byte	0x1e4
 987 01d4 0C       		.uleb128 0xc
 988 01d5 40030000 		.4byte	.LASF29
 989 01d9 01       		.byte	0x1
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 34


 990 01da 4802     		.2byte	0x248
 991 01dc 76000000 		.4byte	0x76
 992 01e0 02       		.uleb128 0x2
 993 01e1 91       		.byte	0x91
 994 01e2 76       		.sleb128 -10
 995 01e3 00       		.byte	0
 996 01e4 0B       		.uleb128 0xb
 997 01e5 06000000 		.4byte	.LASF31
 998 01e9 01       		.byte	0x1
 999 01ea AC02     		.2byte	0x2ac
 1000 01ec 00000000 		.4byte	.LFB10
 1001 01f0 20000000 		.4byte	.LFE10-.LFB10
 1002 01f4 01       		.uleb128 0x1
 1003 01f5 9C       		.byte	0x9c
 1004 01f6 0A020000 		.4byte	0x20a
 1005 01fa 0C       		.uleb128 0xc
 1006 01fb 94020000 		.4byte	.LASF32
 1007 01ff 01       		.byte	0x1
 1008 0200 AC02     		.2byte	0x2ac
 1009 0202 6B000000 		.4byte	0x6b
 1010 0206 02       		.uleb128 0x2
 1011 0207 91       		.byte	0x91
 1012 0208 77       		.sleb128 -9
 1013 0209 00       		.byte	0
 1014 020a 0D       		.uleb128 0xd
 1015 020b 03010000 		.4byte	.LASF34
 1016 020f 01       		.byte	0x1
 1017 0210 C702     		.2byte	0x2c7
 1018 0212 6B000000 		.4byte	0x6b
 1019 0216 00000000 		.4byte	.LFB11
 1020 021a 18000000 		.4byte	.LFE11-.LFB11
 1021 021e 01       		.uleb128 0x1
 1022 021f 9C       		.byte	0x9c
 1023 0220 0F       		.uleb128 0xf
 1024 0221 E8000000 		.4byte	.LASF45
 1025 0225 01       		.byte	0x1
 1026 0226 E102     		.2byte	0x2e1
 1027 0228 6B000000 		.4byte	0x6b
 1028 022c 00000000 		.4byte	.LFB12
 1029 0230 20000000 		.4byte	.LFE12-.LFB12
 1030 0234 01       		.uleb128 0x1
 1031 0235 9C       		.byte	0x9c
 1032 0236 4A020000 		.4byte	0x24a
 1033 023a 10       		.uleb128 0x10
 1034 023b E6010000 		.4byte	.LASF35
 1035 023f 01       		.byte	0x1
 1036 0240 E302     		.2byte	0x2e3
 1037 0242 6B000000 		.4byte	0x6b
 1038 0246 02       		.uleb128 0x2
 1039 0247 91       		.byte	0x91
 1040 0248 77       		.sleb128 -9
 1041 0249 00       		.byte	0
 1042 024a 0B       		.uleb128 0xb
 1043 024b 46010000 		.4byte	.LASF36
 1044 024f 01       		.byte	0x1
 1045 0250 FD02     		.2byte	0x2fd
 1046 0252 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 35


 1047 0256 20000000 		.4byte	.LFE13-.LFB13
 1048 025a 01       		.uleb128 0x1
 1049 025b 9C       		.byte	0x9c
 1050 025c 70020000 		.4byte	0x270
 1051 0260 0C       		.uleb128 0xc
 1052 0261 E0000000 		.4byte	.LASF37
 1053 0265 01       		.byte	0x1
 1054 0266 FD02     		.2byte	0x2fd
 1055 0268 6B000000 		.4byte	0x6b
 1056 026c 02       		.uleb128 0x2
 1057 026d 91       		.byte	0x91
 1058 026e 77       		.sleb128 -9
 1059 026f 00       		.byte	0
 1060 0270 0D       		.uleb128 0xd
 1061 0271 B6020000 		.4byte	.LASF38
 1062 0275 01       		.byte	0x1
 1063 0276 1603     		.2byte	0x316
 1064 0278 76000000 		.4byte	0x76
 1065 027c 00000000 		.4byte	.LFB14
 1066 0280 18000000 		.4byte	.LFE14-.LFB14
 1067 0284 01       		.uleb128 0x1
 1068 0285 9C       		.byte	0x9c
 1069 0286 0D       		.uleb128 0xd
 1070 0287 D3020000 		.4byte	.LASF39
 1071 028b 01       		.byte	0x1
 1072 028c 4A03     		.2byte	0x34a
 1073 028e 76000000 		.4byte	0x76
 1074 0292 00000000 		.4byte	.LFB15
 1075 0296 18000000 		.4byte	.LFE15-.LFB15
 1076 029a 01       		.uleb128 0x1
 1077 029b 9C       		.byte	0x9c
 1078 029c 0D       		.uleb128 0xd
 1079 029d E7020000 		.4byte	.LASF40
 1080 02a1 01       		.byte	0x1
 1081 02a2 5E03     		.2byte	0x35e
 1082 02a4 76000000 		.4byte	0x76
 1083 02a8 00000000 		.4byte	.LFB16
 1084 02ac 18000000 		.4byte	.LFE16-.LFB16
 1085 02b0 01       		.uleb128 0x1
 1086 02b1 9C       		.byte	0x9c
 1087 02b2 0D       		.uleb128 0xd
 1088 02b3 FB020000 		.4byte	.LASF41
 1089 02b7 01       		.byte	0x1
 1090 02b8 7403     		.2byte	0x374
 1091 02ba 76000000 		.4byte	0x76
 1092 02be 00000000 		.4byte	.LFB17
 1093 02c2 18000000 		.4byte	.LFE17-.LFB17
 1094 02c6 01       		.uleb128 0x1
 1095 02c7 9C       		.byte	0x9c
 1096 02c8 11       		.uleb128 0x11
 1097 02c9 69020000 		.4byte	.LASF46
 1098 02cd 01       		.byte	0x1
 1099 02ce 20       		.byte	0x20
 1100 02cf 6B000000 		.4byte	0x6b
 1101 02d3 05       		.uleb128 0x5
 1102 02d4 03       		.byte	0x3
 1103 02d5 00000000 		.4byte	HC_PWM_initVar
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 36


 1104 02d9 00       		.byte	0
 1105              		.section	.debug_abbrev,"",%progbits
 1106              	.Ldebug_abbrev0:
 1107 0000 01       		.uleb128 0x1
 1108 0001 11       		.uleb128 0x11
 1109 0002 01       		.byte	0x1
 1110 0003 25       		.uleb128 0x25
 1111 0004 0E       		.uleb128 0xe
 1112 0005 13       		.uleb128 0x13
 1113 0006 0B       		.uleb128 0xb
 1114 0007 03       		.uleb128 0x3
 1115 0008 0E       		.uleb128 0xe
 1116 0009 1B       		.uleb128 0x1b
 1117 000a 0E       		.uleb128 0xe
 1118 000b 55       		.uleb128 0x55
 1119 000c 17       		.uleb128 0x17
 1120 000d 11       		.uleb128 0x11
 1121 000e 01       		.uleb128 0x1
 1122 000f 10       		.uleb128 0x10
 1123 0010 17       		.uleb128 0x17
 1124 0011 00       		.byte	0
 1125 0012 00       		.byte	0
 1126 0013 02       		.uleb128 0x2
 1127 0014 24       		.uleb128 0x24
 1128 0015 00       		.byte	0
 1129 0016 0B       		.uleb128 0xb
 1130 0017 0B       		.uleb128 0xb
 1131 0018 3E       		.uleb128 0x3e
 1132 0019 0B       		.uleb128 0xb
 1133 001a 03       		.uleb128 0x3
 1134 001b 0E       		.uleb128 0xe
 1135 001c 00       		.byte	0
 1136 001d 00       		.byte	0
 1137 001e 03       		.uleb128 0x3
 1138 001f 24       		.uleb128 0x24
 1139 0020 00       		.byte	0
 1140 0021 0B       		.uleb128 0xb
 1141 0022 0B       		.uleb128 0xb
 1142 0023 3E       		.uleb128 0x3e
 1143 0024 0B       		.uleb128 0xb
 1144 0025 03       		.uleb128 0x3
 1145 0026 08       		.uleb128 0x8
 1146 0027 00       		.byte	0
 1147 0028 00       		.byte	0
 1148 0029 04       		.uleb128 0x4
 1149 002a 16       		.uleb128 0x16
 1150 002b 00       		.byte	0
 1151 002c 03       		.uleb128 0x3
 1152 002d 0E       		.uleb128 0xe
 1153 002e 3A       		.uleb128 0x3a
 1154 002f 0B       		.uleb128 0xb
 1155 0030 3B       		.uleb128 0x3b
 1156 0031 0B       		.uleb128 0xb
 1157 0032 49       		.uleb128 0x49
 1158 0033 13       		.uleb128 0x13
 1159 0034 00       		.byte	0
 1160 0035 00       		.byte	0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 37


 1161 0036 05       		.uleb128 0x5
 1162 0037 16       		.uleb128 0x16
 1163 0038 00       		.byte	0
 1164 0039 03       		.uleb128 0x3
 1165 003a 0E       		.uleb128 0xe
 1166 003b 3A       		.uleb128 0x3a
 1167 003c 0B       		.uleb128 0xb
 1168 003d 3B       		.uleb128 0x3b
 1169 003e 05       		.uleb128 0x5
 1170 003f 49       		.uleb128 0x49
 1171 0040 13       		.uleb128 0x13
 1172 0041 00       		.byte	0
 1173 0042 00       		.byte	0
 1174 0043 06       		.uleb128 0x6
 1175 0044 35       		.uleb128 0x35
 1176 0045 00       		.byte	0
 1177 0046 49       		.uleb128 0x49
 1178 0047 13       		.uleb128 0x13
 1179 0048 00       		.byte	0
 1180 0049 00       		.byte	0
 1181 004a 07       		.uleb128 0x7
 1182 004b 2E       		.uleb128 0x2e
 1183 004c 00       		.byte	0
 1184 004d 3F       		.uleb128 0x3f
 1185 004e 19       		.uleb128 0x19
 1186 004f 03       		.uleb128 0x3
 1187 0050 0E       		.uleb128 0xe
 1188 0051 3A       		.uleb128 0x3a
 1189 0052 0B       		.uleb128 0xb
 1190 0053 3B       		.uleb128 0x3b
 1191 0054 0B       		.uleb128 0xb
 1192 0055 27       		.uleb128 0x27
 1193 0056 19       		.uleb128 0x19
 1194 0057 11       		.uleb128 0x11
 1195 0058 01       		.uleb128 0x1
 1196 0059 12       		.uleb128 0x12
 1197 005a 06       		.uleb128 0x6
 1198 005b 40       		.uleb128 0x40
 1199 005c 18       		.uleb128 0x18
 1200 005d 9642     		.uleb128 0x2116
 1201 005f 19       		.uleb128 0x19
 1202 0060 00       		.byte	0
 1203 0061 00       		.byte	0
 1204 0062 08       		.uleb128 0x8
 1205 0063 2E       		.uleb128 0x2e
 1206 0064 01       		.byte	0x1
 1207 0065 3F       		.uleb128 0x3f
 1208 0066 19       		.uleb128 0x19
 1209 0067 03       		.uleb128 0x3
 1210 0068 0E       		.uleb128 0xe
 1211 0069 3A       		.uleb128 0x3a
 1212 006a 0B       		.uleb128 0xb
 1213 006b 3B       		.uleb128 0x3b
 1214 006c 0B       		.uleb128 0xb
 1215 006d 27       		.uleb128 0x27
 1216 006e 19       		.uleb128 0x19
 1217 006f 11       		.uleb128 0x11
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 38


 1218 0070 01       		.uleb128 0x1
 1219 0071 12       		.uleb128 0x12
 1220 0072 06       		.uleb128 0x6
 1221 0073 40       		.uleb128 0x40
 1222 0074 18       		.uleb128 0x18
 1223 0075 9642     		.uleb128 0x2116
 1224 0077 19       		.uleb128 0x19
 1225 0078 01       		.uleb128 0x1
 1226 0079 13       		.uleb128 0x13
 1227 007a 00       		.byte	0
 1228 007b 00       		.byte	0
 1229 007c 09       		.uleb128 0x9
 1230 007d 34       		.uleb128 0x34
 1231 007e 00       		.byte	0
 1232 007f 03       		.uleb128 0x3
 1233 0080 0E       		.uleb128 0xe
 1234 0081 3A       		.uleb128 0x3a
 1235 0082 0B       		.uleb128 0xb
 1236 0083 3B       		.uleb128 0x3b
 1237 0084 0B       		.uleb128 0xb
 1238 0085 49       		.uleb128 0x49
 1239 0086 13       		.uleb128 0x13
 1240 0087 02       		.uleb128 0x2
 1241 0088 18       		.uleb128 0x18
 1242 0089 00       		.byte	0
 1243 008a 00       		.byte	0
 1244 008b 0A       		.uleb128 0xa
 1245 008c 2E       		.uleb128 0x2e
 1246 008d 00       		.byte	0
 1247 008e 3F       		.uleb128 0x3f
 1248 008f 19       		.uleb128 0x19
 1249 0090 03       		.uleb128 0x3
 1250 0091 0E       		.uleb128 0xe
 1251 0092 3A       		.uleb128 0x3a
 1252 0093 0B       		.uleb128 0xb
 1253 0094 3B       		.uleb128 0x3b
 1254 0095 0B       		.uleb128 0xb
 1255 0096 27       		.uleb128 0x27
 1256 0097 19       		.uleb128 0x19
 1257 0098 11       		.uleb128 0x11
 1258 0099 01       		.uleb128 0x1
 1259 009a 12       		.uleb128 0x12
 1260 009b 06       		.uleb128 0x6
 1261 009c 40       		.uleb128 0x40
 1262 009d 18       		.uleb128 0x18
 1263 009e 9742     		.uleb128 0x2117
 1264 00a0 19       		.uleb128 0x19
 1265 00a1 00       		.byte	0
 1266 00a2 00       		.byte	0
 1267 00a3 0B       		.uleb128 0xb
 1268 00a4 2E       		.uleb128 0x2e
 1269 00a5 01       		.byte	0x1
 1270 00a6 3F       		.uleb128 0x3f
 1271 00a7 19       		.uleb128 0x19
 1272 00a8 03       		.uleb128 0x3
 1273 00a9 0E       		.uleb128 0xe
 1274 00aa 3A       		.uleb128 0x3a
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 39


 1275 00ab 0B       		.uleb128 0xb
 1276 00ac 3B       		.uleb128 0x3b
 1277 00ad 05       		.uleb128 0x5
 1278 00ae 27       		.uleb128 0x27
 1279 00af 19       		.uleb128 0x19
 1280 00b0 11       		.uleb128 0x11
 1281 00b1 01       		.uleb128 0x1
 1282 00b2 12       		.uleb128 0x12
 1283 00b3 06       		.uleb128 0x6
 1284 00b4 40       		.uleb128 0x40
 1285 00b5 18       		.uleb128 0x18
 1286 00b6 9742     		.uleb128 0x2117
 1287 00b8 19       		.uleb128 0x19
 1288 00b9 01       		.uleb128 0x1
 1289 00ba 13       		.uleb128 0x13
 1290 00bb 00       		.byte	0
 1291 00bc 00       		.byte	0
 1292 00bd 0C       		.uleb128 0xc
 1293 00be 05       		.uleb128 0x5
 1294 00bf 00       		.byte	0
 1295 00c0 03       		.uleb128 0x3
 1296 00c1 0E       		.uleb128 0xe
 1297 00c2 3A       		.uleb128 0x3a
 1298 00c3 0B       		.uleb128 0xb
 1299 00c4 3B       		.uleb128 0x3b
 1300 00c5 05       		.uleb128 0x5
 1301 00c6 49       		.uleb128 0x49
 1302 00c7 13       		.uleb128 0x13
 1303 00c8 02       		.uleb128 0x2
 1304 00c9 18       		.uleb128 0x18
 1305 00ca 00       		.byte	0
 1306 00cb 00       		.byte	0
 1307 00cc 0D       		.uleb128 0xd
 1308 00cd 2E       		.uleb128 0x2e
 1309 00ce 00       		.byte	0
 1310 00cf 3F       		.uleb128 0x3f
 1311 00d0 19       		.uleb128 0x19
 1312 00d1 03       		.uleb128 0x3
 1313 00d2 0E       		.uleb128 0xe
 1314 00d3 3A       		.uleb128 0x3a
 1315 00d4 0B       		.uleb128 0xb
 1316 00d5 3B       		.uleb128 0x3b
 1317 00d6 05       		.uleb128 0x5
 1318 00d7 27       		.uleb128 0x27
 1319 00d8 19       		.uleb128 0x19
 1320 00d9 49       		.uleb128 0x49
 1321 00da 13       		.uleb128 0x13
 1322 00db 11       		.uleb128 0x11
 1323 00dc 01       		.uleb128 0x1
 1324 00dd 12       		.uleb128 0x12
 1325 00de 06       		.uleb128 0x6
 1326 00df 40       		.uleb128 0x40
 1327 00e0 18       		.uleb128 0x18
 1328 00e1 9742     		.uleb128 0x2117
 1329 00e3 19       		.uleb128 0x19
 1330 00e4 00       		.byte	0
 1331 00e5 00       		.byte	0
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 40


 1332 00e6 0E       		.uleb128 0xe
 1333 00e7 2E       		.uleb128 0x2e
 1334 00e8 00       		.byte	0
 1335 00e9 3F       		.uleb128 0x3f
 1336 00ea 19       		.uleb128 0x19
 1337 00eb 03       		.uleb128 0x3
 1338 00ec 0E       		.uleb128 0xe
 1339 00ed 3A       		.uleb128 0x3a
 1340 00ee 0B       		.uleb128 0xb
 1341 00ef 3B       		.uleb128 0x3b
 1342 00f0 05       		.uleb128 0x5
 1343 00f1 27       		.uleb128 0x27
 1344 00f2 19       		.uleb128 0x19
 1345 00f3 11       		.uleb128 0x11
 1346 00f4 01       		.uleb128 0x1
 1347 00f5 12       		.uleb128 0x12
 1348 00f6 06       		.uleb128 0x6
 1349 00f7 40       		.uleb128 0x40
 1350 00f8 18       		.uleb128 0x18
 1351 00f9 9642     		.uleb128 0x2116
 1352 00fb 19       		.uleb128 0x19
 1353 00fc 00       		.byte	0
 1354 00fd 00       		.byte	0
 1355 00fe 0F       		.uleb128 0xf
 1356 00ff 2E       		.uleb128 0x2e
 1357 0100 01       		.byte	0x1
 1358 0101 3F       		.uleb128 0x3f
 1359 0102 19       		.uleb128 0x19
 1360 0103 03       		.uleb128 0x3
 1361 0104 0E       		.uleb128 0xe
 1362 0105 3A       		.uleb128 0x3a
 1363 0106 0B       		.uleb128 0xb
 1364 0107 3B       		.uleb128 0x3b
 1365 0108 05       		.uleb128 0x5
 1366 0109 27       		.uleb128 0x27
 1367 010a 19       		.uleb128 0x19
 1368 010b 49       		.uleb128 0x49
 1369 010c 13       		.uleb128 0x13
 1370 010d 11       		.uleb128 0x11
 1371 010e 01       		.uleb128 0x1
 1372 010f 12       		.uleb128 0x12
 1373 0110 06       		.uleb128 0x6
 1374 0111 40       		.uleb128 0x40
 1375 0112 18       		.uleb128 0x18
 1376 0113 9742     		.uleb128 0x2117
 1377 0115 19       		.uleb128 0x19
 1378 0116 01       		.uleb128 0x1
 1379 0117 13       		.uleb128 0x13
 1380 0118 00       		.byte	0
 1381 0119 00       		.byte	0
 1382 011a 10       		.uleb128 0x10
 1383 011b 34       		.uleb128 0x34
 1384 011c 00       		.byte	0
 1385 011d 03       		.uleb128 0x3
 1386 011e 0E       		.uleb128 0xe
 1387 011f 3A       		.uleb128 0x3a
 1388 0120 0B       		.uleb128 0xb
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 41


 1389 0121 3B       		.uleb128 0x3b
 1390 0122 05       		.uleb128 0x5
 1391 0123 49       		.uleb128 0x49
 1392 0124 13       		.uleb128 0x13
 1393 0125 02       		.uleb128 0x2
 1394 0126 18       		.uleb128 0x18
 1395 0127 00       		.byte	0
 1396 0128 00       		.byte	0
 1397 0129 11       		.uleb128 0x11
 1398 012a 34       		.uleb128 0x34
 1399 012b 00       		.byte	0
 1400 012c 03       		.uleb128 0x3
 1401 012d 0E       		.uleb128 0xe
 1402 012e 3A       		.uleb128 0x3a
 1403 012f 0B       		.uleb128 0xb
 1404 0130 3B       		.uleb128 0x3b
 1405 0131 0B       		.uleb128 0xb
 1406 0132 49       		.uleb128 0x49
 1407 0133 13       		.uleb128 0x13
 1408 0134 3F       		.uleb128 0x3f
 1409 0135 19       		.uleb128 0x19
 1410 0136 02       		.uleb128 0x2
 1411 0137 18       		.uleb128 0x18
 1412 0138 00       		.byte	0
 1413 0139 00       		.byte	0
 1414 013a 00       		.byte	0
 1415              		.section	.debug_aranges,"",%progbits
 1416 0000 A4000000 		.4byte	0xa4
 1417 0004 0200     		.2byte	0x2
 1418 0006 00000000 		.4byte	.Ldebug_info0
 1419 000a 04       		.byte	0x4
 1420 000b 00       		.byte	0
 1421 000c 0000     		.2byte	0
 1422 000e 0000     		.2byte	0
 1423 0010 00000000 		.4byte	.LFB0
 1424 0014 20000000 		.4byte	.LFE0-.LFB0
 1425 0018 00000000 		.4byte	.LFB1
 1426 001c 9C000000 		.4byte	.LFE1-.LFB1
 1427 0020 00000000 		.4byte	.LFB2
 1428 0024 20000000 		.4byte	.LFE2-.LFB2
 1429 0028 00000000 		.4byte	.LFB3
 1430 002c 20000000 		.4byte	.LFE3-.LFB3
 1431 0030 00000000 		.4byte	.LFB4
 1432 0034 20000000 		.4byte	.LFE4-.LFB4
 1433 0038 00000000 		.4byte	.LFB5
 1434 003c 20000000 		.4byte	.LFE5-.LFB5
 1435 0040 00000000 		.4byte	.LFB6
 1436 0044 1A000000 		.4byte	.LFE6-.LFB6
 1437 0048 00000000 		.4byte	.LFB7
 1438 004c 20000000 		.4byte	.LFE7-.LFB7
 1439 0050 00000000 		.4byte	.LFB8
 1440 0054 20000000 		.4byte	.LFE8-.LFB8
 1441 0058 00000000 		.4byte	.LFB9
 1442 005c 20000000 		.4byte	.LFE9-.LFB9
 1443 0060 00000000 		.4byte	.LFB10
 1444 0064 20000000 		.4byte	.LFE10-.LFB10
 1445 0068 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 42


 1446 006c 18000000 		.4byte	.LFE11-.LFB11
 1447 0070 00000000 		.4byte	.LFB12
 1448 0074 20000000 		.4byte	.LFE12-.LFB12
 1449 0078 00000000 		.4byte	.LFB13
 1450 007c 20000000 		.4byte	.LFE13-.LFB13
 1451 0080 00000000 		.4byte	.LFB14
 1452 0084 18000000 		.4byte	.LFE14-.LFB14
 1453 0088 00000000 		.4byte	.LFB15
 1454 008c 18000000 		.4byte	.LFE15-.LFB15
 1455 0090 00000000 		.4byte	.LFB16
 1456 0094 18000000 		.4byte	.LFE16-.LFB16
 1457 0098 00000000 		.4byte	.LFB17
 1458 009c 18000000 		.4byte	.LFE17-.LFB17
 1459 00a0 00000000 		.4byte	0
 1460 00a4 00000000 		.4byte	0
 1461              		.section	.debug_ranges,"",%progbits
 1462              	.Ldebug_ranges0:
 1463 0000 00000000 		.4byte	.LFB0
 1464 0004 20000000 		.4byte	.LFE0
 1465 0008 00000000 		.4byte	.LFB1
 1466 000c 9C000000 		.4byte	.LFE1
 1467 0010 00000000 		.4byte	.LFB2
 1468 0014 20000000 		.4byte	.LFE2
 1469 0018 00000000 		.4byte	.LFB3
 1470 001c 20000000 		.4byte	.LFE3
 1471 0020 00000000 		.4byte	.LFB4
 1472 0024 20000000 		.4byte	.LFE4
 1473 0028 00000000 		.4byte	.LFB5
 1474 002c 20000000 		.4byte	.LFE5
 1475 0030 00000000 		.4byte	.LFB6
 1476 0034 1A000000 		.4byte	.LFE6
 1477 0038 00000000 		.4byte	.LFB7
 1478 003c 20000000 		.4byte	.LFE7
 1479 0040 00000000 		.4byte	.LFB8
 1480 0044 20000000 		.4byte	.LFE8
 1481 0048 00000000 		.4byte	.LFB9
 1482 004c 20000000 		.4byte	.LFE9
 1483 0050 00000000 		.4byte	.LFB10
 1484 0054 20000000 		.4byte	.LFE10
 1485 0058 00000000 		.4byte	.LFB11
 1486 005c 18000000 		.4byte	.LFE11
 1487 0060 00000000 		.4byte	.LFB12
 1488 0064 20000000 		.4byte	.LFE12
 1489 0068 00000000 		.4byte	.LFB13
 1490 006c 20000000 		.4byte	.LFE13
 1491 0070 00000000 		.4byte	.LFB14
 1492 0074 18000000 		.4byte	.LFE14
 1493 0078 00000000 		.4byte	.LFB15
 1494 007c 18000000 		.4byte	.LFE15
 1495 0080 00000000 		.4byte	.LFB16
 1496 0084 18000000 		.4byte	.LFE16
 1497 0088 00000000 		.4byte	.LFB17
 1498 008c 18000000 		.4byte	.LFE17
 1499 0090 00000000 		.4byte	0
 1500 0094 00000000 		.4byte	0
 1501              		.section	.debug_line,"",%progbits
 1502              	.Ldebug_line0:
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 43


 1503 0000 AF010000 		.section	.debug_str,"MS",%progbits,1
 1503      02004500 
 1503      00000201 
 1503      FB0E0D00 
 1503      01010101 
 1504              	.LASF15:
 1505 0000 72656731 		.ascii	"reg16\000"
 1505      3600
 1506              	.LASF31:
 1507 0006 48435F50 		.ascii	"HC_PWM_SetInterruptMode\000"
 1507      574D5F53 
 1507      6574496E 
 1507      74657272 
 1507      7570744D 
 1508              	.LASF33:
 1509 001e 48435F50 		.ascii	"HC_PWM_ReadCounter\000"
 1509      574D5F52 
 1509      65616443 
 1509      6F756E74 
 1509      657200
 1510              	.LASF27:
 1511 0031 70657269 		.ascii	"period\000"
 1511      6F6400
 1512              	.LASF24:
 1513 0038 48435F50 		.ascii	"HC_PWM_ClearFIFO\000"
 1513      574D5F43 
 1513      6C656172 
 1513      4649464F 
 1513      00
 1514              	.LASF3:
 1515 0049 73686F72 		.ascii	"short unsigned int\000"
 1515      7420756E 
 1515      7369676E 
 1515      65642069 
 1515      6E7400
 1516              	.LASF28:
 1517 005c 48435F50 		.ascii	"HC_PWM_WriteCompare1\000"
 1517      574D5F57 
 1517      72697465 
 1517      436F6D70 
 1517      61726531 
 1518              	.LASF30:
 1519 0071 48435F50 		.ascii	"HC_PWM_WriteCompare2\000"
 1519      574D5F57 
 1519      72697465 
 1519      436F6D70 
 1519      61726532 
 1520              	.LASF20:
 1521 0086 48435F50 		.ascii	"HC_PWM_Enable\000"
 1521      574D5F45 
 1521      6E61626C 
 1521      6500
 1522              	.LASF25:
 1523 0094 48435F50 		.ascii	"HC_PWM_WritePeriod\000"
 1523      574D5F57 
 1523      72697465 
 1523      50657269 
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 44


 1523      6F6400
 1524              	.LASF11:
 1525 00a7 666C6F61 		.ascii	"float\000"
 1525      7400
 1526              	.LASF26:
 1527 00ad 636F756E 		.ascii	"counter\000"
 1527      74657200 
 1528              	.LASF1:
 1529 00b5 756E7369 		.ascii	"unsigned char\000"
 1529      676E6564 
 1529      20636861 
 1529      7200
 1530              	.LASF14:
 1531 00c3 72656738 		.ascii	"reg8\000"
 1531      00
 1532              	.LASF5:
 1533 00c8 6C6F6E67 		.ascii	"long unsigned int\000"
 1533      20756E73 
 1533      69676E65 
 1533      6420696E 
 1533      7400
 1534              	.LASF9:
 1535 00da 75696E74 		.ascii	"uint8\000"
 1535      3800
 1536              	.LASF37:
 1537 00e0 636F6E74 		.ascii	"control\000"
 1537      726F6C00 
 1538              	.LASF45:
 1539 00e8 48435F50 		.ascii	"HC_PWM_ReadControlRegister\000"
 1539      574D5F52 
 1539      65616443 
 1539      6F6E7472 
 1539      6F6C5265 
 1540              	.LASF34:
 1541 0103 48435F50 		.ascii	"HC_PWM_ReadStatusRegister\000"
 1541      574D5F52 
 1541      65616453 
 1541      74617475 
 1541      73526567 
 1542              	.LASF43:
 1543 011d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\HC_PWM.c\000"
 1543      6E657261 
 1543      7465645F 
 1543      536F7572 
 1543      63655C50 
 1544              	.LASF12:
 1545 013f 646F7562 		.ascii	"double\000"
 1545      6C6500
 1546              	.LASF36:
 1547 0146 48435F50 		.ascii	"HC_PWM_WriteControlRegister\000"
 1547      574D5F57 
 1547      72697465 
 1547      436F6E74 
 1547      726F6C52 
 1548              	.LASF10:
 1549 0162 75696E74 		.ascii	"uint16\000"
 1549      313600
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 45


 1550              	.LASF44:
 1551 0169 433A5C55 		.ascii	"C:\\Users\\xavieran\\Desktop\\ECE3091\\WorkingCamer"
 1551      73657273 
 1551      5C786176 
 1551      69657261 
 1551      6E5C4465 
 1552 0197 615C4361 		.ascii	"a\\Camera_vis\\camera_test.cydsn\000"
 1552      6D657261 
 1552      5F766973 
 1552      5C63616D 
 1552      6572615F 
 1553              	.LASF22:
 1554 01b6 48435F50 		.ascii	"HC_PWM_Init\000"
 1554      574D5F49 
 1554      6E697400 
 1555              	.LASF8:
 1556 01c2 756E7369 		.ascii	"unsigned int\000"
 1556      676E6564 
 1556      20696E74 
 1556      00
 1557              	.LASF7:
 1558 01cf 6C6F6E67 		.ascii	"long long unsigned int\000"
 1558      206C6F6E 
 1558      6720756E 
 1558      7369676E 
 1558      65642069 
 1559              	.LASF35:
 1560 01e6 72657375 		.ascii	"result\000"
 1560      6C7400
 1561              	.LASF42:
 1562 01ed 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1562      4320342E 
 1562      382E3420 
 1562      32303134 
 1562      30353236 
 1563 0220 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1563      20726576 
 1563      6973696F 
 1563      6E203231 
 1563      31333538 
 1564 0253 30202D66 		.ascii	"0 -ffunction-sections\000"
 1564      66756E63 
 1564      74696F6E 
 1564      2D736563 
 1564      74696F6E 
 1565              	.LASF46:
 1566 0269 48435F50 		.ascii	"HC_PWM_initVar\000"
 1566      574D5F69 
 1566      6E697456 
 1566      617200
 1567              	.LASF17:
 1568 0278 6374726C 		.ascii	"ctrl\000"
 1568      00
 1569              	.LASF16:
 1570 027d 73697A65 		.ascii	"sizetype\000"
 1570      74797065 
 1570      00
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 46


 1571              	.LASF6:
 1572 0286 6C6F6E67 		.ascii	"long long int\000"
 1572      206C6F6E 
 1572      6720696E 
 1572      7400
 1573              	.LASF32:
 1574 0294 696E7465 		.ascii	"interruptMode\000"
 1574      72727570 
 1574      744D6F64 
 1574      6500
 1575              	.LASF23:
 1576 02a2 48435F50 		.ascii	"HC_PWM_WriteCounter\000"
 1576      574D5F57 
 1576      72697465 
 1576      436F756E 
 1576      74657200 
 1577              	.LASF38:
 1578 02b6 48435F50 		.ascii	"HC_PWM_ReadCapture\000"
 1578      574D5F52 
 1578      65616443 
 1578      61707475 
 1578      726500
 1579              	.LASF2:
 1580 02c9 73686F72 		.ascii	"short int\000"
 1580      7420696E 
 1580      7400
 1581              	.LASF39:
 1582 02d3 48435F50 		.ascii	"HC_PWM_ReadCompare1\000"
 1582      574D5F52 
 1582      65616443 
 1582      6F6D7061 
 1582      72653100 
 1583              	.LASF40:
 1584 02e7 48435F50 		.ascii	"HC_PWM_ReadCompare2\000"
 1584      574D5F52 
 1584      65616443 
 1584      6F6D7061 
 1584      72653200 
 1585              	.LASF41:
 1586 02fb 48435F50 		.ascii	"HC_PWM_ReadPeriod\000"
 1586      574D5F52 
 1586      65616450 
 1586      6572696F 
 1586      6400
 1587              	.LASF4:
 1588 030d 6C6F6E67 		.ascii	"long int\000"
 1588      20696E74 
 1588      00
 1589              	.LASF13:
 1590 0316 63686172 		.ascii	"char\000"
 1590      00
 1591              	.LASF21:
 1592 031b 48435F50 		.ascii	"HC_PWM_Stop\000"
 1592      574D5F53 
 1592      746F7000 
 1593              	.LASF19:
 1594 0327 48435F50 		.ascii	"HC_PWM_Start\000"
ARM GAS  C:\Users\xavieran\AppData\Local\Temp\ccKNpO1j.s 			page 47


 1594      574D5F53 
 1594      74617274 
 1594      00
 1595              	.LASF0:
 1596 0334 7369676E 		.ascii	"signed char\000"
 1596      65642063 
 1596      68617200 
 1597              	.LASF29:
 1598 0340 636F6D70 		.ascii	"compare\000"
 1598      61726500 
 1599              	.LASF18:
 1600 0348 48435F50 		.ascii	"HC_PWM_interruptState\000"
 1600      574D5F69 
 1600      6E746572 
 1600      72757074 
 1600      53746174 
 1601              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
